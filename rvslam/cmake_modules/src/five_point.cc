// five_point.cc
//
// Author: Po-Chen Wu (pcwu0329@gmail.com)
//         Jongwoo Lim (jongwoo.lim@gmail.com)
//
// Most of the functions are modified from OpenCV3.0.0

#include <time.h> 
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <glog/logging.h>
#include <unsupported/Eigen/Polynomials>
#include <float.h> 
#include "rvslam_util.h"
#include "five_point.h"
#include "triangulation.h"

namespace rvslam {

bool RobustEstimateRelativePose5pt(const Mat3X& pts0,
                                   const Mat3X& pts1,
                                   Mat34* best_model,
                                   std::vector<int>* best_inliers,
                                   double *best_cost,
                                   double inlier_threshold,
                                   double failure_probability,
                                   int max_iterations) {
  CHECK_NOTNULL(best_model);
  CHECK_LT(failure_probability, 1.0);
  CHECK_GT(failure_probability, 0.0);
  CHECK_EQ(pts0.cols(), pts1.cols());
  
  //srand(time(NULL));

  FivePoint fp(5, inlier_threshold, failure_probability, max_iterations);
  fp.RobustEstimatePose(pts0, pts1, best_model, best_inliers, best_cost);
}

bool RobustEstimateRelativePose5pt(const Mat3X& pts0,
                                   const Mat3X& pts1,
                                   Mat3* best_em, 
                                   std::vector<Mat3>* rot_mat,
                                   std::vector<Vec3>* trans_vec,
                                   double inlier_threshold,
                                   double failure_probability,
                                   int max_iterations) {
  CHECK_NOTNULL(best_em);
  CHECK_LT(failure_probability, 1.0);
  CHECK_GT(failure_probability, 0.0);
  CHECK_EQ(pts0.cols(), pts1.cols());
  
  //srand(time(NULL));

  FivePoint fp(5, inlier_threshold, failure_probability, max_iterations);
  fp.RobustEstimatePose(pts0, pts1, best_em, rot_mat, trans_vec);
}

bool FivePoint::RobustEstimatePose(const Mat3X& pts0, const Mat3X& pts1,
                                   Mat34* best_model, 
                                   std::vector<int>* best_inliers,
                                   double *best_cost) {
  int count = pts0.cols(), good_count, max_good_count = 0;
  int i, iter, niters = std::max(max_iterations_, 1);
  std::vector<int>::iterator it;
  Mat3X spts0 = Mat::Ones(3, model_points_); 
  Mat3X spts1 = Mat::Ones(3, model_points_);
  Mat1X err(count), temp_err(count); 
  Mask mask(count), temp_mask(count);
  std::vector<Mat3> ems;
  Mat3 em, temp_em;
  int nmodels, ninliers;

  if (count == model_points_) {
    mask.fill(true);
    ComputeEssentialMat(pts0, pts1, &ems);
    nmodels = ems.size();

    if (nmodels == 0)
      return false;

    if (nmodels > 1)
      em = ems[rand() % nmodels];
    else
      em = ems[0];
  }
  else {
    for (iter = 0; iter < niters; ++iter) {
      bool found = GetSubset2D2D(pts0, pts1, &spts0, &spts1, 1000);
      if (!found) {
        if (iter == 0)
          return false;
        break;
      }
  
      ComputeEssentialMat(spts0, spts1, &ems);
      nmodels = ems.size();
      
      if (nmodels == 0)
        continue;
  
      for (i = 0; i < nmodels; ++i) {
        temp_em = ems[i];
        good_count = FindInliers(pts0, pts1, temp_em, &temp_err, &temp_mask);
  
        if (good_count > std::max(max_good_count, model_points_ - 1)) {
          em = temp_em;
          err = temp_err;
          mask = temp_mask;
          max_good_count = good_count;
          niters = UpdateRanSaCNumIters((double)(good_count)/count, niters);
        }
      }
    }
  }
  
  RecoverPose(em, pts0, pts1, &mask, &ninliers, best_model);
  
  if (best_cost) *best_cost = err.sum();
  if (best_inliers) {
    best_inliers->clear();
    best_inliers->resize(ninliers);
    it = best_inliers->begin();
    bool* mask_ptr = mask.data();
    for (i = 0; i < count; ++i)
      if (*(mask_ptr++) == true)
        *(it++) = i;  
  }  
  return true;
}

bool FivePoint::RobustEstimatePose(const Mat3X& pts0, const Mat3X& pts1,
                                   Mat3* best_em, std::vector<Mat3>* rot_mat,
                                   std::vector<Vec3>* trans_vec) {
  int count = pts0.cols(), good_count, max_good_count = 0;
  int i, iter, niters = std::max(max_iterations_, 1);
  std::vector<int>::iterator it;
  Mat3X spts0 = Mat::Ones(3, model_points_); 
  Mat3X spts1 = Mat::Ones(3, model_points_);
  Mat1X err(count), temp_err(count); 
  Mask mask(count), temp_mask(count);
  std::vector<Mat3> ems;
  Mat3 em, temp_em;
  int nmodels, ninliers;

  if (count == model_points_) {
    mask.fill(true);
    ComputeEssentialMat(pts0, pts1, &ems);
    nmodels = ems.size();

    if (nmodels == 0)
      return false;

    if (nmodels > 1)
      em = ems[rand() % nmodels];
    else
      em = ems[0];
  }
  else {
    for (iter = 0; iter < niters; ++iter) {
      bool found = GetSubset2D2D(pts0, pts1, &spts0, &spts1, 1000);
      if (!found) {
        if (iter == 0)
          return false;
        break;
      }
  
      ComputeEssentialMat(spts0, spts1, &ems);
      nmodels = ems.size();
      
      if (nmodels == 0)
        continue;
  
      for (i = 0; i < nmodels; ++i) {
        temp_em = ems[i];
        good_count = FindInliers(pts0, pts1, temp_em, &temp_err, &temp_mask);
  
        if (good_count > std::max(max_good_count, model_points_ - 1)) {
          em = temp_em;
          err = temp_err;
          mask = temp_mask;
          max_good_count = good_count;
          niters = UpdateRanSaCNumIters((double)(good_count)/count, niters);
        }
      }
    }
  }
  
  Mat3 R1, R2;
  Vec3 t1;
  DecomposeEssentialMat(em, &R1, &R2, &t1);
  *best_em = em;
  if (rot_mat && trans_vec) {
    rot_mat->clear();
    rot_mat->resize(2);
    trans_vec->clear();
    trans_vec->resize(2);
    (*rot_mat)[0] = R1;
    (*rot_mat)[1] = R2;
    (*trans_vec)[0] = t1;  
    (*trans_vec)[1] = -t1;  
  }
  
  return true;
}

void FivePoint::ComputeEssentialMat(const Mat3X& pts0, const Mat3X& pts1,
                                    std::vector<Mat3>* solutions) {
  Mat Q0 = pts0.transpose();
  Mat Q1 = pts1.transpose();

  int n = Q0.rows();
  Mat Q(n, 9);
  Q.col(0) = Q0.col(0).array() * Q1.col(0).array();
  Q.col(1) = Q0.col(1).array() * Q1.col(0).array();
  Q.col(2) = Q1.col(0);
  Q.col(3) = Q0.col(0).array() * Q1.col(1).array();
  Q.col(4) = Q0.col(1).array() * Q1.col(1).array();
  Q.col(5) = Q1.col(1);
  Q.col(6) = Q0.col(0);
  Q.col(7) = Q0.col(1);
  Q.col(8).fill(1.0);

  Eigen::JacobiSVD<Mat> svd(Q, Eigen::ComputeFullV);
  Mat V = svd.matrixV();

  Mat EE = V.block(0, 5, 9, 4);
  Eigen::Matrix<double, 10, 20, Eigen::RowMajor> AA;
  GetCoeffMat(EE.data(), AA.data());
  Mat A = AA.block(0, 0, 10, 10).inverse() * AA.block(0, 10, 10, 10);

  Eigen::Matrix<double, 3, 13, Eigen::RowMajor> B;
  double *b = B.data();
  for (int i = 0; i < 3; ++i) {
    Mat arow1 = A.row(i * 2 + 4);
    Mat arow2 = A.row(i * 2 + 5);
    Mat row1 = Mat::Zero(1, 13);
    Mat row2 = Mat::Zero(1, 13);

    row1.block(0, 1, 1, 3) = arow1.block(0, 0, 1, 3);
    row1.block(0, 5, 1, 3) = arow1.block(0, 3, 1, 3);
    row1.block(0, 9, 1, 4) = arow1.block(0, 6, 1, 4);
    
    row2.block(0, 0, 1, 3) = arow2.block(0, 0, 1, 3);
    row2.block(0, 4, 1, 3) = arow2.block(0, 3, 1, 3);
    row2.block(0, 8, 1, 4) = arow2.block(0, 6, 1, 4);

    B.row(i) = row1 - row2;
  }

  Vec coeffs(11);
  double *c = coeffs.data();
  
  c[10] =   b[0] * b[17] * b[34] + b[26] * b[4] * b[21] - b[26] * b[17] * b[8] 
          - b[13] * b[4] * b[34] - b[0] * b[21] * b[30] + b[13] * b[30] * b[8];
  c[9] =   b[26] * b[4] * b[22] + b[14] * b[30] * b[8] + b[13] * b[31] * b[8]
         + b[1] * b[17] * b[34] - b[13] * b[5] * b[34] + b[26] * b[5] * b[21]
         - b[0] * b[21] * b[31] - b[26] * b[17] * b[9] - b[1] * b[21] * b[30]
         + b[27] * b[4] * b[21] + b[0] * b[17] * b[35] - b[0] * b[22] * b[30]
         + b[13] * b[30] * b[9] + b[0] * b[18] * b[34] - b[27] * b[17] * b[8]
         - b[14] * b[4] * b[34] - b[13] * b[4] * b[35] - b[26] * b[18] * b[8];
  c[8] =   b[14] * b[30] * b[9] + b[14] * b[31] * b[8] + b[13] * b[31] * b[9]
         - b[13] * b[4] * b[36] - b[13] * b[5] * b[35] + b[15] * b[30] * b[8]
         - b[13] * b[6] * b[34] + b[13] * b[30] * b[10] + b[13] * b[32] * b[8]
         - b[14] * b[4] * b[35] - b[14] * b[5] * b[34] + b[26] * b[4] * b[23]
         + b[26] * b[5] * b[22] + b[26] * b[6] * b[21] - b[26] * b[17] * b[10]
         - b[15] * b[4] * b[34] - b[26] * b[18] * b[9] - b[26] * b[19] * b[8]
         + b[27] * b[4] * b[22] + b[27] * b[5] * b[21] - b[27] * b[17] * b[9]
         - b[27] * b[18] * b[8] - b[1] * b[21] * b[31] - b[0] * b[23] * b[30]
         - b[0] * b[21] * b[32] + b[28] * b[4] * b[21] - b[28] * b[17] * b[8]
         + b[2] * b[17] * b[34] + b[0] * b[18] * b[35] - b[0] * b[22] * b[31]
         + b[0] * b[17] * b[36] + b[0] * b[19] * b[34] - b[1] * b[22] * b[30]
         + b[1] * b[18] * b[34] + b[1] * b[17] * b[35] - b[2] * b[21] * b[30];
  c[7] =   b[14] * b[30] * b[10] + b[14] * b[32] * b[8] - b[3] * b[21] * b[30]
         + b[3] * b[17] * b[34] + b[13] * b[32] * b[9] + b[13] * b[33] * b[8]
         - b[13] * b[4] * b[37] - b[13] * b[5] * b[36] + b[15] * b[30] * b[9]
         + b[15] * b[31] * b[8] - b[16] * b[4] * b[34] - b[13] * b[6] * b[35]
         - b[13] * b[7] * b[34] + b[13] * b[30] * b[11] + b[13] * b[31] * b[10]
         + b[14] * b[31] * b[9] - b[14] * b[4] * b[36] - b[14] * b[5] * b[35]
         - b[14] * b[6] * b[34] + b[16] * b[30] * b[8] - b[26] * b[20] * b[8]
         + b[26] * b[4] * b[24] + b[26] * b[5] * b[23] + b[26] * b[6] * b[22]
         + b[26] * b[7] * b[21] - b[26] * b[17] * b[11] - b[15] * b[4] * b[35]
         - b[15] * b[5] * b[34] - b[26] * b[18] * b[10] - b[26] * b[19] * b[9]
         + b[27] * b[4] * b[23] + b[27] * b[5] * b[22] + b[27] * b[6] * b[21]
         - b[27] * b[17] * b[10] - b[27] * b[18] * b[9] - b[27] * b[19] * b[8]
         + b[0] * b[17] * b[37] - b[0] * b[23] * b[31] - b[0] * b[24] * b[30]
         - b[0] * b[21] * b[33] - b[29] * b[17] * b[8] + b[28] * b[4] * b[22]
         + b[28] * b[5] * b[21] - b[28] * b[17] * b[9] - b[28] * b[18] * b[8]
         + b[29] * b[4] * b[21] + b[1] * b[19] * b[34] - b[2] * b[21] * b[31]
         + b[0] * b[20] * b[34] + b[0] * b[19] * b[35] + b[0] * b[18] * b[36]
         - b[0] * b[22] * b[32] - b[1] * b[23] * b[30] - b[1] * b[21] * b[32]
         + b[1] * b[18] * b[35] - b[1] * b[22] * b[31] - b[2] * b[22] * b[30]
         + b[2] * b[17] * b[35] + b[1] * b[17] * b[36] + b[2] * b[18] * b[34];
  c[6] =  -b[14] * b[6] * b[35] - b[14] * b[7] * b[34] - b[3] * b[22] * b[30]
         - b[3] * b[21] * b[31] + b[3] * b[17] * b[35] + b[3] * b[18] * b[34]
         + b[13] * b[32] * b[10] + b[13] * b[33] * b[9] - b[13] * b[4] * b[38]
         - b[13] * b[5] * b[37] - b[15] * b[6] * b[34] + b[15] * b[30] * b[10]
         + b[15] * b[32] * b[8] - b[16] * b[4] * b[35] - b[13] * b[6] * b[36]
         - b[13] * b[7] * b[35] + b[13] * b[31] * b[11] + b[13] * b[30] * b[12]
         + b[14] * b[32] * b[9] + b[14] * b[33] * b[8] - b[14] * b[4] * b[37]
         - b[14] * b[5] * b[36] + b[16] * b[30] * b[9] + b[16] * b[31] * b[8]
         - b[26] * b[20] * b[9] + b[26] * b[4] * b[25] + b[26] * b[5] * b[24]
         + b[26] * b[6] * b[23] + b[26] * b[7] * b[22] - b[26] * b[17] * b[12]
         + b[14] * b[30] * b[11] + b[14] * b[31] * b[10] + b[15] * b[31] * b[9]
         - b[15] * b[4] * b[36] - b[15] * b[5] * b[35] - b[26] * b[18] * b[11]
         - b[26] * b[19] * b[10] - b[27] * b[20] * b[8] + b[27] * b[4] * b[24]
         + b[27] * b[5] * b[23] + b[27] * b[6] * b[22] + b[27] * b[7] * b[21]
         - b[27] * b[17] * b[11] - b[27] * b[18] * b[10] - b[27] * b[19] * b[9]
         - b[16] * b[5] * b[34] - b[29] * b[17] * b[9] - b[29] * b[18] * b[8]
         + b[28] * b[4] * b[23] + b[28] * b[5] * b[22] + b[28] * b[6] * b[21]
         - b[28] * b[17] * b[10] - b[28] * b[18] * b[9] - b[28] * b[19] * b[8]
         + b[29] * b[4] * b[22] + b[29] * b[5] * b[21] - b[2] * b[23] * b[30]
         + b[2] * b[18] * b[35] - b[1] * b[22] * b[32] - b[2] * b[21] * b[32]
         + b[2] * b[19] * b[34] + b[0] * b[19] * b[36] - b[0] * b[22] * b[33]
         + b[0] * b[20] * b[35] - b[0] * b[23] * b[32] - b[0] * b[25] * b[30]
         + b[0] * b[17] * b[38] + b[0] * b[18] * b[37] - b[0] * b[24] * b[31]
         + b[1] * b[17] * b[37] - b[1] * b[23] * b[31] - b[1] * b[24] * b[30]
         - b[1] * b[21] * b[33] + b[1] * b[20] * b[34] + b[1] * b[19] * b[35]
         + b[1] * b[18] * b[36] + b[2] * b[17] * b[36] - b[2] * b[22] * b[31];
  c[5] =  -b[14] * b[6] * b[36] - b[14] * b[7] * b[35] + b[14] * b[31] * b[11]
         - b[3] * b[23] * b[30] - b[3] * b[21] * b[32] + b[3] * b[18] * b[35]
         - b[3] * b[22] * b[31] + b[3] * b[17] * b[36] + b[3] * b[19] * b[34]
         + b[13] * b[32] * b[11] + b[13] * b[33] * b[10] - b[13] * b[5] * b[38]
         - b[15] * b[6] * b[35] - b[15] * b[7] * b[34] + b[15] * b[30] * b[11]
         + b[15] * b[31] * b[10] + b[16] * b[31] * b[9] - b[13] * b[6] * b[37]
         - b[13] * b[7] * b[36] + b[13] * b[31] * b[12] + b[14] * b[32] * b[10]
         + b[14] * b[33] * b[9] - b[14] * b[4] * b[38] - b[14] * b[5] * b[37]
         - b[16] * b[6] * b[34] + b[16] * b[30] * b[10] + b[16] * b[32] * b[8]
         - b[26] * b[20] * b[10] + b[26] * b[5] * b[25] + b[26] * b[6] * b[24]
         + b[26] * b[7] * b[23] + b[14] * b[30] * b[12] + b[15] * b[32] * b[9]
         + b[15] * b[33] * b[8] - b[15] * b[4] * b[37] - b[15] * b[5] * b[36]
         + b[29] * b[5] * b[22] + b[29] * b[6] * b[21] - b[26] * b[18] * b[12]
         - b[26] * b[19] * b[11] - b[27] * b[20] * b[9] + b[27] * b[4] * b[25]
         + b[27] * b[5] * b[24] + b[27] * b[6] * b[23] + b[27] * b[7] * b[22]
         - b[27] * b[17] * b[12] - b[27] * b[18] * b[11] - b[27] * b[19] * b[10]
         - b[28] * b[20] * b[8] - b[16] * b[4] * b[36] - b[16] * b[5] * b[35]
         - b[29] * b[17] * b[10] - b[29] * b[18] * b[9] - b[29] * b[19] * b[8]
         + b[28] * b[4] * b[24] + b[28] * b[5] * b[23] + b[28] * b[6] * b[22]
         + b[28] * b[7] * b[21] - b[28] * b[17] * b[11] - b[28] * b[18] * b[10]
         - b[28] * b[19] * b[9] + b[29] * b[4] * b[23] - b[2] * b[22] * b[32]
         - b[2] * b[21] * b[33] - b[1] * b[24] * b[31] + b[0] * b[18] * b[38]
         - b[0] * b[24] * b[32] + b[0] * b[19] * b[37] + b[0] * b[20] * b[36]
         - b[0] * b[25] * b[31] - b[0] * b[23] * b[33] + b[1] * b[19] * b[36]
         - b[1] * b[22] * b[33] + b[1] * b[20] * b[35] + b[2] * b[19] * b[35]
         - b[2] * b[24] * b[30] - b[2] * b[23] * b[31] + b[2] * b[20] * b[34]
         + b[2] * b[17] * b[37] - b[1] * b[25] * b[30] + b[1] * b[18] * b[37]
         + b[1] * b[17] * b[38] - b[1] * b[23] * b[32] + b[2] * b[18] * b[36];
  c[4] =  -b[14] * b[6] * b[37] - b[14] * b[7] * b[36] + b[14] * b[31] * b[12]
         + b[3] * b[17] * b[37] - b[3] * b[23] * b[31] - b[3] * b[24] * b[30]
         - b[3] * b[21] * b[33] + b[3] * b[20] * b[34] + b[3] * b[19] * b[35]
         + b[3] * b[18] * b[36] - b[3] * b[22] * b[32] + b[13] * b[32] * b[12]
         + b[13] * b[33] * b[11] - b[15] * b[6] * b[36] - b[15] * b[7] * b[35]
         + b[15] * b[31] * b[11] + b[15] * b[30] * b[12] + b[16] * b[32] * b[9]
         + b[16] * b[33] * b[8] - b[13] * b[6] * b[38] - b[13] * b[7] * b[37]
         + b[14] * b[32] * b[11] + b[14] * b[33] * b[10] - b[14] * b[5] * b[38]
         - b[16] * b[6] * b[35] - b[16] * b[7] * b[34] + b[16] * b[30] * b[11]
         + b[16] * b[31] * b[10] - b[26] * b[19] * b[12] - b[26] * b[20] * b[11]
         + b[26] * b[6] * b[25] + b[26] * b[7] * b[24] + b[15] * b[32] * b[10]
         + b[15] * b[33] * b[9] - b[15] * b[4] * b[38] - b[15] * b[5] * b[37]
         + b[29] * b[5] * b[23] + b[29] * b[6] * b[22] + b[29] * b[7] * b[21]
         - b[27] * b[20] * b[10] + b[27] * b[5] * b[25] + b[27] * b[6] * b[24]
         + b[27] * b[7] * b[23] - b[27] * b[18] * b[12] - b[27] * b[19] * b[11]
         - b[28] * b[20] * b[9] - b[16] * b[4] * b[37] - b[16] * b[5] * b[36]
         + b[0] * b[19] * b[38] - b[0] * b[24] * b[33] + b[0] * b[20] * b[37]
         - b[29] * b[17] * b[11] - b[29] * b[18] * b[10] - b[29] * b[19] * b[9]
         + b[28] * b[4] * b[25] + b[28] * b[5] * b[24] + b[28] * b[6] * b[23]
         + b[28] * b[7] * b[22] - b[28] * b[17] * b[12] - b[28] * b[18] * b[11]
         - b[28] * b[19] * b[10] - b[29] * b[20] * b[8] + b[29] * b[4] * b[24]
         + b[2] * b[18] * b[37] - b[0] * b[25] * b[32] + b[1] * b[18] * b[38]
         - b[1] * b[24] * b[32] + b[1] * b[19] * b[37] + b[1] * b[20] * b[36]
         - b[1] * b[25] * b[31] + b[2] * b[17] * b[38] + b[2] * b[19] * b[36]
         - b[2] * b[24] * b[31] - b[2] * b[22] * b[33] - b[2] * b[23] * b[32]
         + b[2] * b[20] * b[35] - b[1] * b[23] * b[33] - b[2] * b[25] * b[30];
  c[3] =  -b[14] * b[6] * b[38] - b[14] * b[7] * b[37] + b[3] * b[19] * b[36]
         - b[3] * b[22] * b[33] + b[3] * b[20] * b[35] - b[3] * b[23] * b[32]
         - b[3] * b[25] * b[30] + b[3] * b[17] * b[38] + b[3] * b[18] * b[37]
         - b[3] * b[24] * b[31] - b[15] * b[6] * b[37] - b[15] * b[7] * b[36]
         + b[15] * b[31] * b[12] + b[16] * b[32] * b[10] + b[16] * b[33] * b[9]
         + b[13] * b[33] * b[12] - b[13] * b[7] * b[38] + b[14] * b[32] * b[12]
         + b[14] * b[33] * b[11] - b[16] * b[6] * b[36] - b[16] * b[7] * b[35]
         + b[16] * b[31] * b[11] + b[16] * b[30] * b[12] + b[15] * b[32] * b[11]
         + b[15] * b[33] * b[10] - b[15] * b[5] * b[38] + b[29] * b[5] * b[24]
         + b[29] * b[6] * b[23] - b[26] * b[20] * b[12] + b[26] * b[7] * b[25]
         - b[27] * b[19] * b[12] - b[27] * b[20] * b[11] + b[27] * b[6] * b[25]
         + b[27] * b[7] * b[24] - b[28] * b[20] * b[10] - b[16] * b[4] * b[38]
         - b[16] * b[5] * b[37] + b[29] * b[7] * b[22] - b[29] * b[17] * b[12]
         - b[29] * b[18] * b[11] - b[29] * b[19] * b[10] + b[28] * b[5] * b[25]
         + b[28] * b[6] * b[24] + b[28] * b[7] * b[23] - b[28] * b[18] * b[12]
         - b[28] * b[19] * b[11] - b[29] * b[20] * b[9] + b[29] * b[4] * b[25]
         - b[2] * b[24] * b[32] + b[0] * b[20] * b[38] - b[0] * b[25] * b[33]
         + b[1] * b[19] * b[38] - b[1] * b[24] * b[33] + b[1] * b[20] * b[37]
         - b[2] * b[25] * b[31] + b[2] * b[20] * b[36] - b[1] * b[25] * b[32]
         + b[2] * b[19] * b[37] + b[2] * b[18] * b[38] - b[2] * b[23] * b[33];
  c[2] =   b[3] * b[18] * b[38] - b[3] * b[24] * b[32] + b[3] * b[19] * b[37]
         + b[3] * b[20] * b[36] - b[3] * b[25] * b[31] - b[3] * b[23] * b[33]
         - b[15] * b[6] * b[38] - b[15] * b[7] * b[37] + b[16] * b[32] * b[11]
         + b[16] * b[33] * b[10] - b[16] * b[5] * b[38] - b[16] * b[6] * b[37]
         - b[16] * b[7] * b[36] + b[16] * b[31] * b[12] + b[14] * b[33] * b[12]
         - b[14] * b[7] * b[38] + b[15] * b[32] * b[12] + b[15] * b[33] * b[11]
         + b[29] * b[5] * b[25] + b[29] * b[6] * b[24] - b[27] * b[20] * b[12]
         + b[27] * b[7] * b[25] - b[28] * b[19] * b[12] - b[28] * b[20] * b[11]
         + b[29] * b[7] * b[23] - b[29] * b[18] * b[12] - b[29] * b[19] * b[11]
         + b[28] * b[6] * b[25] + b[28] * b[7] * b[24] - b[29] * b[20] * b[10]
         + b[2] * b[19] * b[38] - b[1] * b[25] * b[33] + b[2] * b[20] * b[37]
         - b[2] * b[24] * b[33] - b[2] * b[25] * b[32] + b[1] * b[20] * b[38];
  c[1] =   b[29] * b[7] * b[24] - b[29] * b[20] * b[11] + b[2] * b[20] * b[38]
         - b[2] * b[25] * b[33] - b[28] * b[20] * b[12] + b[28] * b[7] * b[25]
         - b[29] * b[19] * b[12] - b[3] * b[24] * b[33] + b[15] * b[33] * b[12]
         + b[3] * b[19] * b[38] - b[16] * b[6] * b[38] + b[3] * b[20] * b[37]
         + b[16] * b[32] * b[12] + b[29] * b[6] * b[25] - b[16] * b[7] * b[37]
         - b[3] * b[25] * b[32] - b[15] * b[7] * b[38] + b[16] * b[33] * b[11];
  c[0] =  -b[29] * b[20] * b[12] + b[29] * b[7] * b[25] + b[16] * b[33] * b[12]
         - b[16] * b[7] * b[38] + b[3] * b[20] * b[38] - b[3] * b[25] * b[33];
  
  Eigen::PolynomialSolver<double, 10> poly_solver(coeffs);
  Eigen::Matrix<Complex, 10, 1> roots = poly_solver.roots();

  int rn = roots.size();
  Vec xs(rn), ys(rn), zs(rn);
  int  count = 0;

  // Backsubstitution of each solution 
  solutions->clear();
  for (size_t i = 0; i < rn; ++i) {
    if (fabs(roots(i).imag()) > 1e-10) continue;
    double z1 = roots[i].real();
    double z2 = z1 * z1;
    double z3 = z2 * z1;
    double z4 = z3 * z1;

    Mat3 Bz;
    for (int j = 0; j < 3; ++j) {
      const double* br = b + j * 13;
      Bz(j, 0) = br[0] * z3 + br[1] * z2 + br[2] * z1 + br[3];
      Bz(j, 1) = br[4] * z3 + br[5] * z2 + br[6] * z1 + br[7];
      Bz(j, 2) = br[8] * z4 + br[9] * z3 + br[10] * z2 + br[11] * z1 + br[12];
    }
    
    Eigen::JacobiSVD<Mat> svd0(Bz, Eigen::ComputeFullV);
    Mat3 xy = svd0.matrixV();
    Vec3 xy1 = xy.col(xy.cols()-1);

    if (fabs(xy1(2)) < 1e-10) continue;
    xs(count) = xy1(0) / xy1(2);
    ys(count) = xy1(1) / xy1(2);
    zs(count) = z1;

    Mat evec =   EE.col(0) * xs(count) + EE.col(1) * ys(count) 
               + EE.col(2) * zs(count) + EE.col(3);
    evec /= evec.norm();
    
    Mat3 em;
    em << evec(0), evec(1), evec(2),
          evec(3), evec(4), evec(5),
          evec(6), evec(7), evec(8); 
    solutions->push_back(em);
    count++;
  }
}

void FivePoint::GetCoeffMat(double* e, double* a) {
  double ep2[36], ep3[36];
  for (int i = 0; i < 36; ++i) {
    ep2[i] = e[i] * e[i];
    ep3[i] = ep2[i] * e[i];
  }

  a[0] =   e[33] * e[28] * e[32] - e[33] * e[31] * e[29] + e[30] * e[34] * e[29]
         - e[30] * e[28] * e[35] - e[27] * e[32] * e[34] + e[27] * e[31] * e[35]
         ;
  a[146] =   .5 * e[6] * ep2[8] - .5 * e[6] * ep2[5] + .5 * ep3[6] 
           + .5 * e[6] * ep2[7] - .5 * e[6] * ep2[4] + e[0] * e[2] * e[8]
           + e[3] * e[4] * e[7] + e[3] * e[5] * e[8] + e[0] * e[1] * e[7]
           - .5 * e[6] * ep2[1] - .5 * e[6] * ep2[2] + .5 * ep2[0] * e[6]
           + .5 * ep2[3] * e[6];
  a[1] =   e[30] * e[34] * e[2] + e[33] * e[1] * e[32] - e[3] * e[28] * e[35]
         + e[0] * e[31] * e[35] + e[3] * e[34] * e[29] - e[30] * e[1] * e[35]
         + e[27] * e[31] * e[8] - e[27] * e[32] * e[7] - e[30] * e[28] * e[8]
         - e[33] * e[31] * e[2] - e[0] * e[32] * e[34] + e[6] * e[28] * e[32]
         - e[33] * e[4] * e[29] + e[33] * e[28] * e[5] + e[30] * e[7] * e[29]
         + e[27] * e[4] * e[35] - e[27] * e[5] * e[34] - e[6] * e[31] * e[29];
  a[147] =   e[9] * e[27] * e[15] + e[9] * e[29] * e[17] + e[9] * e[11] * e[35]
           + e[9] * e[28] * e[16] + e[9] * e[10] * e[34] + e[27] * e[11] * e[17]
           + e[27] * e[10] * e[16] + e[12] * e[30] * e[15]
           + e[12] * e[32] * e[17] + e[12] * e[14] * e[35]
           + e[12] * e[31] * e[16] + e[12] * e[13] * e[34]
           + e[30] * e[14] * e[17] + e[30] * e[13] * e[16]
           + e[15] * e[35] * e[17] + e[15] * e[34] * e[16]
           - e[15] * e[28] * e[10] - e[15] * e[31] * e[13]
           - e[15] * e[32] * e[14] - e[15] * e[29] * e[11]
           + .5 * ep2[9] * e[33] + .5 * e[33] * ep2[16] - .5 * e[33] * ep2[11]
           + .5 * e[33] * ep2[12] + 1.5 * e[33] * ep2[15] + .5 * e[33] * ep2[17]
           - .5 * e[33] * ep2[10] - .5 * e[33] * ep2[14] - .5 * e[33] * ep2[13];
  a[2] =  -e[33] * e[22] * e[29] - e[33] * e[31] * e[20] - e[27] * e[32] * e[25]
         + e[27] * e[22] * e[35] - e[27] * e[23] * e[34] + e[27] * e[31] * e[26]
         + e[33] * e[28] * e[23] - e[21] * e[28] * e[35] + e[30] * e[25] * e[29]
         + e[24] * e[28] * e[32] - e[24] * e[31] * e[29] + e[18] * e[31] * e[35]
         - e[30] * e[28] * e[26] - e[30] * e[19] * e[35] + e[21] * e[34] * e[29]
         + e[33] * e[19] * e[32] - e[18] * e[32] * e[34]
         + e[30] * e[34] * e[20];
  a[144] =   e[18] * e[2] * e[17] + e[3] * e[21] * e[15] + e[3] * e[12] * e[24]
           + e[3] * e[23] * e[17] + e[3] * e[14] * e[26] + e[3] * e[22] * e[16]
           + e[3] * e[13] * e[25] + 3. * e[6] * e[24] * e[15]
           + e[6] * e[26] * e[17] + e[6] * e[25] * e[16] + e[0] * e[20] * e[17]
           + e[0] * e[11] * e[26] + e[0] * e[19] * e[16] + e[0] * e[10] * e[25]
           + e[15] * e[26] * e[8] - e[15] * e[20] * e[2] - e[15] * e[19] * e[1]
           - e[15] * e[22] * e[4] + e[15] * e[25] * e[7] - e[15] * e[23] * e[5]
           + e[12] * e[21] * e[6] + e[12] * e[22] * e[7] + e[12] * e[4] * e[25]
           + e[12] * e[23] * e[8] + e[12] * e[5] * e[26] - e[24] * e[11] * e[2]
           - e[24] * e[10] * e[1] - e[24] * e[13] * e[4] + e[24] * e[16] * e[7]
           - e[24] * e[14] * e[5] + e[24] * e[17] * e[8] + e[21] * e[13] * e[7]
           + e[21] * e[4] * e[16] + e[21] * e[14] * e[8] + e[21] * e[5] * e[17]
           - e[6] * e[23] * e[14] - e[6] * e[20] * e[11] - e[6] * e[19] * e[10]
           - e[6] * e[22] * e[13] + e[9] * e[18] * e[6] + e[9] * e[0] * e[24]
           + e[9] * e[19] * e[7] + e[9] * e[1] * e[25] + e[9] * e[20] * e[8]
           + e[9] * e[2] * e[26] + e[18] * e[0] * e[15] + e[18] * e[10] * e[7]
           + e[18] * e[1] * e[16] + e[18] * e[11] * e[8];
  a[3] =   e[33] * e[10] * e[32] + e[33] * e[28] * e[14] - e[33] * e[13] * e[29]
         - e[33] * e[31] * e[11] + e[9] * e[31] * e[35] - e[9] * e[32] * e[34]
         + e[27] * e[13] * e[35] - e[27] * e[32] * e[16] + e[27] * e[31] * e[17]
         - e[27] * e[14] * e[34] + e[12] * e[34] * e[29] - e[12] * e[28] * e[35]
         + e[30] * e[34] * e[11] + e[30] * e[16] * e[29] - e[30] * e[10] * e[35]
         - e[30] * e[28] * e[17] + e[15] * e[28] * e[32] - e[15] * e[31] * e[29]
         ;
  a[145] =   e[0] * e[27] * e[6] + e[0] * e[28] * e[7] + e[0] * e[1] * e[34]
           + e[0] * e[29] * e[8] + e[0] * e[2] * e[35] + e[6] * e[34] * e[7]
           - e[6] * e[32] * e[5] + e[6] * e[30] * e[3] + e[6] * e[35] * e[8]
           - e[6] * e[29] * e[2] - e[6] * e[28] * e[1] - e[6] * e[31] * e[4]
           + e[27] * e[1] * e[7] + e[27] * e[2] * e[8] + e[3] * e[31] * e[7]
           + e[3] * e[4] * e[34] + e[3] * e[32] * e[8] + e[3] * e[5] * e[35]
           + e[30] * e[4] * e[7] + e[30] * e[5] * e[8] + .5 * ep2[0] * e[33]
           + 1.5 * e[33] * ep2[6] - .5 * e[33] * ep2[4] - .5 * e[33] * ep2[5]
           - .5 * e[33] * ep2[1] + .5 * e[33] * ep2[7] + .5 * e[33] * ep2[3]
           - .5 * e[33] * ep2[2] + .5 * e[33] * ep2[8];
  a[4] =  -e[0] * e[23] * e[16] + e[9] * e[4] * e[26] + e[9] * e[22] * e[8]
         - e[9] * e[5] * e[25] - e[9] * e[23] * e[7] + e[18] * e[4] * e[17]
         + e[18] * e[13] * e[8] - e[18] * e[5] * e[16] - e[18] * e[14] * e[7]
         + e[3] * e[16] * e[20] + e[3] * e[25] * e[11] - e[3] * e[10] * e[26]
         - e[3] * e[19] * e[17] + e[12] * e[7] * e[20] + e[12] * e[25] * e[2]
         - e[12] * e[1] * e[26] - e[12] * e[19] * e[8] + e[21] * e[7] * e[11]
         + e[21] * e[16] * e[2] - e[21] * e[1] * e[17] - e[21] * e[10] * e[8]
         + e[6] * e[10] * e[23] + e[6] * e[19] * e[14] - e[6] * e[13] * e[20]
         - e[6] * e[22] * e[11] + e[15] * e[1] * e[23] + e[15] * e[19] * e[5]
         - e[15] * e[4] * e[20] - e[15] * e[22] * e[2] + e[24] * e[1] * e[14]
         + e[24] * e[10] * e[5] - e[24] * e[4] * e[11] - e[24] * e[13] * e[2]
         + e[0] * e[13] * e[26] + e[0] * e[22] * e[17] - e[0] * e[14] * e[25];
  a[150] =   e[18] * e[19] * e[25] + .5 * ep3[24] - .5 * e[24] * ep2[23]
           + e[18] * e[20] * e[26] + e[21] * e[22] * e[25]
           + e[21] * e[23] * e[26] - .5 * e[24] * ep2[19] + .5 * ep2[21] * e[24]
           + .5 * e[24] * ep2[26] - .5 * e[24] * ep2[20] + .5 * ep2[18] * e[24]
           - .5 * e[24] * ep2[22] + .5 * e[24] * ep2[25];
  a[5] =  -e[3] * e[1] * e[35] - e[0] * e[32] * e[7] + e[27] * e[4] * e[8]
         + e[33] * e[1] * e[5] - e[33] * e[4] * e[2] + e[0] * e[4] * e[35]
         + e[3] * e[34] * e[2] - e[30] * e[1] * e[8] + e[30] * e[7] * e[2]
         - e[6] * e[4] * e[29] + e[3] * e[7] * e[29] + e[6] * e[1] * e[32]
         - e[0] * e[5] * e[34] - e[3] * e[28] * e[8] + e[0] * e[31] * e[8]
         + e[6] * e[28] * e[5] - e[6] * e[31] * e[2] - e[27] * e[5] * e[7];
  a[151] =   e[33] * e[16] * e[7] - e[33] * e[14] * e[5] + e[33] * e[17] * e[8]
           + e[30] * e[13] * e[7] + e[30] * e[4] * e[16] + e[30] * e[14] * e[8]
           + e[30] * e[5] * e[17] + e[6] * e[27] * e[9] - e[6] * e[28] * e[10]
           - e[6] * e[31] * e[13] - e[6] * e[32] * e[14] - e[6] * e[29] * e[11]
           + e[9] * e[28] * e[7] + e[9] * e[1] * e[34] + e[9] * e[29] * e[8]
           + e[9] * e[2] * e[35] + e[27] * e[10] * e[7] + e[27] * e[1] * e[16]
           + e[27] * e[11] * e[8] + e[27] * e[2] * e[17] + e[3] * e[30] * e[15]
           + e[3] * e[12] * e[33] + e[3] * e[32] * e[17] + e[3] * e[14] * e[35]
           + e[3] * e[31] * e[16] + e[3] * e[13] * e[34]
           + 3. * e[6] * e[33] * e[15] + e[6] * e[35] * e[17]
           + e[6] * e[34] * e[16] + e[0] * e[27] * e[15] + e[0] * e[9] * e[33]
           + e[0] * e[29] * e[17] + e[0] * e[11] * e[35] + e[0] * e[28] * e[16]
           + e[0] * e[10] * e[34] + e[15] * e[34] * e[7] - e[15] * e[32] * e[5]
           + e[15] * e[35] * e[8] - e[15] * e[29] * e[2] - e[15] * e[28] * e[1]
           - e[15] * e[31] * e[4] + e[12] * e[30] * e[6] + e[12] * e[31] * e[7]
           + e[12] * e[4] * e[34] + e[12] * e[32] * e[8] + e[12] * e[5] * e[35]
           - e[33] * e[11] * e[2] - e[33] * e[10] * e[1] - e[33] * e[13] * e[4];
  a[6] =   e[6] * e[1] * e[5] - e[6] * e[4] * e[2] + e[3] * e[7] * e[2]
         + e[0] * e[4] * e[8] - e[0] * e[5] * e[7] - e[3] * e[1] * e[8];
  a[148] =   .5 * ep3[15] + e[9] * e[10] * e[16] - .5 * e[15] * ep2[11]
           + e[9] * e[11] * e[17] + .5 * ep2[12] * e[15] + .5 * e[15] * ep2[16]
           + .5 * e[15] * ep2[17] - .5 * e[15] * ep2[13] + .5 * ep2[9] * e[15]
           + e[12] * e[14] * e[17] - .5 * e[15] * ep2[10] - .5 * e[15] * ep2[14]
           + e[12] * e[13] * e[16];
  a[7] =   e[15] * e[28] * e[14] - e[15] * e[13] * e[29] - e[15] * e[31] * e[11]
         + e[33] * e[10] * e[14] - e[33] * e[13] * e[11] + e[9] * e[13] * e[35]
         - e[9] * e[32] * e[16] + e[9] * e[31] * e[17] - e[9] * e[14] * e[34]
         + e[27] * e[13] * e[17] - e[27] * e[14] * e[16] + e[12] * e[34] * e[11]
         + e[12] * e[16] * e[29] - e[12] * e[10] * e[35] - e[12] * e[28] * e[17]
         + e[30] * e[16] * e[11] - e[30] * e[10] * e[17] + e[15] * e[10] * e[32]
         ;
  a[149] =   e[18] * e[27] * e[24] + e[18] * e[28] * e[25]
           + e[18] * e[19] * e[34] + e[18] * e[29] * e[26]
           + e[18] * e[20] * e[35] + e[27] * e[19] * e[25]
           + e[27] * e[20] * e[26] + e[21] * e[30] * e[24]
           + e[21] * e[31] * e[25] + e[21] * e[22] * e[34]
           + e[21] * e[32] * e[26] + e[21] * e[23] * e[35]
           + e[30] * e[22] * e[25] + e[30] * e[23] * e[26]
           + e[24] * e[34] * e[25] + e[24] * e[35] * e[26]
           - e[24] * e[29] * e[20] - e[24] * e[31] * e[22]
           - e[24] * e[32] * e[23] - e[24] * e[28] * e[19]
           + 1.5 * e[33] * ep2[24] + .5 * e[33] * ep2[25] + .5 * e[33] * ep2[26]
           - .5 * e[33] * ep2[23] - .5 * e[33] * ep2[19] - .5 * e[33] * ep2[20]
           - .5 * e[33] * ep2[22] + .5 * ep2[18] * e[33] + .5 * ep2[21] * e[33];
  a[9] =   e[21] * e[25] * e[29] - e[27] * e[23] * e[25] + e[24] * e[19] * e[32]
         - e[21] * e[28] * e[26] - e[21] * e[19] * e[35] + e[18] * e[31] * e[26]
         - e[30] * e[19] * e[26] - e[24] * e[31] * e[20] + e[24] * e[28] * e[23]
         + e[27] * e[22] * e[26] + e[30] * e[25] * e[20] - e[33] * e[22] * e[20]
         + e[33] * e[19] * e[23] + e[21] * e[34] * e[20] - e[18] * e[23] * e[34]
         - e[24] * e[22] * e[29] - e[18] * e[32] * e[25] + e[18] * e[22] * e[35]
         ;
  a[155] =   e[12] * e[14] * e[8] + e[12] * e[5] * e[17] + e[15] * e[16] * e[7]
           + e[15] * e[17] * e[8] + e[0] * e[11] * e[17] + e[0] * e[9] * e[15]
           + e[0] * e[10] * e[16] + e[3] * e[14] * e[17] + e[3] * e[13] * e[16]
           + e[9] * e[10] * e[7] + e[9] * e[1] * e[16] + e[9] * e[11] * e[8]
           + e[9] * e[2] * e[17] - e[15] * e[11] * e[2] - e[15] * e[10] * e[1]
           - e[15] * e[13] * e[4] - e[15] * e[14] * e[5] + e[12] * e[3] * e[15]
           + e[12] * e[13] * e[7] + e[12] * e[4] * e[16] + .5 * ep2[12] * e[6]
           + 1.5 * ep2[15] * e[6] + .5 * e[6] * ep2[17] + .5 * e[6] * ep2[16]
           + .5 * e[6] * ep2[9] - .5 * e[6] * ep2[11] - .5 * e[6] * ep2[10]
           - .5 * e[6] * ep2[14] - .5 * e[6] * ep2[13];
  a[8] =  -e[9] * e[14] * e[16] - e[12] * e[10] * e[17] + e[9] * e[13] * e[17]
         - e[15] * e[13] * e[11] + e[15] * e[10] * e[14] + e[12] * e[16] * e[11]
         ;
  a[154] =   e[21] * e[14] * e[17] + e[21] * e[13] * e[16]
           + e[15] * e[26] * e[17] + e[15] * e[25] * e[16]
           - e[15] * e[23] * e[14] - e[15] * e[20] * e[11]
           - e[15] * e[19] * e[10] - e[15] * e[22] * e[13]
           + e[9] * e[20] * e[17] + e[9] * e[11] * e[26] + e[9] * e[19] * e[16]
           + e[9] * e[10] * e[25] + .5 * ep2[12] * e[24] + 1.5 * e[24] * ep2[15]
           + .5 * e[24] * ep2[17] + .5 * e[24] * ep2[16] + .5 * ep2[9] * e[24]
           - .5 * e[24] * ep2[11] - .5 * e[24] * ep2[10] - .5 * e[24] * ep2[14]
           - .5 * e[24] * ep2[13] + e[18] * e[11] * e[17] + e[18] * e[9] * e[15]
           + e[18] * e[10] * e[16] + e[12] * e[21] * e[15]
           + e[12] * e[23] * e[17] + e[12] * e[14] * e[26]
           + e[12] * e[22] * e[16] + e[12] * e[13] * e[25];
  a[11] =  -e[9] * e[5] * e[34] + e[9] * e[31] * e[8] - e[9] * e[32] * e[7]
          + e[27] * e[4] * e[17] + e[27] * e[13] * e[8] - e[27] * e[5] * e[16]
          - e[27] * e[14] * e[7] + e[0] * e[13] * e[35] - e[0] * e[32] * e[16]
          + e[0] * e[31] * e[17] - e[0] * e[14] * e[34] + e[9] * e[4] * e[35]
          + e[6] * e[10] * e[32] + e[6] * e[28] * e[14] - e[6] * e[13] * e[29]
          - e[6] * e[31] * e[11] + e[15] * e[1] * e[32] + e[3] * e[34] * e[11]
          + e[3] * e[16] * e[29] - e[3] * e[10] * e[35] - e[3] * e[28] * e[17]
          - e[12] * e[1] * e[35] + e[12] * e[7] * e[29] + e[12] * e[34] * e[2]
          - e[12] * e[28] * e[8] + e[15] * e[28] * e[5] - e[15] * e[4] * e[29]
          - e[15] * e[31] * e[2] + e[33] * e[1] * e[14] + e[33] * e[10] * e[5]
          - e[33] * e[4] * e[11] - e[33] * e[13] * e[2] + e[30] * e[7] * e[11]
          + e[30] * e[16] * e[2] - e[30] * e[1] * e[17] - e[30] * e[10] * e[8];
  a[153] =   e[21] * e[31] * e[7] + e[21] * e[4] * e[34] + e[21] * e[32] * e[8]
           + e[21] * e[5] * e[35] + e[30] * e[22] * e[7] + e[30] * e[4] * e[25]
           + e[30] * e[23] * e[8] + e[30] * e[5] * e[26]
           + 3. * e[24] * e[33] * e[6] + e[24] * e[34] * e[7]
           + e[24] * e[35] * e[8] + e[33] * e[25] * e[7] + e[33] * e[26] * e[8]
           + e[0] * e[27] * e[24] + e[0] * e[18] * e[33] + e[0] * e[28] * e[25]
           + e[0] * e[19] * e[34] + e[0] * e[29] * e[26] + e[0] * e[20] * e[35]
           + e[18] * e[27] * e[6] + e[18] * e[28] * e[7] + e[18] * e[1] * e[34]
           + e[18] * e[29] * e[8] + e[18] * e[2] * e[35] + e[27] * e[19] * e[7]
           + e[27] * e[1] * e[25] + e[27] * e[20] * e[8] + e[27] * e[2] * e[26]
           + e[3] * e[30] * e[24] + e[3] * e[21] * e[33] + e[3] * e[31] * e[25]
           + e[3] * e[22] * e[34] + e[3] * e[32] * e[26] + e[3] * e[23] * e[35]
           + e[6] * e[30] * e[21] - e[6] * e[29] * e[20] + e[6] * e[35] * e[26]
           - e[6] * e[31] * e[22] - e[6] * e[32] * e[23] - e[6] * e[28] * e[19]
           + e[6] * e[34] * e[25] - e[24] * e[32] * e[5] - e[24] * e[29] * e[2]
           - e[24] * e[28] * e[1] - e[24] * e[31] * e[4] - e[33] * e[20] * e[2]
           - e[33] * e[19] * e[1] - e[33] * e[22] * e[4] - e[33] * e[23] * e[5];
  a[10] =   e[21] * e[25] * e[20] - e[21] * e[19] * e[26]
          + e[18] * e[22] * e[26] - e[18] * e[23] * e[25] - e[24] * e[22] * e[20]
          + e[24] * e[19] * e[23];
  a[152] =   e[3] * e[4] * e[25] + e[3] * e[23] * e[8] + e[3] * e[5] * e[26]
           + e[21] * e[4] * e[7] + e[21] * e[5] * e[8] + e[6] * e[25] * e[7]
           + e[6] * e[26] * e[8] + e[0] * e[19] * e[7] + e[0] * e[1] * e[25]
           + e[0] * e[20] * e[8] + e[0] * e[2] * e[26] - e[6] * e[20] * e[2]
           - e[6] * e[19] * e[1] - e[6] * e[22] * e[4] - e[6] * e[23] * e[5]
           + e[18] * e[1] * e[7] + e[18] * e[0] * e[6] + e[18] * e[2] * e[8]
           + e[3] * e[21] * e[6] + e[3] * e[22] * e[7] - .5 * e[24] * ep2[4]
           + .5 * e[24] * ep2[0] + 1.5 * e[24] * ep2[6] - .5 * e[24] * ep2[5]
           - .5 * e[24] * ep2[1] + .5 * e[24] * ep2[7] + .5 * e[24] * ep2[3]
           - .5 * e[24] * ep2[2] + .5 * e[24] * ep2[8];
  a[13] =   e[6] * e[28] * e[23] - e[6] * e[22] * e[29] - e[6] * e[31] * e[20]
          - e[3] * e[19] * e[35] + e[3] * e[34] * e[20] + e[3] * e[25] * e[29]
          - e[21] * e[1] * e[35] + e[21] * e[7] * e[29] + e[21] * e[34] * e[2]
          + e[24] * e[1] * e[32] + e[24] * e[28] * e[5] - e[24] * e[4] * e[29]
          - e[24] * e[31] * e[2] + e[33] * e[1] * e[23] + e[33] * e[19] * e[5]
          - e[33] * e[4] * e[20] - e[33] * e[22] * e[2] - e[21] * e[28] * e[8]
          + e[30] * e[7] * e[20] + e[30] * e[25] * e[2] - e[30] * e[1] * e[26]
          + e[18] * e[4] * e[35] - e[18] * e[5] * e[34] + e[18] * e[31] * e[8]
          - e[18] * e[32] * e[7] + e[27] * e[4] * e[26] + e[27] * e[22] * e[8]
          - e[27] * e[5] * e[25] - e[27] * e[23] * e[7] - e[3] * e[28] * e[26]
          - e[0] * e[32] * e[25] + e[0] * e[22] * e[35] - e[0] * e[23] * e[34]
          + e[0] * e[31] * e[26] - e[30] * e[19] * e[8] + e[6] * e[19] * e[32];
  a[159] =   .5 * ep2[18] * e[6] + .5 * ep2[21] * e[6] + 1.5 * ep2[24] * e[6]
           + .5 * e[6] * ep2[26] - .5 * e[6] * ep2[23] - .5 * e[6] * ep2[19]
           - .5 * e[6] * ep2[20] - .5 * e[6] * ep2[22] + .5 * e[6] * ep2[25]
           + e[21] * e[3] * e[24] + e[18] * e[20] * e[8] + e[21] * e[4] * e[25]
           + e[18] * e[19] * e[7] + e[18] * e[1] * e[25] + e[21] * e[22] * e[7]
           + e[21] * e[23] * e[8] + e[18] * e[0] * e[24] + e[18] * e[2] * e[26]
           + e[21] * e[5] * e[26] + e[24] * e[26] * e[8] - e[24] * e[20] * e[2]
           - e[24] * e[19] * e[1] - e[24] * e[22] * e[4] + e[24] * e[25] * e[7]
           - e[24] * e[23] * e[5] + e[0] * e[19] * e[25] + e[0] * e[20] * e[26]
           + e[3] * e[22] * e[25] + e[3] * e[23] * e[26];
  a[12] =   e[18] * e[4] * e[8] + e[3] * e[7] * e[20] + e[3] * e[25] * e[2]
          - e[3] * e[1] * e[26] - e[18] * e[5] * e[7] + e[6] * e[1] * e[23]
          + e[6] * e[19] * e[5] - e[6] * e[4] * e[20] - e[6] * e[22] * e[2]
          + e[21] * e[7] * e[2] - e[21] * e[1] * e[8] + e[24] * e[1] * e[5]
          - e[24] * e[4] * e[2] - e[3] * e[19] * e[8] + e[0] * e[4] * e[26]
          + e[0] * e[22] * e[8] - e[0] * e[5] * e[25] - e[0] * e[23] * e[7];
  a[158] =   e[9] * e[1] * e[7] + e[9] * e[0] * e[6] + e[9] * e[2] * e[8]
           + e[3] * e[12] * e[6] + e[3] * e[13] * e[7] + e[3] * e[4] * e[16]
           + e[3] * e[14] * e[8] + e[3] * e[5] * e[17] + e[12] * e[4] * e[7]
           + e[12] * e[5] * e[8] + e[6] * e[16] * e[7] + e[6] * e[17] * e[8]
           - e[6] * e[11] * e[2] - e[6] * e[10] * e[1] - e[6] * e[13] * e[4]
           - e[6] * e[14] * e[5] + e[0] * e[10] * e[7] + e[0] * e[1] * e[16]
           + e[0] * e[11] * e[8] + e[0] * e[2] * e[17] + .5 * ep2[3] * e[15]
           + 1.5 * e[15] * ep2[6] + .5 * e[15] * ep2[7] + .5 * e[15] * ep2[8]
           + .5 * ep2[0] * e[15] - .5 * e[15] * ep2[4] - .5 * e[15] * ep2[5]
           - .5 * e[15] * ep2[1] - .5 * e[15] * ep2[2];
  a[15] =  -e[15] * e[13] * e[2] - e[6] * e[13] * e[11] - e[15] * e[4] * e[11]
          + e[12] * e[16] * e[2] - e[3] * e[10] * e[17] + e[3] * e[16] * e[11]
          + e[0] * e[13] * e[17] - e[0] * e[14] * e[16] + e[15] * e[1] * e[14]
          - e[12] * e[10] * e[8] + e[9] * e[4] * e[17] + e[9] * e[13] * e[8]
          - e[9] * e[5] * e[16] - e[9] * e[14] * e[7] + e[15] * e[10] * e[5]
          + e[12] * e[7] * e[11] + e[6] * e[10] * e[14] - e[12] * e[1] * e[17];
  a[157] =   e[12] * e[30] * e[24] + e[12] * e[21] * e[33]
           + e[12] * e[31] * e[25] + e[12] * e[22] * e[34]
           + e[12] * e[32] * e[26] + e[12] * e[23] * e[35]
           + e[9] * e[27] * e[24] + e[9] * e[18] * e[33] + e[9] * e[28] * e[25]
           + e[9] * e[19] * e[34] + e[9] * e[29] * e[26] + e[9] * e[20] * e[35]
           + e[21] * e[30] * e[15] + e[21] * e[32] * e[17]
           + e[21] * e[14] * e[35] + e[21] * e[31] * e[16]
           + e[21] * e[13] * e[34] + e[30] * e[23] * e[17]
           + e[30] * e[14] * e[26] + e[30] * e[22] * e[16]
           + e[30] * e[13] * e[25] + e[15] * e[27] * e[18]
           + 3. * e[15] * e[33] * e[24] - e[15] * e[29] * e[20]
           + e[15] * e[35] * e[26] - e[15] * e[31] * e[22]
           - e[15] * e[32] * e[23] - e[15] * e[28] * e[19]
           + e[15] * e[34] * e[25] + e[18] * e[29] * e[17]
           + e[18] * e[11] * e[35] + e[18] * e[28] * e[16]
           + e[18] * e[10] * e[34] + e[27] * e[20] * e[17]
           + e[27] * e[11] * e[26] + e[27] * e[19] * e[16]
           + e[27] * e[10] * e[25] - e[24] * e[28] * e[10]
           - e[24] * e[31] * e[13] - e[24] * e[32] * e[14]
           + e[24] * e[34] * e[16] + e[24] * e[35] * e[17]
           - e[24] * e[29] * e[11] - e[33] * e[23] * e[14]
           + e[33] * e[25] * e[16] + e[33] * e[26] * e[17]
           - e[33] * e[20] * e[11] - e[33] * e[19] * e[10]
           - e[33] * e[22] * e[13];
  a[14] =   e[18] * e[13] * e[17] + e[9] * e[13] * e[26] + e[9] * e[22] * e[17]
          - e[9] * e[14] * e[25] - e[18] * e[14] * e[16] - e[15] * e[13] * e[20]
          - e[15] * e[22] * e[11] + e[12] * e[16] * e[20]
          + e[12] * e[25] * e[11] - e[12] * e[10] * e[26]
          - e[12] * e[19] * e[17] + e[21] * e[16] * e[11]
          - e[21] * e[10] * e[17] - e[9] * e[23] * e[16] + e[24] * e[10] * e[14]
          - e[24] * e[13] * e[11] + e[15] * e[10] * e[23]
          + e[15] * e[19] * e[14];
  a[156] =   e[21] * e[12] * e[24] + e[21] * e[23] * e[17]
           + e[21] * e[14] * e[26] + e[21] * e[22] * e[16]
           + e[21] * e[13] * e[25] + e[24] * e[26] * e[17]
           + e[24] * e[25] * e[16] + e[9] * e[19] * e[25] + e[9] * e[18] * e[24]
           + e[9] * e[20] * e[26] + e[12] * e[22] * e[25]
           + e[12] * e[23] * e[26] + e[18] * e[20] * e[17]
           + e[18] * e[11] * e[26] + e[18] * e[19] * e[16]
           + e[18] * e[10] * e[25] - e[24] * e[23] * e[14]
           - e[24] * e[20] * e[11] - e[24] * e[19] * e[10]
           - e[24] * e[22] * e[13] + .5 * ep2[21] * e[15]
           + 1.5 * ep2[24] * e[15] + .5 * e[15] * ep2[25] + .5 * e[15] * ep2[26]
           + .5 * e[15] * ep2[18] - .5 * e[15] * ep2[23] - .5 * e[15] * ep2[19]
           - .5 * e[15] * ep2[20] - .5 * e[15] * ep2[22];
  a[18] =   e[6] * e[1] * e[14] + e[15] * e[1] * e[5]
          - e[0] * e[5] * e[16] - e[0] * e[14] * e[7] + e[0] * e[13] * e[8]
          - e[15] * e[4] * e[2] + e[12] * e[7] * e[2] + e[6] * e[10] * e[5]
          + e[3] * e[7] * e[11] - e[6] * e[4] * e[11] + e[3] * e[16] * e[2]
          - e[6] * e[13] * e[2] - e[3] * e[1] * e[17] - e[9] * e[5] * e[7]
          - e[3] * e[10] * e[8] - e[12] * e[1] * e[8] + e[0] * e[4] * e[17]
          + e[9] * e[4] * e[8];
  a[128] =   -.5 * e[14] * ep2[16] - .5 * e[14] * ep2[10] - .5 * e[14] * ep2[9]
           + e[11] * e[9] * e[12] + .5 * ep3[14] + e[17] * e[13] * e[16]
           + .5 * e[14] * ep2[12] + e[11] * e[10] * e[13] - .5 * e[14] * ep2[15]
           + .5 * e[14] * ep2[17] + e[17] * e[12] * e[15] + .5 * ep2[11] * e[14]
           + .5 * e[14] * ep2[13];
  a[19] =  -e[21] * e[19] * e[8] + e[18] * e[4] * e[26] - e[18] * e[5] * e[25]
          - e[18] * e[23] * e[7] + e[21] * e[25] * e[2] - e[21] * e[1] * e[26]
          + e[6] * e[19] * e[23] + e[18] * e[22] * e[8] - e[0] * e[23] * e[25]
          - e[6] * e[22] * e[20] + e[24] * e[1] * e[23] + e[24] * e[19] * e[5]
          - e[24] * e[4] * e[20] - e[24] * e[22] * e[2] + e[3] * e[25] * e[20]
          - e[3] * e[19] * e[26] + e[0] * e[22] * e[26] + e[21] * e[7] * e[20];
  a[129] =   .5 * ep2[20] * e[32] + 1.5 * e[32] * ep2[23] + .5 * e[32] * ep2[22]
           + .5 * e[32] * ep2[21] + .5 * e[32] * ep2[26] - .5 * e[32] * ep2[18]
           - .5 * e[32] * ep2[19] - .5 * e[32] * ep2[24] - .5 * e[32] * ep2[25]
           + e[20] * e[27] * e[21] + e[20] * e[18] * e[30]
           + e[20] * e[28] * e[22] + e[20] * e[19] * e[31]
           + e[20] * e[29] * e[23] + e[29] * e[19] * e[22]
           + e[29] * e[18] * e[21] + e[23] * e[30] * e[21]
           + e[23] * e[31] * e[22] + e[26] * e[30] * e[24]
           + e[26] * e[21] * e[33] + e[26] * e[31] * e[25]
           + e[26] * e[22] * e[34] + e[26] * e[23] * e[35]
           + e[35] * e[22] * e[25] + e[35] * e[21] * e[24]
           - e[23] * e[27] * e[18] - e[23] * e[33] * e[24]
           - e[23] * e[28] * e[19] - e[23] * e[34] * e[25];
  a[16] =  -e[9] * e[23] * e[25] - e[21] * e[10] * e[26] - e[21] * e[19] * e[17]
          - e[18] * e[23] * e[16] + e[18] * e[13] * e[26]
          + e[12] * e[25] * e[20] - e[12] * e[19] * e[26]
          - e[15] * e[22] * e[20] + e[21] * e[16] * e[20]
          + e[21] * e[25] * e[11] + e[24] * e[10] * e[23]
          + e[24] * e[19] * e[14] - e[24] * e[13] * e[20]
          - e[24] * e[22] * e[11] + e[18] * e[22] * e[17]
          - e[18] * e[14] * e[25] + e[9] * e[22] * e[26] + e[15] * e[19] * e[23]
          ;
  a[130] =   .5 * e[23] * ep2[21] + e[20] * e[19] * e[22]
           + e[20] * e[18] * e[21] + .5 * ep3[23] + e[26] * e[22] * e[25]
           + .5 * e[23] * ep2[26] - .5 * e[23] * ep2[18] + .5 * e[23] * ep2[22]
           - .5 * e[23] * ep2[19] + e[26] * e[21] * e[24] + .5 * ep2[20] * e[23]
           - .5 * e[23] * ep2[24] - .5 * e[23] * ep2[25];
  a[17] =   e[18] * e[13] * e[35] - e[18] * e[32] * e[16]
          + e[18] * e[31] * e[17] - e[18] * e[14] * e[34]
          + e[27] * e[13] * e[26] + e[27] * e[22] * e[17]
          - e[27] * e[14] * e[25] - e[27] * e[23] * e[16]
          - e[9] * e[32] * e[25] + e[9] * e[22] * e[35] - e[9] * e[23] * e[34]
          + e[9] * e[31] * e[26] + e[15] * e[19] * e[32]
          + e[15] * e[28] * e[23] - e[15] * e[22] * e[29]
          - e[15] * e[31] * e[20] + e[24] * e[10] * e[32]
          + e[24] * e[28] * e[14] - e[24] * e[13] * e[29]
          - e[24] * e[31] * e[11] + e[33] * e[10] * e[23]
          + e[33] * e[19] * e[14] - e[33] * e[13] * e[20]
          - e[33] * e[22] * e[11] + e[21] * e[16] * e[29]
          - e[21] * e[10] * e[35] - e[21] * e[28] * e[17]
          + e[30] * e[16] * e[20] + e[30] * e[25] * e[11]
          - e[30] * e[10] * e[26] - e[30] * e[19] * e[17]
          - e[12] * e[28] * e[26] - e[12] * e[19] * e[35]
          + e[12] * e[34] * e[20] + e[12] * e[25] * e[29]
          + e[21] * e[34] * e[11];
  a[131] =  -e[32] * e[10] * e[1] + e[32] * e[13] * e[4] - e[32] * e[16] * e[7]
           - e[32] * e[15] * e[6] - e[32] * e[9] * e[0] + e[32] * e[12] * e[3]
           + e[17] * e[30] * e[6] + e[17] * e[3] * e[33] + e[17] * e[31] * e[7]
           + e[17] * e[4] * e[34] + e[17] * e[5] * e[35] - e[5] * e[27] * e[9]
           - e[5] * e[28] * e[10] - e[5] * e[33] * e[15] - e[5] * e[34] * e[16]
           + e[5] * e[29] * e[11] + e[35] * e[12] * e[6] + e[35] * e[3] * e[15]
           + e[35] * e[13] * e[7] + e[35] * e[4] * e[16] + e[11] * e[27] * e[3]
           + e[11] * e[0] * e[30] + e[11] * e[28] * e[4] + e[11] * e[1] * e[31]
           + e[29] * e[9] * e[3] + e[29] * e[0] * e[12] + e[29] * e[10] * e[4]
           + e[29] * e[1] * e[13] + e[5] * e[30] * e[12] 
           + 3. * e[5] * e[32] * e[14] + e[5] * e[31] * e[13]
           + e[8] * e[30] * e[15] + e[8] * e[12] * e[33] + e[8] * e[32] * e[17]
           + e[8] * e[14] * e[35] + e[8] * e[31] * e[16] + e[8] * e[13] * e[34]
           + e[2] * e[27] * e[12] + e[2] * e[9] * e[30] + e[2] * e[29] * e[14]
           + e[2] * e[11] * e[32] + e[2] * e[28] * e[13] + e[2] * e[10] * e[31]
           - e[14] * e[27] * e[0] - e[14] * e[34] * e[7] - e[14] * e[33] * e[6]
           + e[14] * e[30] * e[3] - e[14] * e[28] * e[1] + e[14] * e[31] * e[4];
  a[22] =   .5 * e[18] * ep2[29] + .5 * e[18] * ep2[28] + .5 * e[18] * ep2[30]
          + .5 * e[18] * ep2[33] - .5 * e[18] * ep2[32] - .5 * e[18] * ep2[31]
          - .5 * e[18] * ep2[34] - .5 * e[18] * ep2[35] + 1.5 * e[18] * ep2[27]
          + e[27] * e[28] * e[19] + e[27] * e[29] * e[20]
          + e[21] * e[27] * e[30] + e[21] * e[29] * e[32]
          + e[21] * e[28] * e[31] + e[30] * e[28] * e[22]
          + e[30] * e[19] * e[31] + e[30] * e[29] * e[23]
          + e[30] * e[20] * e[32] + e[24] * e[27] * e[33]
          + e[24] * e[29] * e[35] + e[24] * e[28] * e[34]
          + e[33] * e[28] * e[25] + e[33] * e[19] * e[34]
          + e[33] * e[29] * e[26] + e[33] * e[20] * e[35]
          - e[27] * e[35] * e[26] - e[27] * e[31] * e[22]
          - e[27] * e[32] * e[23] - e[27] * e[34] * e[25];
  a[132] =   e[20] * e[1] * e[4] + e[20] * e[0] * e[3] + e[20] * e[2] * e[5]
           + e[5] * e[21] * e[3] + e[5] * e[22] * e[4] + e[8] * e[21] * e[6]
           + e[8] * e[3] * e[24] + e[8] * e[22] * e[7] + e[8] * e[4] * e[25]
           + e[8] * e[5] * e[26] + e[26] * e[4] * e[7] + e[26] * e[3] * e[6]
           + e[2] * e[18] * e[3] + e[2] * e[0] * e[21] + e[2] * e[19] * e[4]
           + e[2] * e[1] * e[22] - e[5] * e[19] * e[1] - e[5] * e[18] * e[0]
           - e[5] * e[25] * e[7] - e[5] * e[24] * e[6] + .5 * e[23] * ep2[4]
           - .5 * e[23] * ep2[0] - .5 * e[23] * ep2[6] + 1.5 * e[23] * ep2[5]
           - .5 * e[23] * ep2[1] - .5 * e[23] * ep2[7] + .5 * e[23] * ep2[3]
           + .5 * e[23] * ep2[2] + .5 * e[23] * ep2[8];
  a[23] =   1.5 * e[9] * ep2[27] + .5 * e[9] * ep2[29] + .5 * e[9] * ep2[28]
          - .5 * e[9] * ep2[32] - .5 * e[9] * ep2[31] + .5 * e[9] * ep2[33]
          + .5 * e[9] * ep2[30] - .5 * e[9] * ep2[34] - .5 * e[9] * ep2[35]
          + e[33] * e[27] * e[15] + e[33] * e[29] * e[17]
          + e[33] * e[11] * e[35] + e[33] * e[28] * e[16]
          + e[33] * e[10] * e[34] + e[27] * e[29] * e[11]
          + e[27] * e[28] * e[10] + e[27] * e[30] * e[12]
          - e[27] * e[31] * e[13] - e[27] * e[32] * e[14]
          - e[27] * e[34] * e[16] - e[27] * e[35] * e[17]
          + e[30] * e[29] * e[14] + e[30] * e[11] * e[32]
          + e[30] * e[28] * e[13] + e[30] * e[10] * e[31]
          + e[12] * e[29] * e[32] + e[12] * e[28] * e[31]
          + e[15] * e[29] * e[35] + e[15] * e[28] * e[34];
  a[133] =  -e[32] * e[24] * e[6] + e[8] * e[30] * e[24] + e[8] * e[21] * e[33]
           + e[8] * e[31] * e[25] + e[8] * e[22] * e[34] + e[26] * e[30] * e[6]
           + e[26] * e[3] * e[33] + e[26] * e[31] * e[7] + e[26] * e[4] * e[34]
           + e[26] * e[32] * e[8] + e[26] * e[5] * e[35] + e[35] * e[21] * e[6]
           + e[35] * e[3] * e[24] + e[35] * e[22] * e[7] + e[35] * e[4] * e[25]
           + e[35] * e[23] * e[8] + e[2] * e[27] * e[21] + e[2] * e[18] * e[30]
           + e[2] * e[28] * e[22] + e[2] * e[19] * e[31] + e[2] * e[29] * e[23]
           + e[2] * e[20] * e[32] + e[20] * e[27] * e[3] + e[20] * e[0] * e[30]
           + e[20] * e[28] * e[4] + e[20] * e[1] * e[31] + e[20] * e[29] * e[5]
           + e[29] * e[18] * e[3] + e[29] * e[0] * e[21] + e[29] * e[19] * e[4]
           + e[29] * e[1] * e[22] + e[5] * e[30] * e[21] + e[5] * e[31] * e[22]
           + 3. * e[5] * e[32] * e[23] - e[5] * e[27] * e[18]
           - e[5] * e[33] * e[24] - e[5] * e[28] * e[19] - e[5] * e[34] * e[25]
           - e[23] * e[27] * e[0] - e[23] * e[34] * e[7] - e[23] * e[33] * e[6]
           + e[23] * e[30] * e[3] - e[23] * e[28] * e[1] + e[23] * e[31] * e[4]
           + e[32] * e[21] * e[3] - e[32] * e[19] * e[1] + e[32] * e[22] * e[4]
           - e[32] * e[18] * e[0] - e[32] * e[25] * e[7];
  a[20] =   .5 * e[27] * ep2[33] - .5 * e[27] * ep2[32] - .5 * e[27] * ep2[31]
          - .5 * e[27] * ep2[34] - .5 * e[27] * ep2[35] + e[33] * e[29] * e[35]
          + .5 * e[27] * ep2[29] + e[30] * e[29] * e[32] + e[30] * e[28] * e[31]
          + e[33] * e[28] * e[34] + .5 * e[27] * ep2[28] + .5 * e[27] * ep2[30]
          + .5 * ep3[27];
  a[134] =   e[14] * e[21] * e[12] + e[14] * e[22] * e[13]
           + e[17] * e[21] * e[15] + e[17] * e[12] * e[24]
           + e[17] * e[14] * e[26] + e[17] * e[22] * e[16]
           + e[17] * e[13] * e[25] + e[26] * e[12] * e[15]
           + e[26] * e[13] * e[16] - e[14] * e[24] * e[15]
           - e[14] * e[25] * e[16] - e[14] * e[18] * e[9]
           - e[14] * e[19] * e[10] + e[11] * e[18] * e[12]
           + e[11] * e[9] * e[21] + e[11] * e[19] * e[13]
           + e[11] * e[10] * e[22] + e[20] * e[11] * e[14]
           + e[20] * e[9] * e[12] + e[20] * e[10] * e[13]
           + 1.5 * e[23] * ep2[14] + .5 * e[23] * ep2[12] + .5 * e[23] * ep2[13]
           + .5 * e[23] * ep2[17] + .5 * ep2[11] * e[23] - .5 * e[23] * ep2[16]
           - .5 * e[23] * ep2[9] - .5 * e[23] * ep2[15] - .5 * e[23] * ep2[10];
  a[21] =   1.5 * e[0] * ep2[27] + .5 * e[0] * ep2[29] + .5 * e[0] * ep2[28]
          + .5 * e[0] * ep2[30] - .5 * e[0] * ep2[32] - .5 * e[0] * ep2[31]
          + .5 * e[0] * ep2[33] - .5 * e[0] * ep2[34] - .5 * e[0] * ep2[35]
          - e[27] * e[31] * e[4] + e[3] * e[27] * e[30] + e[3] * e[29] * e[32]
          + e[3] * e[28] * e[31] + e[30] * e[28] * e[4] + e[30] * e[1] * e[31]
          + e[30] * e[29] * e[5] + e[30] * e[2] * e[32] + e[6] * e[27] * e[33]
          + e[6] * e[29] * e[35] + e[6] * e[28] * e[34] + e[27] * e[28] * e[1]
          + e[27] * e[29] * e[2] + e[33] * e[28] * e[7] + e[33] * e[1] * e[34]
          + e[33] * e[29] * e[8] + e[33] * e[2] * e[35] - e[27] * e[34] * e[7]
          - e[27] * e[32] * e[5] - e[27] * e[35] * e[8];
  a[135] =   e[14] * e[12] * e[3] + e[14] * e[13] * e[4] + e[17] * e[12] * e[6]
           + e[17] * e[3] * e[15] + e[17] * e[13] * e[7] + e[17] * e[4] * e[16]
           + e[17] * e[14] * e[8] + e[8] * e[12] * e[15] + e[8] * e[13] * e[16]
           + e[2] * e[11] * e[14] + e[2] * e[9] * e[12] + e[2] * e[10] * e[13]
           + e[11] * e[9] * e[3] + e[11] * e[0] * e[12] + e[11] * e[10] * e[4]
           + e[11] * e[1] * e[13] - e[14] * e[10] * e[1] - e[14] * e[16] * e[7]
           - e[14] * e[15] * e[6] - e[14] * e[9] * e[0] - .5 * e[5] * ep2[16]
           - .5 * e[5] * ep2[9] + .5 * e[5] * ep2[11] + .5 * e[5] * ep2[12]
           - .5 * e[5] * ep2[15] - .5 * e[5] * ep2[10] + .5 * e[5] * ep2[13]
           + 1.5 * ep2[14] * e[5] + .5 * e[5] * ep2[17];
  a[27] =   1.5 * e[27] * ep2[9] - .5 * e[27] * ep2[16] + .5 * e[27] * ep2[11]
          + .5 * e[27] * ep2[12] + .5 * e[27] * ep2[15] - .5 * e[27] * ep2[17]
          + .5 * e[27] * ep2[10] - .5 * e[27] * ep2[14] - .5 * e[27] * ep2[13]
          + e[12] * e[10] * e[31] + e[30] * e[11] * e[14]
          + e[30] * e[10] * e[13] + e[15] * e[9] * e[33] + e[15] * e[29] * e[17]
          + e[15] * e[11] * e[35] + e[15] * e[28] * e[16]
          + e[15] * e[10] * e[34] + e[33] * e[11] * e[17]
          + e[33] * e[10] * e[16] - e[9] * e[31] * e[13] - e[9] * e[32] * e[14]
          - e[9] * e[34] * e[16] - e[9] * e[35] * e[17] + e[9] * e[29] * e[11]
          + e[9] * e[28] * e[10] + e[12] * e[9] * e[30] + e[12] * e[29] * e[14]
          + e[12] * e[11] * e[32] + e[12] * e[28] * e[13];
  a[137] =   e[29] * e[18] * e[12] + e[29] * e[9] * e[21]
           + e[29] * e[19] * e[13] + e[29] * e[10] * e[22]
           + e[17] * e[30] * e[24] + e[17] * e[21] * e[33]
           + e[17] * e[31] * e[25] + e[17] * e[22] * e[34]
           + e[17] * e[32] * e[26] + e[17] * e[23] * e[35]
           - e[23] * e[27] * e[9] - e[23] * e[28] * e[10]
           - e[23] * e[33] * e[15] - e[23] * e[34] * e[16]
           - e[32] * e[24] * e[15] - e[32] * e[25] * e[16]
           - e[32] * e[18] * e[9] - e[32] * e[19] * e[10]
           + e[26] * e[30] * e[15] + e[26] * e[12] * e[33]
           + e[26] * e[31] * e[16] + e[26] * e[13] * e[34]
           + e[35] * e[21] * e[15] + e[35] * e[12] * e[24]
           + e[35] * e[22] * e[16] + e[35] * e[13] * e[25]
           + e[14] * e[30] * e[21] + e[14] * e[31] * e[22]
           + 3. * e[14] * e[32] * e[23] + e[11] * e[27] * e[21]
           + e[11] * e[18] * e[30] + e[11] * e[28] * e[22]
           + e[11] * e[19] * e[31] + e[11] * e[29] * e[23]
           + e[11] * e[20] * e[32] + e[23] * e[30] * e[12]
           + e[23] * e[31] * e[13] + e[32] * e[21] * e[12]
           + e[32] * e[22] * e[13] - e[14] * e[27] * e[18]
           - e[14] * e[33] * e[24] + e[14] * e[29] * e[20]
           + e[14] * e[35] * e[26] - e[14] * e[28] * e[19]
           - e[14] * e[34] * e[25] + e[20] * e[27] * e[12]
           + e[20] * e[9] * e[30] + e[20] * e[28] * e[13]
           + e[20] * e[10] * e[31];
  a[26] =   .5 * e[0] * ep2[1] + .5 * e[0] * ep2[2] + e[6] * e[2] * e[8]
          + e[6] * e[1] * e[7] + .5 * e[0] * ep2[3] + e[3] * e[1] * e[4]
          + .5 * e[0] * ep2[6] + e[3] * e[2] * e[5] - .5 * e[0] * ep2[5]
          - .5 * e[0] * ep2[8] + .5 * ep3[0] - .5 * e[0] * ep2[7]
          - .5 * e[0] * ep2[4];
  a[136] =   1.5 * ep2[23] * e[14] + .5 * e[14] * ep2[26] - .5 * e[14] * ep2[18]
           - .5 * e[14] * ep2[19] + .5 * e[14] * ep2[20] + .5 * e[14] * ep2[22]
           - .5 * e[14] * ep2[24] + .5 * e[14] * ep2[21] - .5 * e[14] * ep2[25]
           + e[23] * e[21] * e[12] + e[23] * e[22] * e[13]
           + e[26] * e[21] * e[15] + e[26] * e[12] * e[24]
           + e[26] * e[23] * e[17] + e[26] * e[22] * e[16]
           + e[26] * e[13] * e[25] + e[17] * e[22] * e[25]
           + e[17] * e[21] * e[24] + e[11] * e[19] * e[22]
           + e[11] * e[18] * e[21] + e[11] * e[20] * e[23]
           + e[20] * e[18] * e[12] + e[20] * e[9] * e[21]
           + e[20] * e[19] * e[13] + e[20] * e[10] * e[22]
           - e[23] * e[24] * e[15] - e[23] * e[25] * e[16]
           - e[23] * e[18] * e[9] - e[23] * e[19] * e[10];
  a[25] =   1.5 * e[27] * ep2[0] - .5 * e[27] * ep2[4] + .5 * e[27] * ep2[6]
          - .5 * e[27] * ep2[5] + .5 * e[27] * ep2[1] - .5 * e[27] * ep2[7]
          + .5 * e[27] * ep2[3] + .5 * e[27] * ep2[2] - .5 * e[27] * ep2[8]
          + e[0] * e[33] * e[6] + e[0] * e[30] * e[3] - e[0] * e[35] * e[8]
          - e[0] * e[31] * e[4] + e[3] * e[28] * e[4] + e[3] * e[1] * e[31]
          + e[3] * e[29] * e[5] + e[3] * e[2] * e[32] + e[30] * e[1] * e[4]
          + e[30] * e[2] * e[5] + e[6] * e[28] * e[7] + e[6] * e[1] * e[34]
          + e[6] * e[29] * e[8] + e[6] * e[2] * e[35] + e[33] * e[1] * e[7]
          + e[33] * e[2] * e[8] + e[0] * e[28] * e[1] + e[0] * e[29] * e[2]
          - e[0] * e[34] * e[7] - e[0] * e[32] * e[5];
  a[139] =   e[8] * e[22] * e[25] + e[8] * e[21] * e[24] + e[20] * e[18] * e[3]
           + e[20] * e[0] * e[21] + e[20] * e[19] * e[4] + e[20] * e[1] * e[22]
           + e[20] * e[2] * e[23] + e[23] * e[21] * e[3] + e[23] * e[22] * e[4]
           + e[23] * e[26] * e[8] - e[23] * e[19] * e[1] - e[23] * e[18] * e[0]
           - e[23] * e[25] * e[7] - e[23] * e[24] * e[6] + e[2] * e[19] * e[22]
           + e[2] * e[18] * e[21] + e[26] * e[21] * e[6] + e[26] * e[3] * e[24]
           + e[26] * e[22] * e[7] + e[26] * e[4] * e[25] + .5 * ep2[20] * e[5]
           + 1.5 * ep2[23] * e[5] + .5 * e[5] * ep2[22] + .5 * e[5] * ep2[21]
           + .5 * e[5] * ep2[26] - .5 * e[5] * ep2[18] - .5 * e[5] * ep2[19]
           - .5 * e[5] * ep2[24] - .5 * e[5] * ep2[25];
  a[24] =   e[24] * e[11] * e[8] + e[24] * e[2] * e[17]
          + 3. * e[9] * e[18] * e[0] + e[9] * e[19] * e[1] + e[9] * e[20] * e[2]
          + e[18] * e[10] * e[1] + e[18] * e[11] * e[2] + e[3] * e[18] * e[12]
          + e[3] * e[9] * e[21] + e[3] * e[20] * e[14] + e[3] * e[11] * e[23]
          + e[3] * e[19] * e[13] + e[3] * e[10] * e[22] + e[6] * e[18] * e[15]
          + e[6] * e[9] * e[24] + e[6] * e[20] * e[17] + e[6] * e[11] * e[26]
          + e[6] * e[19] * e[16] + e[6] * e[10] * e[25] + e[0] * e[20] * e[11]
          + e[0] * e[19] * e[10] - e[9] * e[26] * e[8] - e[9] * e[22] * e[4]
          - e[9] * e[25] * e[7] - e[9] * e[23] * e[5] + e[12] * e[0] * e[21]
          + e[12] * e[19] * e[4] + e[12] * e[1] * e[22] + e[12] * e[20] * e[5]
          + e[12] * e[2] * e[23] - e[18] * e[13] * e[4] - e[18] * e[16] * e[7]
          - e[18] * e[14] * e[5] - e[18] * e[17] * e[8] + e[21] * e[10] * e[4]
          + e[21] * e[1] * e[13] + e[21] * e[11] * e[5] + e[21] * e[2] * e[14]
          + e[15] * e[0] * e[24] + e[15] * e[19] * e[7] + e[15] * e[1] * e[25]
          + e[15] * e[20] * e[8] + e[15] * e[2] * e[26] - e[0] * e[23] * e[14]
          - e[0] * e[25] * e[16] - e[0] * e[26] * e[17] - e[0] * e[22] * e[13]
          + e[24] * e[10] * e[7] + e[24] * e[1] * e[16];
  a[138] =   e[11] * e[1] * e[4] + e[11] * e[0] * e[3] + e[11] * e[2] * e[5]
           + e[5] * e[12] * e[3] + e[5] * e[13] * e[4] + e[8] * e[12] * e[6]
           + e[8] * e[3] * e[15] + e[8] * e[13] * e[7] + e[8] * e[4] * e[16]
           + e[8] * e[5] * e[17] + e[17] * e[4] * e[7] + e[17] * e[3] * e[6]
           - e[5] * e[10] * e[1] - e[5] * e[16] * e[7] - e[5] * e[15] * e[6]
           - e[5] * e[9] * e[0] + e[2] * e[9] * e[3] + e[2] * e[0] * e[12]
           + e[2] * e[10] * e[4] + e[2] * e[1] * e[13] + .5 * ep2[2] * e[14]
           - .5 * e[14] * ep2[0] - .5 * e[14] * ep2[6] - .5 * e[14] * ep2[1]
           - .5 * e[14] * ep2[7] + 1.5 * e[14] * ep2[5] + .5 * e[14] * ep2[4]
           + .5 * e[14] * ep2[3] + .5 * e[14] * ep2[8];
  a[31] =   e[3] * e[27] * e[12] + e[3] * e[9] * e[30] + e[3] * e[29] * e[14]
          + e[3] * e[11] * e[32] + e[3] * e[28] * e[13] + e[3] * e[10] * e[31]
          + e[6] * e[27] * e[15] + e[6] * e[9] * e[33] + e[6] * e[29] * e[17]
          + e[6] * e[11] * e[35] + e[6] * e[28] * e[16] + e[6] * e[10] * e[34]
          + 3. * e[0] * e[27] * e[9] + e[0] * e[29] * e[11]
          + e[0] * e[28] * e[10] - e[9] * e[34] * e[7] - e[9] * e[32] * e[5]
          - e[9] * e[35] * e[8] + e[9] * e[29] * e[2] + e[9] * e[28] * e[1]
          - e[9] * e[31] * e[4] + e[12] * e[0] * e[30] + e[12] * e[28] * e[4]
          + e[12] * e[1] * e[31] + e[12] * e[29] * e[5] + e[12] * e[2] * e[32]
          + e[27] * e[11] * e[2] + e[27] * e[10] * e[1] - e[27] * e[13] * e[4]
          - e[27] * e[16] * e[7] - e[27] * e[14] * e[5] - e[27] * e[17] * e[8]
          + e[30] * e[10] * e[4] + e[30] * e[1] * e[13] + e[30] * e[11] * e[5]
          + e[30] * e[2] * e[14] + e[15] * e[0] * e[33] + e[15] * e[28] * e[7]
          + e[15] * e[1] * e[34] + e[15] * e[29] * e[8] + e[15] * e[2] * e[35]
          - e[0] * e[31] * e[13] - e[0] * e[32] * e[14] - e[0] * e[34] * e[16]
          - e[0] * e[35] * e[17] + e[33] * e[10] * e[7] + e[33] * e[1] * e[16]
          + e[33] * e[11] * e[8] + e[33] * e[2] * e[17];
  a[141] =   .5 * ep2[30] * e[6] + .5 * e[6] * ep2[27] - .5 * e[6] * ep2[32]
           - .5 * e[6] * ep2[28] - .5 * e[6] * ep2[29] - .5 * e[6] * ep2[31]
           + 1.5 * e[6] * ep2[33] + .5 * e[6] * ep2[34] + .5 * e[6] * ep2[35]
           + e[0] * e[27] * e[33] + e[0] * e[29] * e[35] + e[0] * e[28] * e[34]
           + e[3] * e[30] * e[33] + e[3] * e[32] * e[35] + e[3] * e[31] * e[34]
           + e[30] * e[31] * e[7] + e[30] * e[4] * e[34] + e[30] * e[32] * e[8]
           + e[30] * e[5] * e[35] + e[27] * e[28] * e[7] + e[27] * e[1] * e[34]
           + e[27] * e[29] * e[8] + e[27] * e[2] * e[35] + e[33] * e[34] * e[7]
           + e[33] * e[35] * e[8] - e[33] * e[32] * e[5] - e[33] * e[29] * e[2]
           - e[33] * e[28] * e[1] - e[33] * e[31] * e[4];
  a[30] =   e[24] * e[20] * e[26] + e[21] * e[19] * e[22] - .5 * e[18] * ep2[22]
          - .5 * e[18] * ep2[25] + .5 * ep3[18] + .5 * e[18] * ep2[21]
          + e[21] * e[20] * e[23] + .5 * e[18] * ep2[20] + .5 * e[18] * ep2[19]
          + .5 * e[18] * ep2[24] + e[24] * e[19] * e[25] - .5 * e[18] * ep2[23]
          - .5 * e[18] * ep2[26];
  a[140] =   .5 * e[33] * ep2[35] + .5 * ep3[33] + .5 * ep2[27] * e[33]
           + .5 * ep2[30] * e[33] - .5 * e[33] * ep2[29] + .5 * e[33] * ep2[34]
           - .5 * e[33] * ep2[32] - .5 * e[33] * ep2[28] + e[30] * e[32] * e[35]
           - .5 * e[33] * ep2[31] + e[27] * e[29] * e[35]
           + e[27] * e[28] * e[34] + e[30] * e[31] * e[34];
  a[29] =   1.5 * e[27] * ep2[18] + .5 * e[27] * ep2[19] + .5 * e[27] * ep2[20]
          + .5 * e[27] * ep2[21] + .5 * e[27] * ep2[24] - .5 * e[27] * ep2[26]
          - .5 * e[27] * ep2[23] - .5 * e[27] * ep2[22] - .5 * e[27] * ep2[25]
          + e[33] * e[20] * e[26] - e[18] * e[35] * e[26]
          - e[18] * e[31] * e[22] - e[18] * e[32] * e[23]
          - e[18] * e[34] * e[25] + e[18] * e[28] * e[19]
          + e[18] * e[29] * e[20] + e[21] * e[18] * e[30]
          + e[21] * e[28] * e[22] + e[21] * e[19] * e[31]
          + e[21] * e[29] * e[23] + e[21] * e[20] * e[32]
          + e[30] * e[19] * e[22] + e[30] * e[20] * e[23]
          + e[24] * e[18] * e[33] + e[24] * e[28] * e[25]
          + e[24] * e[19] * e[34] + e[24] * e[29] * e[26]
          + e[24] * e[20] * e[35] + e[33] * e[19] * e[25];
  a[143] =   e[9] * e[27] * e[33] + e[9] * e[29] * e[35] + e[9] * e[28] * e[34]
           + e[33] * e[35] * e[17] + e[33] * e[34] * e[16]
           + e[27] * e[29] * e[17] + e[27] * e[11] * e[35]
           + e[27] * e[28] * e[16] + e[27] * e[10] * e[34]
           + e[33] * e[30] * e[12] - e[33] * e[28] * e[10]
           - e[33] * e[31] * e[13] - e[33] * e[32] * e[14]
           - e[33] * e[29] * e[11] + e[30] * e[32] * e[17]
           + e[30] * e[14] * e[35] + e[30] * e[31] * e[16]
           + e[30] * e[13] * e[34] + e[12] * e[32] * e[35]
           + e[12] * e[31] * e[34] + .5 * e[15] * ep2[27] - .5 * e[15] * ep2[32]
           - .5 * e[15] * ep2[28] - .5 * e[15] * ep2[29] - .5 * e[15] * ep2[31]
           + 1.5 * e[15] * ep2[33] + .5 * e[15] * ep2[30] + .5 * e[15] * ep2[34]
           + .5 * e[15] * ep2[35];
  a[28] =   .5 * e[9] * ep2[12] - .5 * e[9] * ep2[16] + .5 * e[9] * ep2[10]
          - .5 * e[9] * ep2[17] - .5 * e[9] * ep2[13] + e[15] * e[10] * e[16]
          + e[12] * e[11] * e[14] + .5 * e[9] * ep2[11] + .5 * e[9] * ep2[15]
          - .5 * e[9] * ep2[14] + e[15] * e[11] * e[17] + .5 * ep3[9]
          + e[12] * e[10] * e[13];
  a[142] =   e[18] * e[27] * e[33] + e[18] * e[29] * e[35]
           + e[18] * e[28] * e[34] + e[27] * e[28] * e[25]
           + e[27] * e[19] * e[34] + e[27] * e[29] * e[26]
           + e[27] * e[20] * e[35] + e[21] * e[30] * e[33]
           + e[21] * e[32] * e[35] + e[21] * e[31] * e[34]
           + e[30] * e[31] * e[25] + e[30] * e[22] * e[34]
           + e[30] * e[32] * e[26] + e[30] * e[23] * e[35]
           + e[33] * e[34] * e[25] + e[33] * e[35] * e[26]
           - e[33] * e[29] * e[20] - e[33] * e[31] * e[22]
           - e[33] * e[32] * e[23] - e[33] * e[28] * e[19]
           + .5 * ep2[27] * e[24] + .5 * ep2[30] * e[24]
           + 1.5 * e[24] * ep2[33] + .5 * e[24] * ep2[35] + .5 * e[24] * ep2[34]
           - .5 * e[24] * ep2[32] - .5 * e[24] * ep2[28] - .5 * e[24] * ep2[29]
           - .5 * e[24] * ep2[31];
  a[36] =   .5 * e[9] * ep2[21] + .5 * e[9] * ep2[24] + .5 * e[9] * ep2[19]
          + 1.5 * e[9] * ep2[18] + .5 * e[9] * ep2[20] - .5 * e[9] * ep2[26]
          - .5 * e[9] * ep2[23] - .5 * e[9] * ep2[22] - .5 * e[9] * ep2[25]
          + e[21] * e[18] * e[12] + e[21] * e[20] * e[14]
          + e[21] * e[11] * e[23] + e[21] * e[19] * e[13]
          + e[21] * e[10] * e[22] + e[24] * e[18] * e[15]
          + e[24] * e[20] * e[17] + e[24] * e[11] * e[26]
          + e[24] * e[19] * e[16] + e[24] * e[10] * e[25]
          + e[15] * e[19] * e[25] + e[15] * e[20] * e[26]
          + e[12] * e[19] * e[22] + e[12] * e[20] * e[23]
          + e[18] * e[20] * e[11] + e[18] * e[19] * e[10]
          - e[18] * e[23] * e[14] - e[18] * e[25] * e[16]
          - e[18] * e[26] * e[17] - e[18] * e[22] * e[13];
  a[182] =   .5 * ep2[29] * e[26] + .5 * ep2[32] * e[26] + .5 * e[26] * ep2[33]
           + 1.5 * e[26] * ep2[35] + .5 * e[26] * ep2[34] - .5 * e[26] * ep2[27]
           - .5 * e[26] * ep2[28] - .5 * e[26] * ep2[31] - .5 * e[26] * ep2[30]
           + e[20] * e[27] * e[33] + e[20] * e[29] * e[35]
           + e[20] * e[28] * e[34] + e[29] * e[27] * e[24]
           + e[29] * e[18] * e[33] + e[29] * e[28] * e[25]
           + e[29] * e[19] * e[34] + e[23] * e[30] * e[33]
           + e[23] * e[32] * e[35] + e[23] * e[31] * e[34]
           + e[32] * e[30] * e[24] + e[32] * e[21] * e[33]
           + e[32] * e[31] * e[25] + e[32] * e[22] * e[34]
           + e[35] * e[33] * e[24] + e[35] * e[34] * e[25]
           - e[35] * e[27] * e[18] - e[35] * e[30] * e[21]
           - e[35] * e[31] * e[22] - e[35] * e[28] * e[19];
  a[37] =   e[12] * e[19] * e[31] + e[12] * e[29] * e[23]
          + e[12] * e[20] * e[32] + 3. * e[9] * e[27] * e[18]
          + e[9] * e[28] * e[19] + e[9] * e[29] * e[20] + e[21] * e[9] * e[30]
          + e[21] * e[29] * e[14] + e[21] * e[11] * e[32]
          + e[21] * e[28] * e[13] + e[21] * e[10] * e[31]
          + e[30] * e[20] * e[14] + e[30] * e[11] * e[23]
          + e[30] * e[19] * e[13] + e[30] * e[10] * e[22] + e[9] * e[33] * e[24]
          - e[9] * e[35] * e[26] - e[9] * e[31] * e[22] - e[9] * e[32] * e[23]
          - e[9] * e[34] * e[25] + e[18] * e[29] * e[11] + e[18] * e[28] * e[10]
          + e[27] * e[20] * e[11] + e[27] * e[19] * e[10]
          + e[15] * e[27] * e[24] + e[15] * e[18] * e[33]
          + e[15] * e[28] * e[25] + e[15] * e[19] * e[34]
          + e[15] * e[29] * e[26] + e[15] * e[20] * e[35]
          - e[18] * e[31] * e[13] - e[18] * e[32] * e[14]
          - e[18] * e[34] * e[16] - e[18] * e[35] * e[17]
          - e[27] * e[23] * e[14] - e[27] * e[25] * e[16]
          - e[27] * e[26] * e[17] - e[27] * e[22] * e[13]
          + e[24] * e[29] * e[17] + e[24] * e[11] * e[35]
          + e[24] * e[28] * e[16] + e[24] * e[10] * e[34]
          + e[33] * e[20] * e[17] + e[33] * e[11] * e[26]
          + e[33] * e[19] * e[16] + e[33] * e[10] * e[25]
          + e[12] * e[27] * e[21] + e[12] * e[18] * e[30]
          + e[12] * e[28] * e[22];
  a[183] =   -.5 * e[17] * ep2[27] + .5 * e[17] * ep2[32] - .5 * e[17] * ep2[28]
           + .5 * e[17] * ep2[29] - .5 * e[17] * ep2[31] + .5 * e[17] * ep2[33]
           - .5 * e[17] * ep2[30] + .5 * e[17] * ep2[34] + 1.5 * e[17] * ep2[35]
           + e[32] * e[30] * e[15] + e[32] * e[12] * e[33]
           + e[32] * e[31] * e[16] + e[32] * e[13] * e[34]
           + e[14] * e[30] * e[33] + e[14] * e[31] * e[34]
           + e[11] * e[27] * e[33] + e[11] * e[29] * e[35]
           + e[11] * e[28] * e[34] + e[35] * e[33] * e[15]
           + e[35] * e[34] * e[16] + e[29] * e[27] * e[15]
           + e[29] * e[9] * e[33] + e[29] * e[28] * e[16]
           + e[29] * e[10] * e[34] - e[35] * e[27] * e[9]
           - e[35] * e[30] * e[12] - e[35] * e[28] * e[10]
           - e[35] * e[31] * e[13] + e[35] * e[32] * e[14];
  a[38] =   .5 * e[9] * ep2[1] + 1.5 * e[9] * ep2[0] + .5 * e[9] * ep2[2]
          + .5 * e[9] * ep2[3] + .5 * e[9] * ep2[6] - .5 * e[9] * ep2[4]
          - .5 * e[9] * ep2[5] - .5 * e[9] * ep2[7] - .5 * e[9] * ep2[8]
          + e[6] * e[0] * e[15] + e[6] * e[10] * e[7] + e[6] * e[1] * e[16]
          + e[6] * e[11] * e[8] + e[6] * e[2] * e[17] + e[15] * e[1] * e[7]
          + e[15] * e[2] * e[8] + e[0] * e[11] * e[2] + e[0] * e[10] * e[1]
          - e[0] * e[13] * e[4] - e[0] * e[16] * e[7] - e[0] * e[14] * e[5]
          - e[0] * e[17] * e[8] + e[3] * e[0] * e[12] + e[3] * e[10] * e[4]
          + e[3] * e[1] * e[13] + e[3] * e[11] * e[5] + e[3] * e[2] * e[14]
          + e[12] * e[1] * e[4] + e[12] * e[2] * e[5];
  a[180] =   .5 * e[35] * ep2[33] + .5 * e[35] * ep2[34] - .5 * e[35] * ep2[27]
           - .5 * e[35] * ep2[28] - .5 * e[35] * ep2[31] - .5 * e[35] * ep2[30]
           + e[32] * e[31] * e[34] + .5 * ep2[29] * e[35] + .5 * ep2[32] * e[35]
           + e[29] * e[28] * e[34] + e[32] * e[30] * e[33] + .5 * ep3[35]
           + e[29] * e[27] * e[33];
  a[39] =   .5 * e[0] * ep2[19] + .5 * e[0] * ep2[20] + .5 * e[0] * ep2[24]
          - .5 * e[0] * ep2[26] - .5 * e[0] * ep2[23] - .5 * e[0] * ep2[22]
          - .5 * e[0] * ep2[25] + 1.5 * ep2[18] * e[0] + .5 * e[0] * ep2[21]
          + e[18] * e[19] * e[1] + e[18] * e[20] * e[2] + e[21] * e[18] * e[3]
          + e[21] * e[19] * e[4] + e[21] * e[1] * e[22] + e[21] * e[20] * e[5]
          + e[21] * e[2] * e[23] - e[18] * e[26] * e[8] - e[18] * e[22] * e[4]
          - e[18] * e[25] * e[7] - e[18] * e[23] * e[5] + e[18] * e[24] * e[6]
          + e[3] * e[19] * e[22] + e[3] * e[20] * e[23] + e[24] * e[19] * e[7]
          + e[24] * e[1] * e[25] + e[24] * e[20] * e[8] + e[24] * e[2] * e[26]
          + e[6] * e[19] * e[25] + e[6] * e[20] * e[26];
  a[181] =   .5 * ep2[32] * e[8] - .5 * e[8] * ep2[27] - .5 * e[8] * ep2[28]
           + .5 * e[8] * ep2[29] - .5 * e[8] * ep2[31] + .5 * e[8] * ep2[33]
           - .5 * e[8] * ep2[30] + .5 * e[8] * ep2[34] + 1.5 * e[8] * ep2[35]
           + e[2] * e[27] * e[33] + e[2] * e[29] * e[35] + e[2] * e[28] * e[34]
           + e[5] * e[30] * e[33] + e[5] * e[32] * e[35] + e[5] * e[31] * e[34]
           + e[32] * e[30] * e[6] + e[32] * e[3] * e[33] + e[32] * e[31] * e[7]
           + e[32] * e[4] * e[34] + e[29] * e[27] * e[6] + e[29] * e[0] * e[33]
           + e[29] * e[28] * e[7] + e[29] * e[1] * e[34] + e[35] * e[33] * e[6]
           + e[35] * e[34] * e[7] - e[35] * e[27] * e[0] - e[35] * e[30] * e[3]
           - e[35] * e[28] * e[1] - e[35] * e[31] * e[4];
  a[32] =   -.5 * e[18] * ep2[4] + 1.5 * e[18] * ep2[0] + .5 * e[18] * ep2[6]
           - .5 * e[18] * ep2[5] + .5 * e[18] * ep2[1] - .5 * e[18] * ep2[7]
           + .5 * e[18] * ep2[3] + .5 * e[18] * ep2[2] - .5 * e[18] * ep2[8]
           + e[3] * e[0] * e[21] + e[3] * e[19] * e[4] + e[3] * e[1] * e[22]
           + e[3] * e[20] * e[5] + e[3] * e[2] * e[23] + e[21] * e[1] * e[4]
           + e[21] * e[2] * e[5] + e[6] * e[0] * e[24] + e[6] * e[19] * e[7]
           + e[6] * e[1] * e[25] + e[6] * e[20] * e[8] + e[6] * e[2] * e[26]
           + e[24] * e[1] * e[7] + e[24] * e[2] * e[8] + e[0] * e[19] * e[1]
           + e[0] * e[20] * e[2] - e[0] * e[26] * e[8] - e[0] * e[22] * e[4]
           - e[0] * e[25] * e[7] - e[0] * e[23] * e[5];
  a[178] =   e[10] * e[1] * e[7] + e[10] * e[0] * e[6] + e[10] * e[2] * e[8]
           + e[4] * e[12] * e[6] + e[4] * e[3] * e[15] + e[4] * e[13] * e[7]
           + e[4] * e[14] * e[8] + e[4] * e[5] * e[17] + e[13] * e[3] * e[6]
           + e[13] * e[5] * e[8] + e[7] * e[15] * e[6] + e[7] * e[17] * e[8]
           - e[7] * e[11] * e[2] - e[7] * e[9] * e[0] - e[7] * e[14] * e[5]
           - e[7] * e[12] * e[3] + e[1] * e[9] * e[6] + e[1] * e[0] * e[15]
           + e[1] * e[11] * e[8] + e[1] * e[2] * e[17] + 1.5 * e[16] * ep2[7]
           + .5 * e[16] * ep2[6] + .5 * e[16] * ep2[8] + .5 * ep2[1] * e[16]
           - .5 * e[16] * ep2[0] - .5 * e[16] * ep2[5] - .5 * e[16] * ep2[3]
           - .5 * e[16] * ep2[2] + .5 * ep2[4] * e[16];
  a[33] =   e[0] * e[30] * e[21] - e[0] * e[35] * e[26] - e[0] * e[31] * e[22]
          - e[0] * e[32] * e[23] - e[0] * e[34] * e[25] - e[18] * e[34] * e[7]
          - e[18] * e[32] * e[5] - e[18] * e[35] * e[8] - e[18] * e[31] * e[4]
          - e[27] * e[26] * e[8] - e[27] * e[22] * e[4] - e[27] * e[25] * e[7]
          - e[27] * e[23] * e[5] + e[6] * e[28] * e[25] + e[6] * e[19] * e[34]
          + e[6] * e[29] * e[26] + e[6] * e[20] * e[35] + e[21] * e[28] * e[4]
          + e[21] * e[1] * e[31] + e[21] * e[29] * e[5] + e[21] * e[2] * e[32]
          + e[30] * e[19] * e[4] + e[30] * e[1] * e[22] + e[30] * e[20] * e[5]
          + e[30] * e[2] * e[23] + e[24] * e[27] * e[6] + e[24] * e[0] * e[33]
          + e[24] * e[28] * e[7] + e[24] * e[1] * e[34] + e[24] * e[29] * e[8]
          + e[24] * e[2] * e[35] + e[33] * e[18] * e[6] + e[33] * e[19] * e[7]
          + e[33] * e[1] * e[25] + e[33] * e[20] * e[8] + e[33] * e[2] * e[26]
          + 3. * e[0] * e[27] * e[18] + e[0] * e[28] * e[19]
          + e[0] * e[29] * e[20] + e[18] * e[28] * e[1] + e[18] * e[29] * e[2]
          + e[27] * e[19] * e[1] + e[27] * e[20] * e[2] + e[3] * e[27] * e[21]
          + e[3] * e[18] * e[30] + e[3] * e[28] * e[22] + e[3] * e[19] * e[31]
          + e[3] * e[29] * e[23] + e[3] * e[20] * e[32];
  a[179] =   e[19] * e[18] * e[6] + e[19] * e[0] * e[24] + e[19] * e[1] * e[25]
           + e[19] * e[20] * e[8] + e[19] * e[2] * e[26] + e[22] * e[21] * e[6]
           + e[22] * e[3] * e[24] + e[22] * e[4] * e[25] + e[22] * e[23] * e[8]
           + e[22] * e[5] * e[26] - e[25] * e[21] * e[3] + e[25] * e[26] * e[8]
           - e[25] * e[20] * e[2] - e[25] * e[18] * e[0] - e[25] * e[23] * e[5]
           + e[25] * e[24] * e[6] + e[1] * e[18] * e[24] + e[1] * e[20] * e[26]
           + e[4] * e[21] * e[24] + e[4] * e[23] * e[26] + .5 * ep2[19] * e[7]
           + .5 * ep2[22] * e[7] + 1.5 * ep2[25] * e[7] + .5 * e[7] * ep2[26]
           - .5 * e[7] * ep2[18] - .5 * e[7] * ep2[23] - .5 * e[7] * ep2[20]
           + .5 * e[7] * ep2[24] - .5 * e[7] * ep2[21];
  a[34] =   .5 * e[18] * ep2[11] + 1.5 * e[18] * ep2[9] + .5 * e[18] * ep2[10]
          + .5 * e[18] * ep2[12] + .5 * e[18] * ep2[15] - .5 * e[18] * ep2[16]
          - .5 * e[18] * ep2[17] - .5 * e[18] * ep2[14] - .5 * e[18] * ep2[13]
          + e[12] * e[9] * e[21] + e[12] * e[20] * e[14] + e[12] * e[11] * e[23]
          + e[12] * e[19] * e[13] + e[12] * e[10] * e[22]
          + e[21] * e[11] * e[14] + e[21] * e[10] * e[13] + e[15] * e[9] * e[24]
          + e[15] * e[20] * e[17] + e[15] * e[11] * e[26]
          + e[15] * e[19] * e[16] + e[15] * e[10] * e[25]
          + e[24] * e[11] * e[17] + e[24] * e[10] * e[16] - e[9] * e[23] * e[14]
          - e[9] * e[25] * e[16] - e[9] * e[26] * e[17] + e[9] * e[20] * e[11]
          + e[9] * e[19] * e[10] - e[9] * e[22] * e[13];
  a[176] =   e[13] * e[21] * e[24] + e[13] * e[23] * e[26]
           + e[19] * e[18] * e[15] + e[19] * e[9] * e[24]
           + e[19] * e[20] * e[17] + e[19] * e[11] * e[26]
           - e[25] * e[23] * e[14] - e[25] * e[20] * e[11]
           - e[25] * e[18] * e[9] - e[25] * e[21] * e[12]
           + e[22] * e[21] * e[15] + e[22] * e[12] * e[24]
           + e[22] * e[23] * e[17] + e[22] * e[14] * e[26]
           + e[22] * e[13] * e[25] + e[25] * e[24] * e[15]
           + e[25] * e[26] * e[17] + e[10] * e[19] * e[25]
           + e[10] * e[18] * e[24] + e[10] * e[20] * e[26]
           - .5 * e[16] * ep2[18] - .5 * e[16] * ep2[23] + .5 * e[16] * ep2[19]
           - .5 * e[16] * ep2[20] - .5 * e[16] * ep2[21] + .5 * ep2[22] * e[16]
           + 1.5 * ep2[25] * e[16] + .5 * e[16] * ep2[24] + .5 * e[16] * ep2[26]
           ;
  a[35] =   .5 * e[0] * ep2[12] + .5 * e[0] * ep2[15] + .5 * e[0] * ep2[11]
          + 1.5 * e[0] * ep2[9] + .5 * e[0] * ep2[10] - .5 * e[0] * ep2[16]
          - .5 * e[0] * ep2[17] - .5 * e[0] * ep2[14] - .5 * e[0] * ep2[13]
          + e[12] * e[9] * e[3] + e[12] * e[10] * e[4] + e[12] * e[1] * e[13]
          + e[12] * e[11] * e[5] + e[12] * e[2] * e[14] + e[15] * e[9] * e[6]
          + e[15] * e[10] * e[7] + e[15] * e[1] * e[16] + e[15] * e[11] * e[8]
          + e[15] * e[2] * e[17] + e[6] * e[11] * e[17] + e[6] * e[10] * e[16]
          + e[3] * e[11] * e[14] + e[3] * e[10] * e[13] + e[9] * e[10] * e[1]
          + e[9] * e[11] * e[2] - e[9] * e[13] * e[4] - e[9] * e[16] * e[7]
          - e[9] * e[14] * e[5] - e[9] * e[17] * e[8];
  a[177] =   e[19] * e[11] * e[35] + e[28] * e[18] * e[15]
           + e[28] * e[9] * e[24] + e[28] * e[20] * e[17]
           + e[28] * e[11] * e[26] - e[25] * e[27] * e[9]
           - e[25] * e[30] * e[12] - e[25] * e[32] * e[14]
           + e[25] * e[33] * e[15] + e[25] * e[35] * e[17]
           - e[25] * e[29] * e[11] - e[34] * e[23] * e[14]
           + e[34] * e[24] * e[15] + e[34] * e[26] * e[17]
           - e[34] * e[20] * e[11] - e[34] * e[18] * e[9]
           - e[34] * e[21] * e[12] + e[13] * e[30] * e[24]
           + e[13] * e[21] * e[33] + e[13] * e[31] * e[25]
           + e[13] * e[22] * e[34] + e[13] * e[32] * e[26]
           + e[13] * e[23] * e[35] + e[10] * e[27] * e[24]
           + e[10] * e[18] * e[33] + e[10] * e[28] * e[25]
           + e[10] * e[19] * e[34] + e[10] * e[29] * e[26]
           + e[10] * e[20] * e[35] + e[22] * e[30] * e[15]
           + e[22] * e[12] * e[33] + e[22] * e[32] * e[17]
           + e[22] * e[14] * e[35] + e[22] * e[31] * e[16]
           + e[31] * e[21] * e[15] + e[31] * e[12] * e[24]
           + e[31] * e[23] * e[17] + e[31] * e[14] * e[26]
           - e[16] * e[27] * e[18] + e[16] * e[33] * e[24]
           - e[16] * e[30] * e[21] - e[16] * e[29] * e[20]
           + e[16] * e[35] * e[26] - e[16] * e[32] * e[23]
           + e[16] * e[28] * e[19] + 3. * e[16] * e[34] * e[25]
           + e[19] * e[27] * e[15] + e[19] * e[9] * e[33]
           + e[19] * e[29] * e[17];
  a[45] =   e[4] * e[27] * e[3] + e[4] * e[0] * e[30] + e[4] * e[29] * e[5]
          + e[4] * e[2] * e[32] + e[31] * e[0] * e[3] + e[31] * e[2] * e[5]
          + e[7] * e[27] * e[6] + e[7] * e[0] * e[33] + e[7] * e[29] * e[8]
          + e[7] * e[2] * e[35] + e[34] * e[0] * e[6] + e[34] * e[2] * e[8]
          + e[1] * e[27] * e[0] + e[1] * e[29] * e[2] + e[1] * e[34] * e[7]
          - e[1] * e[32] * e[5] - e[1] * e[33] * e[6] - e[1] * e[30] * e[3]
          - e[1] * e[35] * e[8] + e[1] * e[31] * e[4] + 1.5 * e[28] * ep2[1]
          + .5 * e[28] * ep2[4] + .5 * e[28] * ep2[0] - .5 * e[28] * ep2[6]
          - .5 * e[28] * ep2[5] + .5 * e[28] * ep2[7] - .5 * e[28] * ep2[3]
          + .5 * e[28] * ep2[2] - .5 * e[28] * ep2[8];
  a[191] =   -e[35] * e[10] * e[1] - e[35] * e[13] * e[4]
           + e[35] * e[16] * e[7] + e[35] * e[15] * e[6] - e[35] * e[9] * e[0]
           - e[35] * e[12] * e[3] + e[32] * e[12] * e[6] + e[32] * e[3] * e[15]
           + e[32] * e[13] * e[7] + e[32] * e[4] * e[16] - e[8] * e[27] * e[9]
           - e[8] * e[30] * e[12] - e[8] * e[28] * e[10] - e[8] * e[31] * e[13]
           + e[8] * e[29] * e[11] + e[11] * e[27] * e[6] + e[11] * e[0] * e[33]
           + e[11] * e[28] * e[7] + e[11] * e[1] * e[34] + e[29] * e[9] * e[6]
           + e[29] * e[0] * e[15] + e[29] * e[10] * e[7] + e[29] * e[1] * e[16]
           + e[5] * e[30] * e[15] + e[5] * e[12] * e[33] + e[5] * e[32] * e[17]
           + e[5] * e[14] * e[35] + e[5] * e[31] * e[16] + e[5] * e[13] * e[34]
           + e[8] * e[33] * e[15] + 3. * e[8] * e[35] * e[17]
           + e[8] * e[34] * e[16] + e[2] * e[27] * e[15] + e[2] * e[9] * e[33]
           + e[2] * e[29] * e[17] + e[2] * e[11] * e[35] + e[2] * e[28] * e[16]
           + e[2] * e[10] * e[34] - e[17] * e[27] * e[0] + e[17] * e[34] * e[7]
           + e[17] * e[33] * e[6] - e[17] * e[30] * e[3] - e[17] * e[28] * e[1]
           - e[17] * e[31] * e[4] + e[14] * e[30] * e[6] + e[14] * e[3] * e[33]
           + e[14] * e[31] * e[7] + e[14] * e[4] * e[34] + e[14] * e[32] * e[8];
  a[44] =   e[19] * e[11] * e[2] + e[4] * e[18] * e[12] + e[4] * e[9] * e[21]
          + e[4] * e[20] * e[14] + e[4] * e[11] * e[23] + e[4] * e[19] * e[13]
          + e[4] * e[10] * e[22] + e[7] * e[18] * e[15] + e[7] * e[9] * e[24]
          + e[7] * e[20] * e[17] + e[7] * e[11] * e[26] + e[7] * e[19] * e[16]
          + e[7] * e[10] * e[25] + e[1] * e[18] * e[9] + e[1] * e[20] * e[11]
          - e[10] * e[21] * e[3] - e[10] * e[26] * e[8] - e[10] * e[23] * e[5]
          - e[10] * e[24] * e[6] + e[13] * e[18] * e[3] + e[13] * e[0] * e[21]
          + e[13] * e[1] * e[22] + e[13] * e[20] * e[5] + e[13] * e[2] * e[23]
          - e[19] * e[15] * e[6] - e[19] * e[14] * e[5] - e[19] * e[12] * e[3]
          - e[19] * e[17] * e[8] + e[22] * e[9] * e[3] + e[22] * e[0] * e[12]
          + e[22] * e[11] * e[5] + e[22] * e[2] * e[14] + e[16] * e[18] * e[6]
          + e[16] * e[0] * e[24] + e[16] * e[1] * e[25] + e[16] * e[20] * e[8]
          + e[16] * e[2] * e[26] - e[1] * e[23] * e[14] - e[1] * e[24] * e[15]
          - e[1] * e[26] * e[17] - e[1] * e[21] * e[12] + e[25] * e[9] * e[6]
          + e[25] * e[0] * e[15] + e[25] * e[11] * e[8] + e[25] * e[2] * e[17]
          + e[10] * e[18] * e[0] + 3. * e[10] * e[19] * e[1]
          + e[10] * e[20] * e[2] + e[19] * e[9] * e[0];
  a[190] =   .5 * ep2[23] * e[26] + .5 * e[26] * ep2[25] + .5 * ep2[20] * e[26]
           - .5 * e[26] * ep2[18] + .5 * ep3[26] + .5 * e[26] * ep2[24]
           + e[20] * e[19] * e[25] - .5 * e[26] * ep2[19] - .5 * e[26] * ep2[21]
           + e[20] * e[18] * e[24] - .5 * e[26] * ep2[22]
           + e[23] * e[21] * e[24] + e[23] * e[22] * e[25];
  a[47] =   e[16] * e[9] * e[33] + e[16] * e[29] * e[17] + e[16] * e[11] * e[35]
          + e[16] * e[10] * e[34] + e[34] * e[11] * e[17] + e[34] * e[9] * e[15]
          - e[10] * e[30] * e[12] - e[10] * e[32] * e[14]
          - e[10] * e[33] * e[15] - e[10] * e[35] * e[17] + e[10] * e[27] * e[9]
          + e[10] * e[29] * e[11] + e[13] * e[27] * e[12] + e[13] * e[9] * e[30]
          + e[13] * e[29] * e[14] + e[13] * e[11] * e[32]
          + e[13] * e[10] * e[31] + e[31] * e[11] * e[14] + e[31] * e[9] * e[12]
          + e[16] * e[27] * e[15] + 1.5 * e[28] * ep2[10] + .5 * e[28] * ep2[16]
          + .5 * e[28] * ep2[9] + .5 * e[28] * ep2[11] - .5 * e[28] * ep2[12]
          - .5 * e[28] * ep2[15] - .5 * e[28] * ep2[17] - .5 * e[28] * ep2[14]
          + .5 * e[28] * ep2[13];
  a[189] =   .5 * ep2[20] * e[35] + .5 * ep2[23] * e[35] + 1.5 * e[35] * ep2[26]
           + .5 * e[35] * ep2[25] + .5 * e[35] * ep2[24] - .5 * e[35] * ep2[18]
           - .5 * e[35] * ep2[19] - .5 * e[35] * ep2[22] - .5 * e[35] * ep2[21]
           + e[20] * e[27] * e[24] + e[20] * e[18] * e[33]
           + e[20] * e[28] * e[25] + e[20] * e[19] * e[34]
           + e[20] * e[29] * e[26] + e[29] * e[19] * e[25]
           + e[29] * e[18] * e[24] + e[23] * e[30] * e[24]
           + e[23] * e[21] * e[33] + e[23] * e[31] * e[25]
           + e[23] * e[22] * e[34] + e[23] * e[32] * e[26]
           + e[32] * e[22] * e[25] + e[32] * e[21] * e[24]
           + e[26] * e[33] * e[24] + e[26] * e[34] * e[25]
           - e[26] * e[27] * e[18] - e[26] * e[30] * e[21]
           - e[26] * e[31] * e[22] - e[26] * e[28] * e[19];
  a[46] =   e[4] * e[2] * e[5] + .5 * e[1] * ep2[0] - .5 * e[1] * ep2[6]
          + e[7] * e[0] * e[6] + .5 * e[1] * ep2[7] + .5 * e[1] * ep2[4]
          - .5 * e[1] * ep2[8] + .5 * e[1] * ep2[2] - .5 * e[1] * ep2[3]
          + .5 * ep3[1] + e[7] * e[2] * e[8] - .5 * e[1] * ep2[5]
          + e[4] * e[0] * e[3];
  a[188] =   -.5 * e[17] * ep2[13] - .5 * e[17] * ep2[9] + .5 * e[17] * ep2[16]
           + .5 * e[17] * ep2[15] + .5 * ep3[17] - .5 * e[17] * ep2[10]
           + e[14] * e[13] * e[16] + e[14] * e[12] * e[15]
           + .5 * ep2[14] * e[17] + e[11] * e[10] * e[16] - .5 * e[17] * ep2[12]
           + .5 * ep2[11] * e[17] + e[11] * e[9] * e[15];
  a[41] =   e[4] * e[27] * e[30] + e[4] * e[29] * e[32] + e[4] * e[28] * e[31]
          + e[31] * e[27] * e[3] + e[31] * e[0] * e[30] + e[31] * e[29] * e[5]
          + e[31] * e[2] * e[32] + e[7] * e[27] * e[33] + e[7] * e[29] * e[35]
          + e[7] * e[28] * e[34] + e[28] * e[27] * e[0] + e[28] * e[29] * e[2]
          + e[34] * e[27] * e[6] + e[34] * e[0] * e[33] + e[34] * e[29] * e[8]
          + e[34] * e[2] * e[35] - e[28] * e[32] * e[5] - e[28] * e[33] * e[6]
          - e[28] * e[30] * e[3] - e[28] * e[35] * e[8] + .5 * e[1] * ep2[27]
          + .5 * e[1] * ep2[29] + 1.5 * e[1] * ep2[28] + .5 * e[1] * ep2[31]
          - .5 * e[1] * ep2[32] - .5 * e[1] * ep2[33] - .5 * e[1] * ep2[30]
          + .5 * e[1] * ep2[34] - .5 * e[1] * ep2[35];
  a[187] =   .5 * ep2[11] * e[35] + .5 * e[35] * ep2[16] - .5 * e[35] * ep2[9]
           - .5 * e[35] * ep2[12] + .5 * e[35] * ep2[15] + 1.5 * e[35] * ep2[17]
           - .5 * e[35] * ep2[10] + .5 * e[35] * ep2[14] - .5 * e[35] * ep2[13]
           + e[11] * e[27] * e[15] + e[11] * e[9] * e[33]
           + e[11] * e[29] * e[17] + e[11] * e[28] * e[16]
           + e[11] * e[10] * e[34] + e[29] * e[9] * e[15]
           + e[29] * e[10] * e[16] + e[14] * e[30] * e[15]
           + e[14] * e[12] * e[33] + e[14] * e[32] * e[17]
           + e[14] * e[31] * e[16] + e[14] * e[13] * e[34]
           + e[32] * e[12] * e[15] + e[32] * e[13] * e[16]
           + e[17] * e[33] * e[15] + e[17] * e[34] * e[16]
           - e[17] * e[27] * e[9] - e[17] * e[30] * e[12]
           - e[17] * e[28] * e[10] - e[17] * e[31] * e[13];
  a[40] =   e[34] * e[27] * e[33] + e[34] * e[29] * e[35] - .5 * e[28] * ep2[30]
          - .5 * e[28] * ep2[35] + .5 * ep3[28] + .5 * e[28] * ep2[27]
          + .5 * e[28] * ep2[29] + e[31] * e[27] * e[30] + e[31] * e[29] * e[32]
          - .5 * e[28] * ep2[32] - .5 * e[28] * ep2[33] + .5 * e[28] * ep2[31]
          + .5 * e[28] * ep2[34];
  a[186] =   .5 * ep2[5] * e[8] + e[2] * e[0] * e[6] + .5 * ep2[2] * e[8]
           + .5 * ep3[8] - .5 * e[8] * ep2[0] + e[5] * e[4] * e[7]
           + e[5] * e[3] * e[6] + .5 * e[8] * ep2[7] + e[2] * e[1] * e[7]
           - .5 * e[8] * ep2[1] - .5 * e[8] * ep2[4] - .5 * e[8] * ep2[3]
           + .5 * e[8] * ep2[6];
  a[43] =   e[28] * e[27] * e[9] + e[28] * e[29] * e[11]
          - e[28] * e[30] * e[12] + e[28] * e[31] * e[13]
          - e[28] * e[32] * e[14] - e[28] * e[33] * e[15]
          - e[28] * e[35] * e[17] + e[31] * e[27] * e[12]
          + e[31] * e[9] * e[30] + e[31] * e[29] * e[14] + e[31] * e[11] * e[32]
          + e[13] * e[27] * e[30] + e[13] * e[29] * e[32]
          + e[16] * e[27] * e[33] + e[16] * e[29] * e[35]
          + e[34] * e[27] * e[15] + e[34] * e[9] * e[33] + e[34] * e[29] * e[17]
          + e[34] * e[11] * e[35] + e[34] * e[28] * e[16] + .5 * e[10] * ep2[27]
          + .5 * e[10] * ep2[29] + 1.5 * e[10] * ep2[28] - .5 * e[10] * ep2[32]
          + .5 * e[10] * ep2[31] - .5 * e[10] * ep2[33] - .5 * e[10] * ep2[30]
          + .5 * e[10] * ep2[34] - .5 * e[10] * ep2[35];
  a[185] =   -.5 * e[35] * ep2[1] + .5 * e[35] * ep2[7] - .5 * e[35] * ep2[3]
           + .5 * ep2[2] * e[35] + 1.5 * e[35] * ep2[8] - .5 * e[35] * ep2[4]
           - .5 * e[35] * ep2[0] + .5 * e[35] * ep2[6] + .5 * e[35] * ep2[5]
           + e[2] * e[27] * e[6] + e[2] * e[0] * e[33] + e[2] * e[28] * e[7]
           + e[2] * e[1] * e[34] + e[2] * e[29] * e[8] - e[8] * e[27] * e[0]
           + e[8] * e[34] * e[7] + e[8] * e[32] * e[5] + e[8] * e[33] * e[6]
           - e[8] * e[30] * e[3] - e[8] * e[28] * e[1] - e[8] * e[31] * e[4]
           + e[29] * e[1] * e[7] + e[29] * e[0] * e[6] + e[5] * e[30] * e[6]
           + e[5] * e[3] * e[33] + e[5] * e[31] * e[7] + e[5] * e[4] * e[34]
           + e[32] * e[4] * e[7] + e[32] * e[3] * e[6];
  a[42] =   e[28] * e[27] * e[18] + e[28] * e[29] * e[20]
          + e[22] * e[27] * e[30] + e[22] * e[29] * e[32]
          + e[22] * e[28] * e[31] + e[31] * e[27] * e[21]
          + e[31] * e[18] * e[30] + e[31] * e[29] * e[23]
          + e[31] * e[20] * e[32] + e[25] * e[27] * e[33]
          + e[25] * e[29] * e[35] + e[25] * e[28] * e[34]
          + e[34] * e[27] * e[24] + e[34] * e[18] * e[33]
          + e[34] * e[29] * e[26] + e[34] * e[20] * e[35]
          - e[28] * e[33] * e[24] - e[28] * e[30] * e[21]
          - e[28] * e[35] * e[26] - e[28] * e[32] * e[23] - .5 * e[19] * ep2[33]
          - .5 * e[19] * ep2[30] - .5 * e[19] * ep2[35] + .5 * e[19] * ep2[27]
          + .5 * e[19] * ep2[29] + 1.5 * e[19] * ep2[28] + .5 * e[19] * ep2[31]
          + .5 * e[19] * ep2[34] - .5 * e[19] * ep2[32];
  a[184] =   e[23] * e[3] * e[15] - e[17] * e[19] * e[1] - e[17] * e[22] * e[4]
           - e[17] * e[18] * e[0] + e[17] * e[25] * e[7] + e[17] * e[24] * e[6]
           + e[14] * e[21] * e[6] + e[14] * e[3] * e[24] + e[14] * e[22] * e[7]
           + e[14] * e[4] * e[25] + e[14] * e[23] * e[8] - e[26] * e[10] * e[1]
           - e[26] * e[13] * e[4] + e[26] * e[16] * e[7] + e[26] * e[15] * e[6]
           - e[26] * e[9] * e[0] - e[26] * e[12] * e[3] + e[23] * e[12] * e[6]
           + e[11] * e[18] * e[6] + e[11] * e[0] * e[24] + e[11] * e[19] * e[7]
           + e[11] * e[1] * e[25] + e[11] * e[20] * e[8] + e[11] * e[2] * e[26]
           + e[20] * e[9] * e[6] + e[20] * e[0] * e[15] + e[20] * e[10] * e[7]
           + e[20] * e[1] * e[16] + e[20] * e[2] * e[17] + e[5] * e[21] * e[15]
           + e[5] * e[12] * e[24] + e[5] * e[23] * e[17] + e[5] * e[14] * e[26]
           + e[5] * e[22] * e[16] + e[5] * e[13] * e[25] + e[8] * e[24] * e[15]
           + 3. * e[8] * e[26] * e[17] + e[8] * e[25] * e[16]
           + e[2] * e[18] * e[15] + e[2] * e[9] * e[24] + e[2] * e[19] * e[16]
           + e[2] * e[10] * e[25] - e[17] * e[21] * e[3] + e[23] * e[4] * e[16]
           + e[23] * e[13] * e[7] - e[8] * e[18] * e[9] - e[8] * e[21] * e[12]
           - e[8] * e[19] * e[10] - e[8] * e[22] * e[13];
  a[54] =   e[13] * e[18] * e[12] + e[13] * e[9] * e[21] + e[13] * e[20] * e[14]
          + e[13] * e[11] * e[23] + e[13] * e[10] * e[22]
          + e[22] * e[11] * e[14] + e[22] * e[9] * e[12] + e[16] * e[18] * e[15]
          + e[16] * e[9] * e[24] + e[16] * e[20] * e[17] + e[16] * e[11] * e[26]
          + e[16] * e[10] * e[25] + e[25] * e[11] * e[17] + e[25] * e[9] * e[15]
          - e[10] * e[23] * e[14] - e[10] * e[24] * e[15]
          - e[10] * e[26] * e[17] + e[10] * e[20] * e[11] + e[10] * e[18] * e[9]
          - e[10] * e[21] * e[12] + .5 * e[19] * ep2[11] + .5 * e[19] * ep2[9]
          + 1.5 * e[19] * ep2[10] + .5 * e[19] * ep2[13] + .5 * e[19] * ep2[16]
          - .5 * e[19] * ep2[12] - .5 * e[19] * ep2[15] - .5 * e[19] * ep2[17]
          - .5 * e[19] * ep2[14];
  a[164] =   e[10] * e[18] * e[6] + e[10] * e[0] * e[24] + e[10] * e[19] * e[7]
           + e[10] * e[1] * e[25] + e[10] * e[20] * e[8] + e[10] * e[2] * e[26]
           + e[19] * e[9] * e[6] + e[19] * e[0] * e[15] + e[19] * e[1] * e[16]
           + e[19] * e[11] * e[8] + e[19] * e[2] * e[17] + e[4] * e[21] * e[15]
           + e[4] * e[12] * e[24] + e[4] * e[23] * e[17] + e[4] * e[14] * e[26]
           + e[4] * e[22] * e[16] + e[4] * e[13] * e[25] + e[7] * e[24] * e[15]
           + e[7] * e[26] * e[17] + 3. * e[7] * e[25] * e[16]
           + e[1] * e[18] * e[15] + e[1] * e[9] * e[24] + e[1] * e[20] * e[17]
           + e[1] * e[11] * e[26] - e[16] * e[21] * e[3] + e[16] * e[26] * e[8]
           - e[16] * e[20] * e[2] - e[16] * e[18] * e[0] - e[16] * e[23] * e[5]
           + e[16] * e[24] * e[6] + e[13] * e[21] * e[6] + e[13] * e[3] * e[24]
           + e[13] * e[22] * e[7] + e[13] * e[23] * e[8] + e[13] * e[5] * e[26]
           - e[25] * e[11] * e[2] + e[25] * e[15] * e[6] - e[25] * e[9] * e[0]
           - e[25] * e[14] * e[5] - e[25] * e[12] * e[3] + e[25] * e[17] * e[8]
           + e[22] * e[12] * e[6] + e[22] * e[3] * e[15] + e[22] * e[14] * e[8]
           + e[22] * e[5] * e[17] - e[7] * e[23] * e[14] - e[7] * e[20] * e[11]
           - e[7] * e[18] * e[9] - e[7] * e[21] * e[12];
  a[55] =   e[13] * e[9] * e[3] + e[13] * e[0] * e[12] + e[13] * e[10] * e[4]
          + e[13] * e[11] * e[5] + e[13] * e[2] * e[14] + e[16] * e[9] * e[6]
          + e[16] * e[0] * e[15] + e[16] * e[10] * e[7] + e[16] * e[11] * e[8]
          + e[16] * e[2] * e[17] + e[7] * e[11] * e[17] + e[7] * e[9] * e[15]
          + e[4] * e[11] * e[14] + e[4] * e[9] * e[12] + e[10] * e[9] * e[0]
          + e[10] * e[11] * e[2] - e[10] * e[15] * e[6] - e[10] * e[14] * e[5]
          - e[10] * e[12] * e[3] - e[10] * e[17] * e[8] + .5 * e[1] * ep2[11]
          + .5 * e[1] * ep2[9] + 1.5 * e[1] * ep2[10] - .5 * e[1] * ep2[12]
          - .5 * e[1] * ep2[15] - .5 * e[1] * ep2[17] - .5 * e[1] * ep2[14]
          + .5 * e[1] * ep2[13] + .5 * e[1] * ep2[16];
  a[165] =   e[1] * e[27] * e[6] + e[1] * e[0] * e[33] + e[1] * e[28] * e[7]
           + e[1] * e[29] * e[8] + e[1] * e[2] * e[35] - e[7] * e[27] * e[0]
           - e[7] * e[32] * e[5] + e[7] * e[33] * e[6] - e[7] * e[30] * e[3]
           + e[7] * e[35] * e[8] - e[7] * e[29] * e[2] + e[7] * e[31] * e[4]
           + e[28] * e[0] * e[6] + e[28] * e[2] * e[8] + e[4] * e[30] * e[6]
           + e[4] * e[3] * e[33] + e[4] * e[32] * e[8] + e[4] * e[5] * e[35]
           + e[31] * e[3] * e[6] + e[31] * e[5] * e[8] + .5 * ep2[1] * e[34]
           + 1.5 * e[34] * ep2[7] + .5 * e[34] * ep2[4] - .5 * e[34] * ep2[0]
           + .5 * e[34] * ep2[6] - .5 * e[34] * ep2[5] - .5 * e[34] * ep2[3]
           - .5 * e[34] * ep2[2] + .5 * e[34] * ep2[8];
  a[52] =   e[4] * e[18] * e[3] + e[4] * e[0] * e[21] + e[4] * e[1] * e[22]
          + e[4] * e[20] * e[5] + e[4] * e[2] * e[23] + e[22] * e[0] * e[3]
          + e[22] * e[2] * e[5] + e[7] * e[18] * e[6] + e[7] * e[0] * e[24]
          + e[7] * e[1] * e[25] + e[7] * e[20] * e[8] + e[7] * e[2] * e[26]
          + e[25] * e[0] * e[6] + e[25] * e[2] * e[8] + e[1] * e[18] * e[0]
          + e[1] * e[20] * e[2] - e[1] * e[21] * e[3] - e[1] * e[26] * e[8]
          - e[1] * e[23] * e[5] - e[1] * e[24] * e[6] + .5 * e[19] * ep2[4]
          + .5 * e[19] * ep2[0] - .5 * e[19] * ep2[6] - .5 * e[19] * ep2[5]
          + 1.5 * e[19] * ep2[1] + .5 * e[19] * ep2[7] - .5 * e[19] * ep2[3]
          + .5 * e[19] * ep2[2] - .5 * e[19] * ep2[8];
  a[166] =  -.5 * e[7] * ep2[0] + e[4] * e[5] * e[8] + .5 * ep2[4] * e[7]
           - .5 * e[7] * ep2[2] + .5 * e[7] * ep2[8] - .5 * e[7] * ep2[5]
           + .5 * e[7] * ep2[6] + e[1] * e[0] * e[6] + .5 * ep3[7]
           + e[4] * e[3] * e[6] + e[1] * e[2] * e[8] - .5 * e[7] * ep2[3]
           + .5 * ep2[1] * e[7];
  a[53] =  -e[1] * e[32] * e[23] - e[19] * e[32] * e[5] - e[19] * e[33] * e[6]
          - e[19] * e[30] * e[3] - e[19] * e[35] * e[8] - e[28] * e[21] * e[3]
          - e[28] * e[26] * e[8] - e[28] * e[23] * e[5] - e[28] * e[24] * e[6]
          + e[7] * e[27] * e[24] + e[7] * e[18] * e[33] + e[7] * e[29] * e[26]
          + e[7] * e[20] * e[35] + e[22] * e[27] * e[3] + e[22] * e[0] * e[30]
          + e[22] * e[29] * e[5] + e[22] * e[2] * e[32] + e[31] * e[18] * e[3]
          + e[31] * e[0] * e[21] + e[31] * e[20] * e[5] + e[31] * e[2] * e[23]
          + e[25] * e[27] * e[6] + e[25] * e[0] * e[33] + e[25] * e[28] * e[7]
          + e[25] * e[1] * e[34] + e[25] * e[29] * e[8] + e[25] * e[2] * e[35]
          + e[34] * e[18] * e[6] + e[34] * e[0] * e[24] + e[34] * e[19] * e[7]
          + e[34] * e[20] * e[8] + e[34] * e[2] * e[26] + e[1] * e[27] * e[18]
          + 3. * e[1] * e[28] * e[19] + e[1] * e[29] * e[20]
          + e[19] * e[27] * e[0] + e[19] * e[29] * e[2] + e[28] * e[18] * e[0]
          + e[28] * e[20] * e[2] + e[4] * e[27] * e[21] + e[4] * e[18] * e[30]
          + e[4] * e[28] * e[22] + e[4] * e[19] * e[31] + e[4] * e[29] * e[23]
          + e[4] * e[20] * e[32] - e[1] * e[33] * e[24] - e[1] * e[30] * e[21]
          - e[1] * e[35] * e[26] + e[1] * e[31] * e[22];
  a[167] =   e[10] * e[27] * e[15] + e[10] * e[9] * e[33]
           + e[10] * e[29] * e[17] + e[10] * e[11] * e[35]
           + e[10] * e[28] * e[16] + e[28] * e[11] * e[17]
           + e[28] * e[9] * e[15] + e[13] * e[30] * e[15] 
           + e[13] * e[12] * e[33] + e[13] * e[32] * e[17]
           + e[13] * e[14] * e[35] + e[13] * e[31] * e[16]
           + e[31] * e[14] * e[17] + e[31] * e[12] * e[15]
           + e[16] * e[33] * e[15] + e[16] * e[35] * e[17]
           - e[16] * e[27] * e[9] - e[16] * e[30] * e[12]
           - e[16] * e[32] * e[14] - e[16] * e[29] * e[11]
           + .5 * ep2[10] * e[34] + 1.5 * e[34] * ep2[16] - .5 * e[34] * ep2[9]
           - .5 * e[34] * ep2[11] - .5 * e[34] * ep2[12] + .5 * e[34] * ep2[15]
           + .5 * e[34] * ep2[17] - .5 * e[34] * ep2[14] + .5 * e[34] * ep2[13];
  a[50] =   .5 * e[19] * ep2[18] + .5 * e[19] * ep2[25] + .5 * e[19] * ep2[22]
          + e[25] * e[20] * e[26] - .5 * e[19] * ep2[21] + .5 * e[19] * ep2[20]
          - .5 * e[19] * ep2[26] - .5 * e[19] * ep2[23] - .5 * e[19] * ep2[24]
          + .5 * ep3[19] + e[22] * e[20] * e[23] + e[25] * e[18] * e[24]
          + e[22] * e[18] * e[21];
  a[160] =   .5 * e[34] * ep2[33] + .5 * e[34] * ep2[35] - .5 * e[34] * ep2[27]
           - .5 * e[34] * ep2[32] - .5 * e[34] * ep2[29] - .5 * e[34] * ep2[30]
           + .5 * ep2[28] * e[34] + e[31] * e[30] * e[33]
           + e[31] * e[32] * e[35] + e[28] * e[27] * e[33]
           + .5 * ep3[34] + e[28] * e[29] * e[35] + .5 * ep2[31] * e[34];
  a[51] =   e[4] * e[28] * e[13] + e[4] * e[10] * e[31] + e[7] * e[27] * e[15]
          + e[7] * e[9] * e[33] + e[7] * e[29] * e[17] + e[7] * e[11] * e[35]
          + e[7] * e[28] * e[16] + e[7] * e[10] * e[34] + e[1] * e[27] * e[9]
          + e[1] * e[29] * e[11] + 3. * e[1] * e[28] * e[10]
          + e[10] * e[27] * e[0] - e[10] * e[32] * e[5] - e[10] * e[33] * e[6]
          - e[10] * e[30] * e[3] - e[10] * e[35] * e[8] + e[10] * e[29] * e[2]
          + e[13] * e[27] * e[3] + e[13] * e[0] * e[30] + e[13] * e[1] * e[31]
          + e[13] * e[29] * e[5] + e[13] * e[2] * e[32] + e[28] * e[11] * e[2]
          - e[28] * e[15] * e[6] + e[28] * e[9] * e[0] - e[28] * e[14] * e[5]
          - e[28] * e[12] * e[3] - e[28] * e[17] * e[8] + e[31] * e[9] * e[3]
          + e[31] * e[0] * e[12] + e[31] * e[11] * e[5] + e[31] * e[2] * e[14]
          + e[16] * e[27] * e[6] + e[16] * e[0] * e[33] + e[16] * e[1] * e[34]
          + e[16] * e[29] * e[8] + e[16] * e[2] * e[35] - e[1] * e[30] * e[12]
          - e[1] * e[32] * e[14] - e[1] * e[33] * e[15] - e[1] * e[35] * e[17]
          + e[34] * e[9] * e[6] + e[34] * e[0] * e[15] + e[34] * e[11] * e[8]
          + e[34] * e[2] * e[17] + e[4] * e[27] * e[12] + e[4] * e[9] * e[30]
          + e[4] * e[29] * e[14] + e[4] * e[11] * e[32];
  a[161] =   e[4] * e[30] * e[33] + e[4] * e[32] * e[35] + e[4] * e[31] * e[34]
           + e[31] * e[30] * e[6] + e[31] * e[3] * e[33] + e[31] * e[32] * e[8]
           + e[31] * e[5] * e[35] + e[28] * e[27] * e[6] + e[28] * e[0] * e[33]
           + e[28] * e[29] * e[8] + e[28] * e[2] * e[35] + e[34] * e[33] * e[6]
           + e[34] * e[35] * e[8] - e[34] * e[27] * e[0] - e[34] * e[32] * e[5]
           - e[34] * e[30] * e[3] - e[34] * e[29] * e[2] + e[1] * e[27] * e[33]
           + e[1] * e[29] * e[35] + e[1] * e[28] * e[34] + .5 * ep2[31] * e[7]
           - .5 * e[7] * ep2[27] - .5 * e[7] * ep2[32] + .5 * e[7] * ep2[28]
           - .5 * e[7] * ep2[29] + .5 * e[7] * ep2[33] - .5 * e[7] * ep2[30]
           + 1.5 * e[7] * ep2[34] + .5 * e[7] * ep2[35];
  a[48] =  -.5 * e[10] * ep2[14] - .5 * e[10] * ep2[17] - .5 * e[10] * ep2[15]
          + e[13] * e[11] * e[14] + e[16] * e[11] * e[17] + .5 * e[10] * ep2[13]
          + e[13] * e[9] * e[12] - .5 * e[10] * ep2[12] + .5 * ep3[10]
          + e[16] * e[9] * e[15] + .5 * e[10] * ep2[16] + .5 * e[10] * ep2[11]
          + .5 * e[10] * ep2[9];
  a[162] =   e[22] * e[32] * e[35] + e[22] * e[31] * e[34]
           + e[31] * e[30] * e[24] + e[31] * e[21] * e[33]
           + e[31] * e[32] * e[26] + e[31] * e[23] * e[35]
           + e[34] * e[33] * e[24] + e[34] * e[35] * e[26]
           - e[34] * e[27] * e[18] - e[34] * e[30] * e[21]
           - e[34] * e[29] * e[20] - e[34] * e[32] * e[23]
           + e[19] * e[27] * e[33] + e[19] * e[29] * e[35]
           + e[19] * e[28] * e[34] + e[28] * e[27] * e[24]
           + e[28] * e[18] * e[33] + e[28] * e[29] * e[26]
           + e[28] * e[20] * e[35] + e[22] * e[30] * e[33]
           + .5 * ep2[28] * e[25] + .5 * ep2[31] * e[25] + .5 * e[25] * ep2[33]
           + .5 * e[25] * ep2[35] + 1.5 * e[25] * ep2[34] - .5 * e[25] * ep2[27]
           - .5 * e[25] * ep2[32] - .5 * e[25] * ep2[29] - .5 * e[25] * ep2[30];
  a[49] =   -e[19] * e[35] * e[26] - e[19] * e[32] * e[23]
          + e[19] * e[27] * e[18] + e[19] * e[29] * e[20]
          + e[22] * e[27] * e[21] + e[22] * e[18] * e[30]
          + e[22] * e[19] * e[31] + e[22] * e[29] * e[23]
          + e[22] * e[20] * e[32] + e[31] * e[18] * e[21]
          + e[31] * e[20] * e[23] + e[25] * e[27] * e[24]
          + e[25] * e[18] * e[33] + e[25] * e[19] * e[34]
          + e[25] * e[29] * e[26] + e[25] * e[20] * e[35]
          + e[34] * e[18] * e[24] + e[34] * e[20] * e[26]
          - e[19] * e[33] * e[24] - e[19] * e[30] * e[21]
          + 1.5 * e[28] * ep2[19] + .5 * e[28] * ep2[18] + .5 * e[28] * ep2[20]
          + .5 * e[28] * ep2[22] + .5 * e[28] * ep2[25] - .5 * e[28] * ep2[26]
          - .5 * e[28] * ep2[23] - .5 * e[28] * ep2[24] - .5 * e[28] * ep2[21];
  a[163] =   e[10] * e[27] * e[33] + e[10] * e[29] * e[35]
           + e[10] * e[28] * e[34] + e[34] * e[33] * e[15]
           + e[34] * e[35] * e[17] + e[28] * e[27] * e[15]
           + e[28] * e[9] * e[33] + e[28] * e[29] * e[17]
           + e[28] * e[11] * e[35] - e[34] * e[27] * e[9]
           - e[34] * e[30] * e[12] + e[34] * e[31] * e[13]
           - e[34] * e[32] * e[14] - e[34] * e[29] * e[11]
           + e[31] * e[30] * e[15] + e[31] * e[12] * e[33]
           + e[31] * e[32] * e[17] + e[31] * e[14] * e[35]
           + e[13] * e[30] * e[33] + e[13] * e[32] * e[35]
           - .5 * e[16] * ep2[27] - .5 * e[16] * ep2[32] + .5 * e[16] * ep2[28]
           - .5 * e[16] * ep2[29] + .5 * e[16] * ep2[31] + .5 * e[16] * ep2[33]
           - .5 * e[16] * ep2[30] + 1.5 * e[16] * ep2[34] + .5 * e[16] * ep2[35]
           ;
  a[63] =   e[29] * e[32] * e[14] - e[29] * e[33] * e[15]
          - e[29] * e[34] * e[16] + e[32] * e[27] * e[12] + e[32] * e[9] * e[30]
          + e[32] * e[28] * e[13] + e[32] * e[10] * e[31]
          + e[14] * e[27] * e[30] + e[14] * e[28] * e[31]
          + e[17] * e[27] * e[33] + e[17] * e[28] * e[34]
          + e[35] * e[27] * e[15] + e[35] * e[9] * e[33]
          + e[35] * e[29] * e[17] + e[35] * e[28] * e[16]
          + e[35] * e[10] * e[34] + e[29] * e[27] * e[9] + e[29] * e[28] * e[10]
          - e[29] * e[30] * e[12] - e[29] * e[31] * e[13] + .5 * e[11] * ep2[27]
          + 1.5 * e[11] * ep2[29] + .5 * e[11] * ep2[28] + .5 * e[11] * ep2[32]
          - .5 * e[11] * ep2[31] - .5 * e[11] * ep2[33] - .5 * e[11] * ep2[30]
          - .5 * e[11] * ep2[34] + .5 * e[11] * ep2[35];
  a[173] =   e[1] * e[20] * e[35] + e[19] * e[27] * e[6] + e[19] * e[0] * e[33]
           + e[19] * e[28] * e[7] + e[19] * e[29] * e[8] + e[19] * e[2] * e[35]
           + e[28] * e[18] * e[6] + e[28] * e[0] * e[24] + e[28] * e[20] * e[8]
           + e[28] * e[2] * e[26] + e[4] * e[30] * e[24] + e[4] * e[21] * e[33]
           + e[4] * e[31] * e[25] + e[4] * e[22] * e[34] + e[4] * e[32] * e[26]
           + e[4] * e[23] * e[35] - e[7] * e[27] * e[18] + e[7] * e[33] * e[24]
           - e[7] * e[30] * e[21] - e[7] * e[29] * e[20] + e[7] * e[35] * e[26]
           + e[7] * e[31] * e[22] - e[7] * e[32] * e[23] - e[25] * e[27] * e[0]
           - e[25] * e[32] * e[5] - e[25] * e[30] * e[3] - e[25] * e[29] * e[2]
           - e[34] * e[21] * e[3] - e[34] * e[20] * e[2] - e[34] * e[18] * e[0]
           - e[34] * e[23] * e[5] + e[22] * e[30] * e[6] + e[22] * e[3] * e[33]
           + e[22] * e[32] * e[8] + e[22] * e[5] * e[35] + e[31] * e[21] * e[6]
           + e[31] * e[3] * e[24] + e[31] * e[23] * e[8] + e[31] * e[5] * e[26]
           + e[34] * e[26] * e[8] + e[1] * e[27] * e[24] + e[1] * e[18] * e[33]
           + e[1] * e[28] * e[25] + e[1] * e[19] * e[34] + e[1] * e[29] * e[26]
           + e[34] * e[24] * e[6] + e[25] * e[33] * e[6]
           + 3. * e[25] * e[34] * e[7] + e[25] * e[35] * e[8];
  a[62] =   .5 * e[20] * ep2[27] + 1.5 * e[20] * ep2[29] + .5 * e[20] * ep2[28]
          + .5 * e[20] * ep2[32] + .5 * e[20] * ep2[35] - .5 * e[20] * ep2[31]
          - .5 * e[20] * ep2[33] - .5 * e[20] * ep2[30] - .5 * e[20] * ep2[34]
          + e[29] * e[27] * e[18] + e[29] * e[28] * e[19]
          + e[23] * e[27] * e[30] + e[23] * e[29] * e[32]
          + e[23] * e[28] * e[31] + e[32] * e[27] * e[21]
          + e[32] * e[18] * e[30] + e[32] * e[28] * e[22]
          + e[32] * e[19] * e[31] + e[26] * e[27] * e[33]
          + e[26] * e[29] * e[35] + e[26] * e[28] * e[34]
          + e[35] * e[27] * e[24] + e[35] * e[18] * e[33]
          + e[35] * e[28] * e[25] + e[35] * e[19] * e[34]
          - e[29] * e[33] * e[24] - e[29] * e[30] * e[21]
          - e[29] * e[31] * e[22] - e[29] * e[34] * e[25];
  a[172] =   e[19] * e[1] * e[7] + e[19] * e[0] * e[6] + e[19] * e[2] * e[8]
           + e[4] * e[21] * e[6] + e[4] * e[3] * e[24] + e[4] * e[22] * e[7]
           + e[4] * e[23] * e[8] + e[4] * e[5] * e[26] + e[22] * e[3] * e[6]
           + e[22] * e[5] * e[8] + e[7] * e[24] * e[6] + e[7] * e[26] * e[8]
           + e[1] * e[18] * e[6] + e[1] * e[0] * e[24] + e[1] * e[20] * e[8]
           + e[1] * e[2] * e[26] - e[7] * e[21] * e[3] - e[7] * e[20] * e[2]
           - e[7] * e[18] * e[0] - e[7] * e[23] * e[5] + .5 * e[25] * ep2[4]
           - .5 * e[25] * ep2[0] + .5 * e[25] * ep2[6] - .5 * e[25] * ep2[5]
           + .5 * e[25] * ep2[1] + 1.5 * e[25] * ep2[7] - .5 * e[25] * ep2[3]
           - .5 * e[25] * ep2[2] + .5 * e[25] * ep2[8];
  a[61] =   e[5] * e[27] * e[30] + e[5] * e[29] * e[32] + e[5] * e[28] * e[31]
          + e[32] * e[27] * e[3] + e[32] * e[0] * e[30] + e[32] * e[28] * e[4]
          + e[32] * e[1] * e[31] + e[8] * e[27] * e[33] + e[8] * e[29] * e[35]
          + e[8] * e[28] * e[34] + e[29] * e[27] * e[0] + e[29] * e[28] * e[1]
          + e[35] * e[27] * e[6] + e[35] * e[0] * e[33] + e[35] * e[28] * e[7]
          + e[35] * e[1] * e[34] - e[29] * e[34] * e[7] - e[29] * e[33] * e[6]
          - e[29] * e[30] * e[3] - e[29] * e[31] * e[4] + .5 * e[2] * ep2[27]
          + 1.5 * e[2] * ep2[29] + .5 * e[2] * ep2[28] + .5 * e[2] * ep2[32]
          - .5 * e[2] * ep2[31] - .5 * e[2] * ep2[33] - .5 * e[2] * ep2[30]
          - .5 * e[2] * ep2[34] + .5 * e[2] * ep2[35];
  a[175] =   e[13] * e[12] * e[6] + e[13] * e[3] * e[15] + e[13] * e[4] * e[16]
           + e[13] * e[14] * e[8] + e[13] * e[5] * e[17] + e[16] * e[15] * e[6]
           + e[16] * e[17] * e[8] + e[1] * e[11] * e[17] + e[1] * e[9] * e[15]
           + e[1] * e[10] * e[16] + e[4] * e[14] * e[17] + e[4] * e[12] * e[15]
           + e[10] * e[9] * e[6] + e[10] * e[0] * e[15] + e[10] * e[11] * e[8]
           + e[10] * e[2] * e[17] - e[16] * e[11] * e[2] - e[16] * e[9] * e[0]
           - e[16] * e[14] * e[5] - e[16] * e[12] * e[3] + .5 * ep2[13] * e[7]
           + 1.5 * ep2[16] * e[7] + .5 * e[7] * ep2[17] + .5 * e[7] * ep2[15]
           - .5 * e[7] * ep2[9] - .5 * e[7] * ep2[11] - .5 * e[7] * ep2[12]
           + .5 * e[7] * ep2[10] - .5 * e[7] * ep2[14];
  a[60] =   .5 * e[29] * ep2[32] + .5 * e[29] * ep2[35] - .5 * e[29] * ep2[31]
          - .5 * e[29] * ep2[33] - .5 * e[29] * ep2[30] - .5 * e[29] * ep2[34]
          + e[32] * e[27] * e[30] + .5 * ep3[29] + .5 * e[29] * ep2[28]
          + e[35] * e[28] * e[34] + .5 * e[29] * ep2[27] + e[35] * e[27] * e[33]
          + e[32] * e[28] * e[31];
  a[174] =   -e[16] * e[21] * e[12] + e[10] * e[18] * e[15]
           + e[10] * e[9] * e[24] + e[10] * e[20] * e[17]
           + e[10] * e[11] * e[26] + e[19] * e[11] * e[17]
           + e[19] * e[9] * e[15] + e[19] * e[10] * e[16]
           + e[13] * e[21] * e[15] + e[13] * e[12] * e[24]
           + e[13] * e[23] * e[17] + e[13] * e[14] * e[26]
           + e[13] * e[22] * e[16] + e[22] * e[14] * e[17]
           + e[22] * e[12] * e[15] + e[16] * e[24] * e[15]
           + e[16] * e[26] * e[17] - e[16] * e[23] * e[14]
           - e[16] * e[20] * e[11] - e[16] * e[18] * e[9] + .5 * ep2[13] * e[25]
           + 1.5 * e[25] * ep2[16] + .5 * e[25] * ep2[17] + .5 * e[25] * ep2[15]
           + .5 * ep2[10] * e[25] - .5 * e[25] * ep2[9] - .5 * e[25] * ep2[11]
           - .5 * e[25] * ep2[12] - .5 * e[25] * ep2[14];
  a[59] =   e[19] * e[20] * e[2] + e[22] * e[18] * e[3] + e[22] * e[0] * e[21]
          + e[22] * e[19] * e[4] + e[22] * e[20] * e[5] + e[22] * e[2] * e[23]
          - e[19] * e[21] * e[3] - e[19] * e[26] * e[8] + e[19] * e[25] * e[7]
          - e[19] * e[23] * e[5] - e[19] * e[24] * e[6] + e[4] * e[18] * e[21]
          + e[4] * e[20] * e[23] + e[25] * e[18] * e[6] + e[25] * e[0] * e[24]
          + e[25] * e[20] * e[8] + e[25] * e[2] * e[26] + e[7] * e[18] * e[24]
          + e[7] * e[20] * e[26] + e[19] * e[18] * e[0] + 1.5 * ep2[19] * e[1]
          + .5 * e[1] * ep2[22] + .5 * e[1] * ep2[18] + .5 * e[1] * ep2[20]
          + .5 * e[1] * ep2[25] - .5 * e[1] * ep2[26] - .5 * e[1] * ep2[23]
          - .5 * e[1] * ep2[24] - .5 * e[1] * ep2[21];
  a[169] =   e[19] * e[27] * e[24] + e[19] * e[18] * e[33]
           + e[19] * e[28] * e[25] + e[19] * e[29] * e[26]
           + e[19] * e[20] * e[35] + e[28] * e[18] * e[24]
           + e[28] * e[20] * e[26] + e[22] * e[30] * e[24]
           + e[22] * e[21] * e[33] + e[22] * e[31] * e[25]
           + e[22] * e[32] * e[26] + e[22] * e[23] * e[35]
           + e[31] * e[21] * e[24] + e[31] * e[23] * e[26]
           + e[25] * e[33] * e[24] + e[25] * e[35] * e[26]
           - e[25] * e[27] * e[18] - e[25] * e[30] * e[21]
           - e[25] * e[29] * e[20] - e[25] * e[32] * e[23]
           - .5 * e[34] * ep2[18] - .5 * e[34] * ep2[23] - .5 * e[34] * ep2[20]
           - .5 * e[34] * ep2[21] + .5 * ep2[19] * e[34] + .5 * ep2[22] * e[34]
           + 1.5 * e[34] * ep2[25] + .5 * e[34] * ep2[24] + .5 * e[34] * ep2[26]
           ;
  a[58] =   e[16] * e[0] * e[6] + e[16] * e[2] * e[8] + e[1] * e[11] * e[2]
          - e[1] * e[15] * e[6] + e[1] * e[9] * e[0] - e[1] * e[14] * e[5]
          - e[1] * e[12] * e[3] - e[1] * e[17] * e[8] + e[4] * e[9] * e[3]
          + e[4] * e[0] * e[12] + e[4] * e[1] * e[13] + e[4] * e[11] * e[5]
          + e[4] * e[2] * e[14] + e[13] * e[0] * e[3] + e[13] * e[2] * e[5]
          + e[7] * e[9] * e[6] + e[7] * e[0] * e[15] + e[7] * e[1] * e[16]
          + e[7] * e[11] * e[8] + e[7] * e[2] * e[17] - .5 * e[10] * ep2[6]
          - .5 * e[10] * ep2[5] - .5 * e[10] * ep2[3] - .5 * e[10] * ep2[8]
          + 1.5 * e[10] * ep2[1] + .5 * e[10] * ep2[0] + .5 * e[10] * ep2[2]
          + .5 * e[10] * ep2[4] + .5 * e[10] * ep2[7];
  a[168] =   e[13] * e[14] * e[17] + e[13] * e[12] * e[15]
           + e[10] * e[9] * e[15] + .5 * e[16] * ep2[15] - .5 * e[16] * ep2[11]
           - .5 * e[16] * ep2[12] - .5 * e[16] * ep2[14] + e[10] * e[11] * e[17]
           + .5 * ep2[10] * e[16] + .5 * ep3[16] - .5 * e[16] * ep2[9]
           + .5 * e[16] * ep2[17] + .5 * ep2[13] * e[16];
  a[57] =   e[10] * e[29] * e[20] + e[22] * e[27] * e[12] + e[22] * e[9] * e[30]
          + e[22] * e[29] * e[14] + e[22] * e[11] * e[32]
          + e[22] * e[10] * e[31] + e[31] * e[18] * e[12] + e[31] * e[9] * e[21]
          + e[31] * e[20] * e[14] + e[31] * e[11] * e[23]
          - e[10] * e[33] * e[24] - e[10] * e[30] * e[21]
          - e[10] * e[35] * e[26] - e[10] * e[32] * e[23]
          + e[10] * e[34] * e[25] + e[19] * e[27] * e[9] + e[19] * e[29] * e[11]
          + e[28] * e[18] * e[9] + e[28] * e[20] * e[11] + e[16] * e[27] * e[24]
          + e[16] * e[18] * e[33] + e[16] * e[28] * e[25]
          + e[16] * e[19] * e[34] + e[16] * e[29] * e[26]
          + e[16] * e[20] * e[35] - e[19] * e[30] * e[12]
          - e[19] * e[32] * e[14] - e[19] * e[33] * e[15]
          - e[19] * e[35] * e[17] - e[28] * e[23] * e[14]
          - e[28] * e[24] * e[15] - e[28] * e[26] * e[17]
          - e[28] * e[21] * e[12] + e[25] * e[27] * e[15] + e[25] * e[9] * e[33]
          + e[25] * e[29] * e[17] + e[25] * e[11] * e[35]
          + e[34] * e[18] * e[15] + e[34] * e[9] * e[24] + e[34] * e[20] * e[17]
          + e[34] * e[11] * e[26] + e[13] * e[27] * e[21]
          + e[13] * e[18] * e[30] + e[13] * e[28] * e[22]
          + e[13] * e[19] * e[31] + e[13] * e[29] * e[23]
          + e[13] * e[20] * e[32] + e[10] * e[27] * e[18]
          + 3. * e[10] * e[28] * e[19];
  a[171] =   e[4] * e[30] * e[15] + e[4] * e[12] * e[33] + e[4] * e[32] * e[17]
           + e[4] * e[14] * e[35] + e[4] * e[31] * e[16] + e[4] * e[13] * e[34]
           + e[7] * e[33] * e[15] + e[7] * e[35] * e[17]
           + 3. * e[7] * e[34] * e[16] + e[1] * e[27] * e[15]
           + e[1] * e[9] * e[33] + e[1] * e[29] * e[17] + e[1] * e[11] * e[35]
           + e[1] * e[28] * e[16] + e[1] * e[10] * e[34] - e[16] * e[27] * e[0]
           - e[16] * e[32] * e[5] + e[16] * e[33] * e[6] - e[16] * e[30] * e[3]
           + e[16] * e[35] * e[8] - e[16] * e[29] * e[2] + e[13] * e[30] * e[6]
           + e[13] * e[3] * e[33] + e[13] * e[31] * e[7] + e[13] * e[32] * e[8]
           + e[13] * e[5] * e[35] - e[34] * e[11] * e[2] + e[34] * e[15] * e[6]
           - e[34] * e[9] * e[0] - e[34] * e[14] * e[5] - e[34] * e[12] * e[3]
           + e[34] * e[17] * e[8] + e[31] * e[12] * e[6] + e[31] * e[3] * e[15]
           + e[31] * e[14] * e[8] + e[31] * e[5] * e[17] - e[7] * e[27] * e[9]
           - e[7] * e[30] * e[12] + e[7] * e[28] * e[10] - e[7] * e[32] * e[14]
           + e[10] * e[27] * e[6] + e[10] * e[0] * e[33] + e[10] * e[29] * e[8]
           + e[10] * e[2] * e[35] + e[28] * e[9] * e[6] + e[28] * e[0] * e[15]
           + e[28] * e[11] * e[8] + e[28] * e[2] * e[17] - e[7] * e[29] * e[11];
  a[56] =   e[22] * e[18] * e[12] + e[22] * e[9] * e[21] + e[22] * e[20] * e[14]
          + e[22] * e[11] * e[23] + e[22] * e[19] * e[13]
          + e[25] * e[18] * e[15] + e[25] * e[9] * e[24] + e[25] * e[20] * e[17]
          + e[25] * e[11] * e[26] + e[25] * e[19] * e[16]
          + e[16] * e[18] * e[24] + e[16] * e[20] * e[26]
          + e[13] * e[18] * e[21] + e[13] * e[20] * e[23] + e[19] * e[18] * e[9]
          + e[19] * e[20] * e[11] - e[19] * e[23] * e[14]
          - e[19] * e[24] * e[15] - e[19] * e[26] * e[17]
          - e[19] * e[21] * e[12] + .5 * e[10] * ep2[22] + .5 * e[10] * ep2[25]
          + 1.5 * e[10] * ep2[19] + .5 * e[10] * ep2[18] + .5 * e[10] * ep2[20]
          - .5 * e[10] * ep2[26] - .5 * e[10] * ep2[23] - .5 * e[10] * ep2[24]
          - .5 * e[10] * ep2[21];
  a[170] =   e[19] * e[20] * e[26] - .5 * e[25] * ep2[20]
           + e[22] * e[21] * e[24] + e[19] * e[18] * e[24]
           + .5 * ep2[22] * e[25] - .5 * e[25] * ep2[21] - .5 * e[25] * ep2[23]
           + .5 * ep2[19] * e[25] - .5 * e[25] * ep2[18] + .5 * e[25] * ep2[24]
           + .5 * e[25] * ep2[26] + .5 * ep3[25] + e[22] * e[23] * e[26];
  a[73] =   -e[20] * e[33] * e[6] - e[20] * e[30] * e[3] - e[20] * e[31] * e[4]
          - e[29] * e[21] * e[3] - e[29] * e[22] * e[4] - e[29] * e[25] * e[7]
          - e[29] * e[24] * e[6] + e[8] * e[27] * e[24] + e[8] * e[18] * e[33]
          + e[8] * e[28] * e[25] + e[8] * e[19] * e[34] + e[23] * e[27] * e[3]
          + e[23] * e[0] * e[30] + e[23] * e[28] * e[4] + e[23] * e[1] * e[31]
          + e[32] * e[18] * e[3] + e[32] * e[0] * e[21] + e[32] * e[19] * e[4]
          + e[32] * e[1] * e[22] + e[26] * e[27] * e[6] + e[26] * e[0] * e[33]
          + e[26] * e[28] * e[7] + e[26] * e[1] * e[34] + e[26] * e[29] * e[8]
          + e[26] * e[2] * e[35] + e[35] * e[18] * e[6] + e[35] * e[0] * e[24]
          + e[35] * e[19] * e[7] + e[35] * e[1] * e[25] + e[35] * e[20] * e[8]
          + e[2] * e[27] * e[18] + e[2] * e[28] * e[19]
          + 3. * e[2] * e[29] * e[20] + e[20] * e[27] * e[0]
          + e[20] * e[28] * e[1] + e[29] * e[18] * e[0] + e[29] * e[19] * e[1]
          + e[5] * e[27] * e[21] + e[5] * e[18] * e[30] + e[5] * e[28] * e[22]
          + e[5] * e[19] * e[31] + e[5] * e[29] * e[23] + e[5] * e[20] * e[32]
          - e[2] * e[33] * e[24] - e[2] * e[30] * e[21] - e[2] * e[31] * e[22]
          + e[2] * e[32] * e[23] - e[2] * e[34] * e[25] - e[20] * e[34] * e[7];
  a[72] =   e[5] * e[18] * e[3] + e[5] * e[0] * e[21] + e[5] * e[19] * e[4]
          + e[5] * e[1] * e[22] + e[5] * e[2] * e[23] + e[23] * e[1] * e[4]
          + e[23] * e[0] * e[3] + e[8] * e[18] * e[6] + e[8] * e[0] * e[24]
          + e[8] * e[19] * e[7] + e[8] * e[1] * e[25] + e[8] * e[2] * e[26]
          + e[26] * e[1] * e[7] + e[26] * e[0] * e[6] + e[2] * e[18] * e[0]
          + e[2] * e[19] * e[1] - e[2] * e[21] * e[3] - e[2] * e[22] * e[4]
          - e[2] * e[25] * e[7] - e[2] * e[24] * e[6] - .5 * e[20] * ep2[4]
          + .5 * e[20] * ep2[0] - .5 * e[20] * ep2[6] + .5 * e[20] * ep2[5]
          + .5 * e[20] * ep2[1] - .5 * e[20] * ep2[7] - .5 * e[20] * ep2[3]
          + 1.5 * e[20] * ep2[2] + .5 * e[20] * ep2[8];
  a[75] =   e[14] * e[9] * e[3] + e[14] * e[0] * e[12] + e[14] * e[10] * e[4]
          + e[14] * e[1] * e[13] + e[14] * e[11] * e[5] + e[17] * e[9] * e[6]
          + e[17] * e[0] * e[15] + e[17] * e[10] * e[7] + e[17] * e[1] * e[16]
          + e[17] * e[11] * e[8] + e[8] * e[9] * e[15] + e[8] * e[10] * e[16]
          + e[5] * e[9] * e[12] + e[5] * e[10] * e[13] + e[11] * e[9] * e[0]
          + e[11] * e[10] * e[1] - e[11] * e[13] * e[4] - e[11] * e[16] * e[7]
          - e[11] * e[15] * e[6] - e[11] * e[12] * e[3] + .5 * e[2] * ep2[14]
          + .5 * e[2] * ep2[17] + 1.5 * e[2] * ep2[11] + .5 * e[2] * ep2[9]
          + .5 * e[2] * ep2[10] - .5 * e[2] * ep2[16] - .5 * e[2] * ep2[12]
          - .5 * e[2] * ep2[15] - .5 * e[2] * ep2[13];
  a[74] =   e[14] * e[18] * e[12] + e[14] * e[9] * e[21] + e[14] * e[11] * e[23]
          + e[14] * e[19] * e[13] + e[14] * e[10] * e[22] + e[23] * e[9] * e[12]
          + e[23] * e[10] * e[13] + e[17] * e[18] * e[15] + e[17] * e[9] * e[24]
          + e[17] * e[11] * e[26] + e[17] * e[19] * e[16]
          + e[17] * e[10] * e[25] + e[26] * e[9] * e[15] + e[26] * e[10] * e[16]
          - e[11] * e[24] * e[15] - e[11] * e[25] * e[16] + e[11] * e[18] * e[9]
          - e[11] * e[21] * e[12] + e[11] * e[19] * e[10]
          - e[11] * e[22] * e[13] + 1.5 * e[20] * ep2[11] + .5 * e[20] * ep2[9]
          + .5 * e[20] * ep2[10] + .5 * e[20] * ep2[14] + .5 * e[20] * ep2[17]
          - .5 * e[20] * ep2[16] - .5 * e[20] * ep2[12] - .5 * e[20] * ep2[15]
          - .5 * e[20] * ep2[13];
  a[77] =   e[23] * e[10] * e[31] + e[32] * e[18] * e[12] + e[32] * e[9] * e[21]
          + e[32] * e[19] * e[13] + e[32] * e[10] * e[22]
          - e[11] * e[33] * e[24] - e[11] * e[30] * e[21]
          + e[11] * e[35] * e[26] - e[11] * e[31] * e[22]
          - e[11] * e[34] * e[25] + e[20] * e[27] * e[9] + e[20] * e[28] * e[10]
          + e[29] * e[18] * e[9] + e[29] * e[19] * e[10] + e[17] * e[27] * e[24]
          + e[17] * e[18] * e[33] + e[17] * e[28] * e[25]
          + e[17] * e[19] * e[34] + e[17] * e[29] * e[26]
          + e[17] * e[20] * e[35] - e[20] * e[30] * e[12]
          - e[20] * e[31] * e[13] - e[20] * e[33] * e[15]
          - e[20] * e[34] * e[16] - e[29] * e[24] * e[15]
          - e[29] * e[25] * e[16] - e[29] * e[21] * e[12]
          - e[29] * e[22] * e[13] + e[26] * e[27] * e[15] + e[26] * e[9] * e[33]
          + e[26] * e[28] * e[16] + e[26] * e[10] * e[34]
          + e[35] * e[18] * e[15] + e[35] * e[9] * e[24] + e[35] * e[19] * e[16]
          + e[35] * e[10] * e[25] + e[14] * e[27] * e[21]
          + e[14] * e[18] * e[30] + e[14] * e[28] * e[22]
          + e[14] * e[19] * e[31] + e[14] * e[29] * e[23] 
          + e[14] * e[20] * e[32] + e[11] * e[27] * e[18]
          + e[11] * e[28] * e[19] + 3. * e[11] * e[29] * e[20]
          + e[23] * e[27] * e[12] + e[23] * e[9] * e[30] + e[23] * e[11] * e[32]
          + e[23] * e[28] * e[13];
  a[76] =   e[23] * e[18] * e[12] + e[23] * e[9] * e[21] + e[23] * e[20] * e[14]
          + e[23] * e[19] * e[13] + e[23] * e[10] * e[22]
          + e[26] * e[18] * e[15] + e[26] * e[9] * e[24] + e[26] * e[20] * e[17]
          + e[26] * e[19] * e[16] + e[26] * e[10] * e[25]
          + e[17] * e[19] * e[25] + e[17] * e[18] * e[24]
          + e[14] * e[19] * e[22] + e[14] * e[18] * e[21] + e[20] * e[18] * e[9]
          + e[20] * e[19] * e[10] - e[20] * e[24] * e[15]
          - e[20] * e[25] * e[16] - e[20] * e[21] * e[12]
          - e[20] * e[22] * e[13] + .5 * e[11] * ep2[23] + .5 * e[11] * ep2[26]
          + .5 * e[11] * ep2[19] + .5 * e[11] * ep2[18] + 1.5 * e[11] * ep2[20]
          - .5 * e[11] * ep2[22] - .5 * e[11] * ep2[24] - .5 * e[11] * ep2[21]
          - .5 * e[11] * ep2[25];
  a[79] =  -e[20] * e[21] * e[3] + e[20] * e[26] * e[8] - e[20] * e[22] * e[4]
          - e[20] * e[25] * e[7] - e[20] * e[24] * e[6] + e[5] * e[19] * e[22]
          + e[5] * e[18] * e[21] + e[26] * e[18] * e[6] + e[26] * e[0] * e[24]
          + e[26] * e[19] * e[7] + e[26] * e[1] * e[25] + e[8] * e[19] * e[25]
          + e[8] * e[18] * e[24] + e[20] * e[18] * e[0] + e[20] * e[19] * e[1]
          + e[23] * e[18] * e[3] + e[23] * e[0] * e[21] + e[23] * e[19] * e[4]
          + e[23] * e[1] * e[22] + e[23] * e[20] * e[5] + 1.5 * ep2[20] * e[2]
          + .5 * e[2] * ep2[23] + .5 * e[2] * ep2[19] + .5 * e[2] * ep2[18]
          + .5 * e[2] * ep2[26] - .5 * e[2] * ep2[22] - .5 * e[2] * ep2[24]
          - .5 * e[2] * ep2[21] - .5 * e[2] * ep2[25];
  a[78] =  -e[2] * e[15] * e[6] + e[2] * e[9] * e[0] - e[2] * e[12] * e[3]
          + e[5] * e[9] * e[3] + e[5] * e[0] * e[12] + e[5] * e[10] * e[4]
          + e[5] * e[1] * e[13] + e[5] * e[2] * e[14] + e[14] * e[1] * e[4]
          + e[14] * e[0] * e[3] + e[8] * e[9] * e[6] + e[8] * e[0] * e[15]
          + e[8] * e[10] * e[7] + e[8] * e[1] * e[16] + e[8] * e[2] * e[17]
          + e[17] * e[1] * e[7] + e[17] * e[0] * e[6] + e[2] * e[10] * e[1]
          - e[2] * e[13] * e[4] - e[2] * e[16] * e[7] + .5 * e[11] * ep2[1]
          + .5 * e[11] * ep2[0] + 1.5 * e[11] * ep2[2] + .5 * e[11] * ep2[5]
          + .5 * e[11] * ep2[8] - .5 * e[11] * ep2[4] - .5 * e[11] * ep2[6]
          - .5 * e[11] * ep2[7] - .5 * e[11] * ep2[3];
  a[64] =   e[5] * e[19] * e[13] + e[5] * e[10] * e[22] + e[8] * e[18] * e[15]
          + e[8] * e[9] * e[24] + e[8] * e[20] * e[17] + e[8] * e[11] * e[26]
          + e[8] * e[19] * e[16] + e[8] * e[10] * e[25] + e[2] * e[18] * e[9]
          + e[2] * e[19] * e[10] - e[11] * e[21] * e[3] - e[11] * e[22] * e[4]
          - e[11] * e[25] * e[7] - e[11] * e[24] * e[6] + e[14] * e[18] * e[3]
          + e[14] * e[0] * e[21] + e[14] * e[19] * e[4] + e[14] * e[1] * e[22]
          + e[14] * e[2] * e[23] - e[20] * e[13] * e[4] - e[20] * e[16] * e[7]
          - e[20] * e[15] * e[6] - e[20] * e[12] * e[3] + e[23] * e[9] * e[3]
          + e[23] * e[0] * e[12] + e[23] * e[10] * e[4] + e[23] * e[1] * e[13]
          + e[17] * e[18] * e[6] + e[17] * e[0] * e[24] + e[17] * e[19] * e[7]
          + e[17] * e[1] * e[25] + e[17] * e[2] * e[26] - e[2] * e[24] * e[15]
          - e[2] * e[25] * e[16] - e[2] * e[21] * e[12] - e[2] * e[22] * e[13]
          + e[26] * e[9] * e[6] + e[26] * e[0] * e[15] + e[26] * e[10] * e[7]
          + e[26] * e[1] * e[16] + e[11] * e[18] * e[0] + e[11] * e[19] * e[1]
          + 3. * e[11] * e[20] * e[2] + e[20] * e[9] * e[0]
          + e[20] * e[10] * e[1] + e[5] * e[18] * e[12] + e[5] * e[9] * e[21]
          + e[5] * e[20] * e[14] + e[5] * e[11] * e[23];
  a[65] =   e[32] * e[1] * e[4] + e[32] * e[0] * e[3] + e[8] * e[27] * e[6]
          + e[8] * e[0] * e[33] + e[8] * e[28] * e[7] + e[8] * e[1] * e[34]
          + e[35] * e[1] * e[7] + e[35] * e[0] * e[6] + e[2] * e[27] * e[0]
          + e[2] * e[28] * e[1] - e[2] * e[34] * e[7] + e[2] * e[32] * e[5]
          - e[2] * e[33] * e[6] - e[2] * e[30] * e[3] + e[2] * e[35] * e[8]
          - e[2] * e[31] * e[4] + e[5] * e[27] * e[3] + e[5] * e[0] * e[30]
          + e[5] * e[28] * e[4] + e[5] * e[1] * e[31] + 1.5 * e[29] * ep2[2]
          - .5 * e[29] * ep2[4] + .5 * e[29] * ep2[0] - .5 * e[29] * ep2[6]
          + .5 * e[29] * ep2[5] + .5 * e[29] * ep2[1] - .5 * e[29] * ep2[7]
          - .5 * e[29] * ep2[3] + .5 * e[29] * ep2[8];
  a[66] =   e[5] * e[0] * e[3] + e[8] * e[1] * e[7] + e[8] * e[0] * e[6]
          + e[5] * e[1] * e[4] - .5 * e[2] * ep2[4] + .5 * ep3[2]
          + .5 * e[2] * ep2[1] - .5 * e[2] * ep2[3] + .5 * e[2] * ep2[0]
          + .5 * e[2] * ep2[8] + .5 * e[2] * ep2[5] - .5 * e[2] * ep2[6]
          - .5 * e[2] * ep2[7];
  a[67] =   e[35] * e[9] * e[15] + e[35] * e[10] * e[16] - e[11] * e[30] * e[12]
          - e[11] * e[31] * e[13] - e[11] * e[33] * e[15]
          - e[11] * e[34] * e[16] + e[11] * e[27] * e[9] + e[11] * e[28] * e[10]
          + e[14] * e[27] * e[12] + e[14] * e[9] * e[30] + e[14] * e[11] * e[32]
          + e[14] * e[28] * e[13] + e[14] * e[10] * e[31] + e[32] * e[9] * e[12]
          + e[32] * e[10] * e[13] + e[17] * e[27] * e[15] + e[17] * e[9] * e[33]
          + e[17] * e[11] * e[35] + e[17] * e[28] * e[16]
          + e[17] * e[10] * e[34] + 1.5 * e[29] * ep2[11] - .5 * e[29] * ep2[16]
          + .5 * e[29] * ep2[9] - .5 * e[29] * ep2[12] - .5 * e[29] * ep2[15]
          + .5 * e[29] * ep2[17] + .5 * e[29] * ep2[10] + .5 * e[29] * ep2[14]
          - .5 * e[29] * ep2[13];
  a[68] =   e[14] * e[9] * e[12] + e[17] * e[10] * e[16] + e[17] * e[9] * e[15]
          + .5 * ep3[11] + e[14] * e[10] * e[13] + .5 * e[11] * ep2[10]
          - .5 * e[11] * ep2[15] + .5 * e[11] * ep2[14] - .5 * e[11] * ep2[13]
          - .5 * e[11] * ep2[12] + .5 * e[11] * ep2[9] - .5 * e[11] * ep2[16]
          + .5 * e[11] * ep2[17];
  a[69] =   e[20] * e[27] * e[18] + e[20] * e[28] * e[19]
          + e[23] * e[27] * e[21] + e[23] * e[18] * e[30]
          + e[23] * e[28] * e[22] + e[23] * e[19] * e[31]
          + e[23] * e[20] * e[32] + e[32] * e[19] * e[22]
          + e[32] * e[18] * e[21] + e[26] * e[27] * e[24]
          + e[26] * e[18] * e[33] + e[26] * e[28] * e[25]
          + e[26] * e[19] * e[34] + e[26] * e[20] * e[35]
          + e[35] * e[19] * e[25] + e[35] * e[18] * e[24]
          - e[20] * e[33] * e[24] - e[20] * e[30] * e[21]
          - e[20] * e[31] * e[22] - e[20] * e[34] * e[25] + .5 * e[29] * ep2[23]
          + .5 * e[29] * ep2[26] - .5 * e[29] * ep2[22] - .5 * e[29] * ep2[24]
          - .5 * e[29] * ep2[21] - .5 * e[29] * ep2[25] + 1.5 * e[29] * ep2[20]
          + .5 * e[29] * ep2[19] + .5 * e[29] * ep2[18];
  a[70] =   .5 * e[20] * ep2[26] + .5 * e[20] * ep2[18] + .5 * ep3[20]
          + .5 * e[20] * ep2[19] + e[26] * e[18] * e[24] + .5 * e[20] * ep2[23]
          - .5 * e[20] * ep2[25] + e[23] * e[19] * e[22] - .5 * e[20] * ep2[24]
          - .5 * e[20] * ep2[21] - .5 * e[20] * ep2[22] + e[23] * e[18] * e[21]
          + e[26] * e[19] * e[25];
  a[71] =   e[8] * e[28] * e[16] + e[8] * e[10] * e[34] + e[2] * e[27] * e[9]
          + 3. * e[2] * e[29] * e[11] + e[2] * e[28] * e[10]
          + e[11] * e[27] * e[0] - e[11] * e[34] * e[7] - e[11] * e[33] * e[6]
          - e[11] * e[30] * e[3] + e[11] * e[28] * e[1] - e[11] * e[31] * e[4]
          + e[14] * e[27] * e[3] + e[14] * e[0] * e[30] + e[14] * e[28] * e[4]
          + e[14] * e[1] * e[31] + e[14] * e[2] * e[32] + e[29] * e[10] * e[1]
          - e[29] * e[13] * e[4] - e[29] * e[16] * e[7] - e[29] * e[15] * e[6]
          + e[29] * e[9] * e[0] - e[29] * e[12] * e[3] + e[32] * e[9] * e[3]
          + e[32] * e[0] * e[12] + e[32] * e[10] * e[4] + e[32] * e[1] * e[13]
          + e[17] * e[27] * e[6] + e[17] * e[0] * e[33] + e[17] * e[28] * e[7]
          + e[17] * e[1] * e[34] + e[17] * e[2] * e[35] - e[2] * e[30] * e[12]
          - e[2] * e[31] * e[13] - e[2] * e[33] * e[15] - e[2] * e[34] * e[16]
          + e[35] * e[9] * e[6] + e[35] * e[0] * e[15] + e[35] * e[10] * e[7]
          + e[35] * e[1] * e[16] + e[5] * e[27] * e[12] + e[5] * e[9] * e[30]
          + e[5] * e[29] * e[14] + e[5] * e[11] * e[32] + e[5] * e[28] * e[13]
          + e[5] * e[10] * e[31] + e[8] * e[27] * e[15] + e[8] * e[9] * e[33]
          + e[8] * e[29] * e[17] + e[8] * e[11] * e[35];
  a[91] =  -e[12] * e[34] * e[7] + e[12] * e[32] * e[5] - e[12] * e[35] * e[8]
          - e[12] * e[29] * e[2] - e[12] * e[28] * e[1] + e[12] * e[31] * e[4]
          - e[30] * e[11] * e[2] - e[30] * e[10] * e[1] + e[30] * e[13] * e[4]
          - e[30] * e[16] * e[7] + e[30] * e[14] * e[5] - e[30] * e[17] * e[8]
          + e[15] * e[3] * e[33] + e[15] * e[31] * e[7] + e[15] * e[4] * e[34]
          + e[15] * e[32] * e[8] + e[15] * e[5] * e[35] + e[3] * e[27] * e[9]
          - e[3] * e[28] * e[10] - e[3] * e[34] * e[16] - e[3] * e[35] * e[17]
          - e[3] * e[29] * e[11] + e[33] * e[13] * e[7] + e[33] * e[4] * e[16]
          + e[33] * e[14] * e[8] + e[33] * e[5] * e[17] + e[9] * e[28] * e[4]
          + e[9] * e[1] * e[31] + e[9] * e[29] * e[5] + e[9] * e[2] * e[32]
          + e[27] * e[10] * e[4] + e[27] * e[1] * e[13] + e[27] * e[11] * e[5]
          + e[27] * e[2] * e[14] + 3. * e[3] * e[30] * e[12]
          + e[3] * e[32] * e[14] + e[3] * e[31] * e[13] + e[6] * e[30] * e[15]
          + e[6] * e[12] * e[33] + e[6] * e[32] * e[17] + e[6] * e[14] * e[35]
          + e[6] * e[31] * e[16] + e[6] * e[13] * e[34] + e[0] * e[27] * e[12]
          + e[0] * e[9] * e[30] + e[0] * e[29] * e[14] + e[0] * e[11] * e[32]
          + e[0] * e[28] * e[13] + e[0] * e[10] * e[31];
  a[90] =   .5 * e[21] * ep2[24] - .5 * e[21] * ep2[25] + .5 * e[21] * ep2[23]
          - .5 * e[21] * ep2[26] + .5 * ep2[18] * e[21] + .5 * e[21] * ep2[22]
          - .5 * e[21] * ep2[20] + e[24] * e[22] * e[25] + e[24] * e[23] * e[26]
          - .5 * e[21] * ep2[19] + e[18] * e[19] * e[22] + e[18] * e[20] * e[23]
          + .5 * ep3[21];
  a[89] =  -.5 * e[30] * ep2[26] - .5 * e[30] * ep2[19] - .5 * e[30] * ep2[20]
          - .5 * e[30] * ep2[25] + .5 * ep2[18] * e[30] + 1.5 * e[30] * ep2[21]
          + .5 * e[30] * ep2[22] + .5 * e[30] * ep2[23] + .5 * e[30] * ep2[24]
          + e[18] * e[27] * e[21] + e[18] * e[28] * e[22]
          + e[18] * e[19] * e[31] + e[18] * e[29] * e[23]
          + e[18] * e[20] * e[32] + e[27] * e[19] * e[22]
          + e[27] * e[20] * e[23] + e[21] * e[31] * e[22]
          + e[21] * e[32] * e[23] + e[24] * e[21] * e[33]
          + e[24] * e[31] * e[25] + e[24] * e[22] * e[34]
          + e[24] * e[32] * e[26] + e[24] * e[23] * e[35]
          + e[33] * e[22] * e[25] + e[33] * e[23] * e[26]
          - e[21] * e[29] * e[20] - e[21] * e[35] * e[26]
          - e[21] * e[28] * e[19] - e[21] * e[34] * e[25];
  a[88] =   .5 * e[12] * ep2[15] - .5 * e[12] * ep2[17] + e[15] * e[13] * e[16]
          - .5 * e[12] * ep2[10] + e[15] * e[14] * e[17] - .5 * e[12] * ep2[16]
          - .5 * e[12] * ep2[11] + e[9] * e[10] * e[13] + .5 * e[12] * ep2[13]
          + .5 * ep2[9] * e[12] + .5 * ep3[12] + e[9] * e[11] * e[14]
          + .5 * e[12] * ep2[14];
  a[95] =   e[12] * e[13] * e[4] + e[12] * e[14] * e[5] + e[15] * e[12] * e[6]
          + e[15] * e[13] * e[7] + e[15] * e[4] * e[16] + e[15] * e[14] * e[8]
          + e[15] * e[5] * e[17] + e[6] * e[14] * e[17] + e[6] * e[13] * e[16]
          + e[0] * e[11] * e[14] + e[0] * e[9] * e[12] + e[0] * e[10] * e[13]
          + e[9] * e[10] * e[4] + e[9] * e[1] * e[13] + e[9] * e[11] * e[5]
          + e[9] * e[2] * e[14] - e[12] * e[11] * e[2] - e[12] * e[10] * e[1]
          - e[12] * e[16] * e[7] - e[12] * e[17] * e[8] + 1.5 * ep2[12] * e[3]
          + .5 * e[3] * ep2[15] - .5 * e[3] * ep2[16] + .5 * e[3] * ep2[9]
          - .5 * e[3] * ep2[11] - .5 * e[3] * ep2[17] - .5 * e[3] * ep2[10]
          + .5 * e[3] * ep2[14] + .5 * e[3] * ep2[13];
  a[94] =   e[18] * e[11] * e[14] + e[18] * e[9] * e[12] + e[18] * e[10] * e[13]
          + e[12] * e[23] * e[14] + e[12] * e[22] * e[13]
          + e[15] * e[12] * e[24] + e[15] * e[23] * e[17]
          + e[15] * e[14] * e[26] + e[15] * e[22] * e[16]
          + e[15] * e[13] * e[25] + e[24] * e[14] * e[17]
          + e[24] * e[13] * e[16] - e[12] * e[25] * e[16]
          - e[12] * e[26] * e[17] - e[12] * e[20] * e[11]
          - e[12] * e[19] * e[10] + e[9] * e[20] * e[14] + e[9] * e[11] * e[23]
          + e[9] * e[19] * e[13] + e[9] * e[10] * e[22] + .5 * ep2[9] * e[21]
          - .5 * e[21] * ep2[16] - .5 * e[21] * ep2[11] - .5 * e[21] * ep2[17]
          - .5 * e[21] * ep2[10] + 1.5 * e[21] * ep2[12] + .5 * e[21] * ep2[14]
          + .5 * e[21] * ep2[13] + .5 * e[21] * ep2[15];
  a[93] =  -e[21] * e[35] * e[8] - e[21] * e[29] * e[2] - e[21] * e[28] * e[1]
          + e[21] * e[31] * e[4] - e[30] * e[26] * e[8] - e[30] * e[20] * e[2]
          - e[30] * e[19] * e[1] + e[30] * e[22] * e[4] - e[30] * e[25] * e[7]
          + e[30] * e[23] * e[5] + e[6] * e[31] * e[25] + e[6] * e[22] * e[34]
          + e[6] * e[32] * e[26] + e[6] * e[23] * e[35] + e[24] * e[30] * e[6]
          + e[24] * e[3] * e[33] + e[24] * e[31] * e[7] + e[24] * e[4] * e[34]
          + e[24] * e[32] * e[8] + e[24] * e[5] * e[35] + e[33] * e[21] * e[6]
          + e[33] * e[22] * e[7] + e[33] * e[4] * e[25] + e[33] * e[23] * e[8]
          + e[33] * e[5] * e[26] + e[0] * e[27] * e[21] + e[0] * e[18] * e[30]
          + e[0] * e[28] * e[22] + e[0] * e[19] * e[31] + e[0] * e[29] * e[23]
          + e[0] * e[20] * e[32] + e[18] * e[27] * e[3] + e[18] * e[28] * e[4]
          + e[18] * e[1] * e[31] + e[18] * e[29] * e[5] + e[18] * e[2] * e[32]
          + e[27] * e[19] * e[4] + e[27] * e[1] * e[22] + e[27] * e[20] * e[5]
          + e[27] * e[2] * e[23] + 3. * e[3] * e[30] * e[21]
          + e[3] * e[31] * e[22] + e[3] * e[32] * e[23] - e[3] * e[29] * e[20]
          - e[3] * e[35] * e[26] - e[3] * e[28] * e[19] - e[3] * e[34] * e[25]
          - e[21] * e[34] * e[7] + e[21] * e[32] * e[5];
  a[92] =   e[18] * e[1] * e[4] + e[18] * e[0] * e[3] + e[18] * e[2] * e[5]
          + e[3] * e[22] * e[4] + e[3] * e[23] * e[5] + e[6] * e[3] * e[24]
          + e[6] * e[22] * e[7] + e[6] * e[4] * e[25] + e[6] * e[23] * e[8]
          + e[6] * e[5] * e[26] + e[24] * e[4] * e[7] + e[24] * e[5] * e[8]
          + e[0] * e[19] * e[4] + e[0] * e[1] * e[22] + e[0] * e[20] * e[5]
          + e[0] * e[2] * e[23] - e[3] * e[26] * e[8] - e[3] * e[20] * e[2]
          - e[3] * e[19] * e[1] - e[3] * e[25] * e[7] + .5 * e[21] * ep2[4]
          + .5 * e[21] * ep2[0] + .5 * e[21] * ep2[6] + .5 * e[21] * ep2[5]
          - .5 * e[21] * ep2[1] - .5 * e[21] * ep2[7] + 1.5 * e[21] * ep2[3]
          - .5 * e[21] * ep2[2] - .5 * e[21] * ep2[8];
  a[82] =   .5 * ep2[27] * e[21] + 1.5 * e[21] * ep2[30] + .5 * e[21] * ep2[32]
          + .5 * e[21] * ep2[31] + .5 * e[21] * ep2[33] - .5 * e[21] * ep2[28]
          - .5 * e[21] * ep2[29] - .5 * e[21] * ep2[34] - .5 * e[21] * ep2[35]
          + e[18] * e[27] * e[30] + e[18] * e[29] * e[32]
          + e[18] * e[28] * e[31] + e[27] * e[28] * e[22]
          + e[27] * e[19] * e[31] + e[27] * e[29] * e[23]
          + e[27] * e[20] * e[32] + e[30] * e[31] * e[22]
          + e[30] * e[32] * e[23] + e[24] * e[30] * e[33]
          + e[24] * e[32] * e[35] + e[24] * e[31] * e[34]
          + e[33] * e[31] * e[25] + e[33] * e[22] * e[34]
          + e[33] * e[32] * e[26] + e[33] * e[23] * e[35]
          - e[30] * e[29] * e[20] - e[30] * e[35] * e[26]
          - e[30] * e[28] * e[19] - e[30] * e[34] * e[25];
  a[192] =  -.5 * e[26] * ep2[4] - .5 * e[26] * ep2[0] + .5 * e[26] * ep2[6]
           + .5 * e[26] * ep2[5] - .5 * e[26] * ep2[1] + .5 * e[26] * ep2[7]
           - .5 * e[26] * ep2[3] + .5 * e[26] * ep2[2] + 1.5 * e[26] * ep2[8]
           + e[20] * e[0] * e[6] + e[20] * e[2] * e[8] + e[5] * e[21] * e[6]
           + e[5] * e[3] * e[24] + e[5] * e[22] * e[7] + e[5] * e[4] * e[25]
           + e[5] * e[23] * e[8] + e[23] * e[4] * e[7] + e[23] * e[3] * e[6]
           + e[8] * e[24] * e[6] + e[8] * e[25] * e[7] + e[2] * e[18] * e[6]
           + e[2] * e[0] * e[24] + e[2] * e[19] * e[7] + e[2] * e[1] * e[25]
           - e[8] * e[21] * e[3] - e[8] * e[19] * e[1] - e[8] * e[22] * e[4]
           - e[8] * e[18] * e[0] + e[20] * e[1] * e[7];
  a[83] =   e[9] * e[27] * e[30] + e[9] * e[29] * e[32] + e[9] * e[28] * e[31]
          + e[33] * e[30] * e[15] + e[33] * e[32] * e[17]
          + e[33] * e[14] * e[35] + e[33] * e[31] * e[16]
          + e[33] * e[13] * e[34] + e[27] * e[29] * e[14]
          + e[27] * e[11] * e[32] + e[27] * e[28] * e[13]
          + e[27] * e[10] * e[31] - e[30] * e[28] * e[10]
          + e[30] * e[31] * e[13] + e[30] * e[32] * e[14]
          - e[30] * e[34] * e[16] - e[30] * e[35] * e[17]
          - e[30] * e[29] * e[11] + e[15] * e[32] * e[35]
          + e[15] * e[31] * e[34] - .5 * e[12] * ep2[34] - .5 * e[12] * ep2[35]
          + .5 * e[12] * ep2[27] + .5 * e[12] * ep2[32] - .5 * e[12] * ep2[28]
          - .5 * e[12] * ep2[29] + .5 * e[12] * ep2[31] + .5 * e[12] * ep2[33]
          + 1.5 * e[12] * ep2[30];
  a[193] =   e[23] * e[30] * e[6] + e[23] * e[3] * e[33] + e[23] * e[31] * e[7]
           + e[23] * e[4] * e[34] + e[32] * e[21] * e[6] + e[32] * e[3] * e[24]
           + e[32] * e[22] * e[7] + e[32] * e[4] * e[25] + e[26] * e[33] * e[6]
           + e[26] * e[34] * e[7] + 3. * e[26] * e[35] * e[8]
           + e[35] * e[24] * e[6] + e[35] * e[25] * e[7] + e[2] * e[27] * e[24]
           + e[2] * e[18] * e[33] + e[2] * e[28] * e[25] + e[2] * e[19] * e[34]
           + e[2] * e[29] * e[26] + e[2] * e[20] * e[35] + e[20] * e[27] * e[6]
           + e[20] * e[0] * e[33] + e[20] * e[28] * e[7] + e[20] * e[1] * e[34]
           + e[20] * e[29] * e[8] + e[29] * e[18] * e[6] + e[29] * e[0] * e[24]
           + e[29] * e[19] * e[7] + e[29] * e[1] * e[25] + e[5] * e[30] * e[24]
           + e[5] * e[21] * e[33] + e[5] * e[31] * e[25] + e[5] * e[22] * e[34]
           + e[5] * e[32] * e[26] + e[5] * e[23] * e[35] - e[8] * e[27] * e[18]
           + e[8] * e[33] * e[24] - e[8] * e[30] * e[21] - e[8] * e[31] * e[22]
           + e[8] * e[32] * e[23] - e[8] * e[28] * e[19] + e[8] * e[34] * e[25]
           - e[26] * e[27] * e[0] - e[26] * e[30] * e[3] - e[26] * e[28] * e[1]
           - e[26] * e[31] * e[4] - e[35] * e[21] * e[3] - e[35] * e[19] * e[1]
           - e[35] * e[22] * e[4] - e[35] * e[18] * e[0];
  a[80] =   e[27] * e[29] * e[32] + e[27] * e[28] * e[31]
          + e[33] * e[32] * e[35] + e[33] * e[31] * e[34] + .5 * ep3[30]
          - .5 * e[30] * ep2[28] - .5 * e[30] * ep2[29] - .5 * e[30] * ep2[34]
          + .5 * e[30] * ep2[33] + .5 * ep2[27] * e[30] + .5 * e[30] * ep2[32]
          + .5 * e[30] * ep2[31] - .5 * e[30] * ep2[35];
  a[194] =  .5 * ep2[14] * e[26] + 1.5 * e[26] * ep2[17] + .5 * e[26] * ep2[15]
          + .5 * e[26] * ep2[16] + .5 * ep2[11] * e[26] - .5 * e[26] * ep2[9]
          - .5 * e[26] * ep2[12] - .5 * e[26] * ep2[10] - .5 * e[26] * ep2[13]
          + e[20] * e[11] * e[17] + e[20] * e[9] * e[15] + e[20] * e[10] * e[16]
          + e[14] * e[21] * e[15] + e[14] * e[12] * e[24]
          + e[14] * e[23] * e[17] + e[14] * e[22] * e[16]
          + e[14] * e[13] * e[25] + e[23] * e[12] * e[15]
          + e[23] * e[13] * e[16] + e[17] * e[24] * e[15]
          + e[17] * e[25] * e[16] - e[17] * e[18] * e[9] - e[17] * e[21] * e[12]
          - e[17] * e[19] * e[10] - e[17] * e[22] * e[13]
          + e[11] * e[18] * e[15] + e[11] * e[9] * e[24] + e[11] * e[19] * e[16]
          + e[11] * e[10] * e[25];
  a[81] =   e[0] * e[27] * e[30] + e[0] * e[29] * e[32] + e[0] * e[28] * e[31]
          + e[30] * e[31] * e[4] + e[30] * e[32] * e[5] + e[6] * e[30] * e[33]
          + e[6] * e[32] * e[35] + e[6] * e[31] * e[34] + e[27] * e[28] * e[4]
          + e[27] * e[1] * e[31] + e[27] * e[29] * e[5] + e[27] * e[2] * e[32]
          + e[33] * e[31] * e[7] + e[33] * e[4] * e[34] + e[33] * e[32] * e[8]
          + e[33] * e[5] * e[35] - e[30] * e[34] * e[7] - e[30] * e[35] * e[8]
          - e[30] * e[29] * e[2] - e[30] * e[28] * e[1] + 1.5 * e[3] * ep2[30]
          + .5 * e[3] * ep2[32] + .5 * e[3] * ep2[31] + .5 * e[3] * ep2[27]
          - .5 * e[3] * ep2[28] - .5 * e[3] * ep2[29] + .5 * e[3] * ep2[33]
          - .5 * e[3] * ep2[34] - .5 * e[3] * ep2[35];
  a[195] =   .5 * ep2[14] * e[8] + 1.5 * ep2[17] * e[8] + .5 * e[8] * ep2[15]
           + .5 * e[8] * ep2[16] - .5 * e[8] * ep2[9] + .5 * e[8] * ep2[11]
           - .5 * e[8] * ep2[12] - .5 * e[8] * ep2[10] - .5 * e[8] * ep2[13]
           + e[14] * e[12] * e[6] + e[14] * e[3] * e[15] + e[14] * e[13] * e[7]
           + e[14] * e[4] * e[16] + e[14] * e[5] * e[17] + e[17] * e[15] * e[6]
           + e[17] * e[16] * e[7] + e[2] * e[11] * e[17] + e[2] * e[9] * e[15]
           + e[2] * e[10] * e[16] + e[5] * e[12] * e[15] + e[5] * e[13] * e[16]
           + e[11] * e[9] * e[6] + e[11] * e[0] * e[15] + e[11] * e[10] * e[7]
           + e[11] * e[1] * e[16] - e[17] * e[10] * e[1] - e[17] * e[13] * e[4]
           - e[17] * e[9] * e[0] - e[17] * e[12] * e[3];
  a[86] =  -.5 * e[3] * ep2[1] - .5 * e[3] * ep2[7] + .5 * ep3[3]
          - .5 * e[3] * ep2[8] + e[0] * e[2] * e[5] + .5 * e[3] * ep2[6]
          + .5 * e[3] * ep2[4] - .5 * e[3] * ep2[2] + e[0] * e[1] * e[4]
          + e[6] * e[4] * e[7] + .5 * ep2[0] * e[3] + .5 * e[3] * ep2[5]
          + e[6] * e[5] * e[8];
  a[196] =   .5 * ep2[23] * e[17] + 1.5 * ep2[26] * e[17] + .5 * e[17] * ep2[25]
           + .5 * e[17] * ep2[24] - .5 * e[17] * ep2[18] - .5 * e[17] * ep2[19]
           + .5 * e[17] * ep2[20] - .5 * e[17] * ep2[22] - .5 * e[17] * ep2[21]
           + e[23] * e[21] * e[15] + e[23] * e[12] * e[24]
           + e[23] * e[14] * e[26] + e[23] * e[22] * e[16]
           + e[23] * e[13] * e[25] + e[26] * e[24] * e[15]
           + e[26] * e[25] * e[16] + e[11] * e[19] * e[25]
           + e[11] * e[18] * e[24] + e[11] * e[20] * e[26]
           + e[14] * e[22] * e[25] + e[14] * e[21] * e[24]
           + e[20] * e[18] * e[15] + e[20] * e[9] * e[24]
           + e[20] * e[19] * e[16] + e[20] * e[10] * e[25]
           - e[26] * e[18] * e[9] - e[26] * e[21] * e[12]
           - e[26] * e[19] * e[10] - e[26] * e[22] * e[13];
  a[87] =  -e[12] * e[34] * e[16] - e[12] * e[35] * e[17]
          - e[12] * e[29] * e[11] + e[9] * e[27] * e[12] + e[9] * e[29] * e[14]
          + e[9] * e[11] * e[32] + e[9] * e[28] * e[13] + e[9] * e[10] * e[31]
          + e[27] * e[11] * e[14] + e[27] * e[10] * e[13]
          + e[12] * e[32] * e[14] + e[12] * e[31] * e[13]
          + e[15] * e[12] * e[33] + e[15] * e[32] * e[17]
          + e[15] * e[14] * e[35] + e[15] * e[31] * e[16]
          + e[15] * e[13] * e[34] + e[33] * e[14] * e[17]
          + e[33] * e[13] * e[16] - e[12] * e[28] * e[10] + .5 * ep2[9] * e[30]
          - .5 * e[30] * ep2[16] - .5 * e[30] * ep2[11] + 1.5 * e[30] * ep2[12]
          + .5 * e[30] * ep2[15] - .5 * e[30] * ep2[17] - .5 * e[30] * ep2[10]
          + .5 * e[30] * ep2[14] + .5 * e[30] * ep2[13];
  a[197] =   e[32] * e[22] * e[16] + e[32] * e[13] * e[25]
           - e[17] * e[27] * e[18] + e[17] * e[33] * e[24]
           - e[17] * e[30] * e[21] + e[17] * e[29] * e[20]
           + 3. * e[17] * e[35] * e[26] - e[17] * e[31] * e[22]
           - e[17] * e[28] * e[19] + e[17] * e[34] * e[25]
           + e[20] * e[27] * e[15] + e[20] * e[9] * e[33]
           + e[20] * e[28] * e[16] + e[20] * e[10] * e[34]
           + e[29] * e[18] * e[15] + e[29] * e[9] * e[24]
           + e[29] * e[19] * e[16] + e[29] * e[10] * e[25]
           - e[26] * e[27] * e[9] - e[26] * e[30] * e[12]
           - e[26] * e[28] * e[10] - e[26] * e[31] * e[13]
           + e[26] * e[33] * e[15] + e[26] * e[34] * e[16]
           + e[35] * e[24] * e[15] + e[35] * e[25] * e[16]
           - e[35] * e[18] * e[9] - e[35] * e[21] * e[12]
           - e[35] * e[19] * e[10] - e[35] * e[22] * e[13] 
           + e[14] * e[30] * e[24] + e[14] * e[21] * e[33]
           + e[14] * e[31] * e[25] + e[14] * e[22] * e[34]
           + e[14] * e[32] * e[26] + e[14] * e[23] * e[35]
           + e[11] * e[27] * e[24] + e[11] * e[18] * e[33]
           + e[11] * e[28] * e[25] + e[11] * e[19] * e[34]
           + e[11] * e[29] * e[26] + e[11] * e[20] * e[35]
           + e[23] * e[30] * e[15] + e[23] * e[12] * e[33]
           + e[23] * e[32] * e[17] + e[23] * e[31] * e[16]
           + e[23] * e[13] * e[34] + e[32] * e[21] * e[15] 
           + e[32] * e[12] * e[24];
  a[84] =   e[6] * e[23] * e[17] + e[6] * e[14] * e[26] + e[6] * e[22] * e[16]
          + e[6] * e[13] * e[25] + e[0] * e[20] * e[14] + e[0] * e[11] * e[23]
          + e[0] * e[19] * e[13] + e[0] * e[10] * e[22] - e[12] * e[26] * e[8]
          - e[12] * e[20] * e[2] - e[12] * e[19] * e[1] + e[12] * e[22] * e[4]
          - e[12] * e[25] * e[7] + e[12] * e[23] * e[5] - e[21] * e[11] * e[2]
          - e[21] * e[10] * e[1] + e[21] * e[13] * e[4] - e[21] * e[16] * e[7]
          + e[21] * e[14] * e[5] - e[21] * e[17] * e[8] + e[15] * e[3] * e[24]
          + e[15] * e[22] * e[7] + e[15] * e[4] * e[25] + e[15] * e[23] * e[8]
          + e[15] * e[5] * e[26] - e[3] * e[25] * e[16] - e[3] * e[26] * e[17]
          - e[3] * e[20] * e[11] - e[3] * e[19] * e[10] + e[24] * e[13] * e[7]
          + e[24] * e[4] * e[16] + e[24] * e[14] * e[8] + e[24] * e[5] * e[17]
          + e[9] * e[18] * e[3] + e[9] * e[0] * e[21] + e[9] * e[19] * e[4]
          + e[9] * e[1] * e[22] + e[9] * e[20] * e[5] + e[9] * e[2] * e[23]
          + e[18] * e[0] * e[12] + e[18] * e[10] * e[4] + e[18] * e[1] * e[13]
          + e[18] * e[11] * e[5] + e[18] * e[2] * e[14]
          + 3. * e[3] * e[21] * e[12] + e[3] * e[23] * e[14]
          + e[3] * e[22] * e[13] + e[6] * e[21] * e[15] + e[6] * e[12] * e[24];
  a[198] =   .5 * ep2[5] * e[17] + 1.5 * e[17] * ep2[8] + .5 * e[17] * ep2[7]
           + .5 * e[17] * ep2[6] + .5 * ep2[2] * e[17] - .5 * e[17] * ep2[4]
           - .5 * e[17] * ep2[0] - .5 * e[17] * ep2[1] - .5 * e[17] * ep2[3]
           + e[11] * e[1] * e[7] + e[11] * e[0] * e[6] + e[11] * e[2] * e[8]
           + e[5] * e[12] * e[6] + e[5] * e[3] * e[15] + e[5] * e[13] * e[7]
           + e[5] * e[4] * e[16] + e[5] * e[14] * e[8] + e[14] * e[4] * e[7]
           + e[14] * e[3] * e[6] + e[8] * e[15] * e[6] + e[8] * e[16] * e[7]
           - e[8] * e[10] * e[1] - e[8] * e[13] * e[4] - e[8] * e[9] * e[0]
           - e[8] * e[12] * e[3] + e[2] * e[9] * e[6] + e[2] * e[0] * e[15]
           + e[2] * e[10] * e[7] + e[2] * e[1] * e[16];
  a[85] =   e[6] * e[4] * e[34] + e[6] * e[32] * e[8] + e[6] * e[5] * e[35]
          + e[33] * e[4] * e[7] + e[33] * e[5] * e[8] + e[0] * e[27] * e[3]
          + e[0] * e[28] * e[4] + e[0] * e[1] * e[31] + e[0] * e[29] * e[5]
          + e[0] * e[2] * e[32] - e[3] * e[34] * e[7] + e[3] * e[32] * e[5]
          + e[3] * e[33] * e[6] - e[3] * e[35] * e[8] - e[3] * e[29] * e[2]
          - e[3] * e[28] * e[1] + e[3] * e[31] * e[4] + e[27] * e[1] * e[4]
          + e[27] * e[2] * e[5] + e[6] * e[31] * e[7] + .5 * e[30] * ep2[4]
          + .5 * e[30] * ep2[6] + .5 * e[30] * ep2[5] - .5 * e[30] * ep2[1]
          - .5 * e[30] * ep2[7] - .5 * e[30] * ep2[2] - .5 * e[30] * ep2[8]
          + .5 * ep2[0] * e[30] + 1.5 * e[30] * ep2[3];
  a[199] =   .5 * ep2[23] * e[8] + 1.5 * ep2[26] * e[8] - .5 * e[8] * ep2[18]
           - .5 * e[8] * ep2[19] - .5 * e[8] * ep2[22] + .5 * e[8] * ep2[24]
           - .5 * e[8] * ep2[21] + .5 * e[8] * ep2[25] + .5 * ep2[20] * e[8]
           + e[20] * e[18] * e[6] + e[20] * e[0] * e[24] + e[20] * e[19] * e[7]
           + e[20] * e[1] * e[25] + e[20] * e[2] * e[26] + e[23] * e[21] * e[6]
           + e[23] * e[3] * e[24] + e[23] * e[22] * e[7] + e[23] * e[4] * e[25]
           + e[23] * e[5] * e[26] - e[26] * e[21] * e[3] - e[26] * e[19] * e[1]
           - e[26] * e[22] * e[4] - e[26] * e[18] * e[0] + e[26] * e[25] * e[7]
           + e[26] * e[24] * e[6] + e[2] * e[19] * e[25] + e[2] * e[18] * e[24]
           + e[5] * e[22] * e[25] + e[5] * e[21] * e[24];
  a[109] =   e[19] * e[27] * e[21] + e[19] * e[18] * e[30]
           + e[19] * e[28] * e[22] + e[19] * e[29] * e[23]
           + e[19] * e[20] * e[32] + e[28] * e[18] * e[21]
           + e[28] * e[20] * e[23] + e[22] * e[30] * e[21]
           + e[22] * e[32] * e[23] + e[25] * e[30] * e[24]
           + e[25] * e[21] * e[33] + e[25] * e[22] * e[34]
           + e[25] * e[32] * e[26] + e[25] * e[23] * e[35]
           + e[34] * e[21] * e[24] + e[34] * e[23] * e[26]
           - e[22] * e[27] * e[18] - e[22] * e[33] * e[24]
           - e[22] * e[29] * e[20] - e[22] * e[35] * e[26]
           + .5 * ep2[19] * e[31] + 1.5 * e[31] * ep2[22] + .5 * e[31] * ep2[21]
           + .5 * e[31] * ep2[23] + .5 * e[31] * ep2[25] - .5 * e[31] * ep2[26]
           - .5 * e[31] * ep2[18] - .5 * e[31] * ep2[20] - .5 * e[31] * ep2[24];
  a[108] =  -.5 * e[13] * ep2[15] + .5 * e[13] * ep2[16] + .5 * e[13] * ep2[12]
          + e[16] * e[12] * e[15] + .5 * ep3[13] + e[10] * e[11] * e[14]
          + .5 * e[13] * ep2[14] - .5 * e[13] * ep2[17] - .5 * e[13] * ep2[11]
          - .5 * e[13] * ep2[9] + .5 * ep2[10] * e[13] + e[10] * e[9] * e[12]
          + e[16] * e[14] * e[17];
  a[111] =  -e[13] * e[29] * e[2] - e[31] * e[11] * e[2] - e[31] * e[15] * e[6]
           - e[31] * e[9] * e[0] + e[31] * e[14] * e[5] + e[31] * e[12] * e[3]
           - e[31] * e[17] * e[8] + e[16] * e[30] * e[6] + e[16] * e[3] * e[33]
           + e[16] * e[4] * e[34] + e[16] * e[32] * e[8] + e[16] * e[5] * e[35]
           - e[4] * e[27] * e[9] + e[4] * e[28] * e[10] - e[4] * e[33] * e[15]
           - e[4] * e[35] * e[17] - e[4] * e[29] * e[11] + e[34] * e[12] * e[6]
           + e[34] * e[3] * e[15] + e[34] * e[14] * e[8] + e[34] * e[5] * e[17]
           + e[10] * e[27] * e[3] + e[10] * e[0] * e[30] + e[10] * e[29] * e[5]
           + e[10] * e[2] * e[32] + e[28] * e[9] * e[3] + e[28] * e[0] * e[12]
           + e[28] * e[11] * e[5] + e[28] * e[2] * e[14] + e[4] * e[30] * e[12]
           + e[4] * e[32] * e[14] + 3. * e[4] * e[31] * e[13]
           + e[7] * e[30] * e[15] + e[7] * e[12] * e[33] + e[7] * e[32] * e[17]
           + e[7] * e[14] * e[35] + e[7] * e[31] * e[16] + e[7] * e[13] * e[34]
           + e[1] * e[27] * e[12] + e[1] * e[9] * e[30] + e[1] * e[29] * e[14]
           + e[1] * e[11] * e[32] + e[1] * e[28] * e[13] + e[1] * e[10] * e[31]
           - e[13] * e[27] * e[0] + e[13] * e[32] * e[5] - e[13] * e[33] * e[6]
           + e[13] * e[30] * e[3] - e[13] * e[35] * e[8];
  a[110] =   e[25] * e[23] * e[26] + e[19] * e[20] * e[23]
           + e[19] * e[18] * e[21] + e[25] * e[21] * e[24] + .5 * ep3[22]
           + .5 * e[22] * ep2[23] + .5 * ep2[19] * e[22] - .5 * e[22] * ep2[18]
           - .5 * e[22] * ep2[24] + .5 * e[22] * ep2[21] + .5 * e[22] * ep2[25]
           - .5 * e[22] * ep2[20] - .5 * e[22] * ep2[26];
  a[105] =   e[34] * e[5] * e[8] + e[1] * e[27] * e[3] + e[1] * e[0] * e[30]
           + e[1] * e[28] * e[4] + e[1] * e[29] * e[5] + e[1] * e[2] * e[32]
           - e[4] * e[27] * e[0] + e[4] * e[34] * e[7] + e[4] * e[32] * e[5]
           - e[4] * e[33] * e[6] + e[4] * e[30] * e[3] - e[4] * e[35] * e[8]
           - e[4] * e[29] * e[2] + e[28] * e[0] * e[3] + e[28] * e[2] * e[5]
           + e[7] * e[30] * e[6] + e[7] * e[3] * e[33] + e[7] * e[32] * e[8]
           + e[7] * e[5] * e[35] + e[34] * e[3] * e[6] + .5 * ep2[1] * e[31]
           + 1.5 * e[31] * ep2[4] - .5 * e[31] * ep2[0] - .5 * e[31] * ep2[6]
           + .5 * e[31] * ep2[5] + .5 * e[31] * ep2[7] + .5 * e[31] * ep2[3]
           - .5 * e[31] * ep2[2] - .5 * e[31] * ep2[8];
  a[104] =   e[1] * e[20] * e[14] + e[1] * e[11] * e[23] + e[13] * e[21] * e[3]
           - e[13] * e[26] * e[8] - e[13] * e[20] * e[2] - e[13] * e[18] * e[0]
           + e[13] * e[23] * e[5] - e[13] * e[24] * e[6] - e[22] * e[11] * e[2]
           - e[22] * e[15] * e[6] - e[22] * e[9] * e[0] + e[22] * e[14] * e[5]
           + e[22] * e[12] * e[3] - e[22] * e[17] * e[8] + e[16] * e[21] * e[6]
           + e[16] * e[3] * e[24] + e[16] * e[4] * e[25] + e[16] * e[23] * e[8]
           + e[16] * e[5] * e[26] - e[4] * e[24] * e[15] - e[4] * e[26] * e[17]
           - e[4] * e[20] * e[11] - e[4] * e[18] * e[9] + e[25] * e[12] * e[6]
           + e[25] * e[3] * e[15] + e[25] * e[14] * e[8] + e[25] * e[5] * e[17]
           + e[10] * e[18] * e[3] + e[10] * e[0] * e[21] + e[10] * e[19] * e[4]
           + e[10] * e[1] * e[22] + e[10] * e[20] * e[5] + e[10] * e[2] * e[23]
           + e[19] * e[9] * e[3] + e[19] * e[0] * e[12] + e[19] * e[1] * e[13]
           + e[19] * e[11] * e[5] + e[19] * e[2] * e[14] + e[4] * e[21] * e[12]
           + e[4] * e[23] * e[14] + 3. * e[4] * e[22] * e[13]
           + e[7] * e[21] * e[15] + e[7] * e[12] * e[24] + e[7] * e[23] * e[17]
           + e[7] * e[14] * e[26] + e[7] * e[22] * e[16] + e[7] * e[13] * e[25]
           + e[1] * e[18] * e[12] + e[1] * e[9] * e[21];
  a[107] =   e[10] * e[27] * e[12] + e[10] * e[9] * e[30]
           + e[10] * e[29] * e[14] + e[10] * e[11] * e[32]
           + e[10] * e[28] * e[13] + e[28] * e[11] * e[14]
           + e[28] * e[9] * e[12] + e[13] * e[30] * e[12]
           + e[13] * e[32] * e[14] + e[16] * e[30] * e[15]
           + e[16] * e[12] * e[33] + e[16] * e[32] * e[17]
           + e[16] * e[14] * e[35] + e[16] * e[13] * e[34]
           + e[34] * e[14] * e[17] + e[34] * e[12] * e[15]
           - e[13] * e[27] * e[9] - e[13] * e[33] * e[15]
           - e[13] * e[35] * e[17] - e[13] * e[29] * e[11]
           + .5 * ep2[10] * e[31] + .5 * e[31] * ep2[16] - .5 * e[31] * ep2[9]
           - .5 * e[31] * ep2[11] + .5 * e[31] * ep2[12] - .5 * e[31] * ep2[15]
           - .5 * e[31] * ep2[17] + .5 * e[31] * ep2[14] + 1.5 * e[31] * ep2[13]
           ;
  a[106] =  -.5 * e[4] * ep2[6] - .5 * e[4] * ep2[0] + e[1] * e[2] * e[5]
           + .5 * e[4] * ep2[7] + e[1] * e[0] * e[3] + e[7] * e[5] * e[8]
           - .5 * e[4] * ep2[8] + .5 * e[4] * ep2[3] + .5 * e[4] * ep2[5]
           + e[7] * e[3] * e[6] - .5 * e[4] * ep2[2] + .5 * ep3[4]
           + .5 * ep2[1] * e[4];
  a[100] =   e[34] * e[32] * e[35] - .5 * e[31] * ep2[35] + .5 * e[31] * ep2[34]
           + .5 * ep2[28] * e[31] + .5 * ep3[31] + .5 * e[31] * ep2[32]
           + e[34] * e[30] * e[33] - .5 * e[31] * ep2[27] + .5 * e[31] * ep2[30]
           - .5 * e[31] * ep2[33] - .5 * e[31] * ep2[29] + e[28] * e[29] * e[32]
           + e[28] * e[27] * e[30];
  a[101] =   e[1] * e[27] * e[30] + e[1] * e[29] * e[32] + e[1] * e[28] * e[31]
           + e[31] * e[30] * e[3] + e[31] * e[32] * e[5] + e[7] * e[30] * e[33]
           + e[7] * e[32] * e[35] + e[7] * e[31] * e[34] + e[28] * e[27] * e[3]
           + e[28] * e[0] * e[30] + e[28] * e[29] * e[5] + e[28] * e[2] * e[32]
           + e[34] * e[30] * e[6] + e[34] * e[3] * e[33] + e[34] * e[32] * e[8]
           + e[34] * e[5] * e[35] - e[31] * e[27] * e[0] - e[31] * e[33] * e[6]
           - e[31] * e[35] * e[8] - e[31] * e[29] * e[2] + .5 * e[4] * ep2[30]
           + .5 * e[4] * ep2[32] + 1.5 * e[4] * ep2[31] - .5 * e[4] * ep2[27]
           + .5 * e[4] * ep2[28] - .5 * e[4] * ep2[29] - .5 * e[4] * ep2[33]
           + .5 * e[4] * ep2[34] - .5 * e[4] * ep2[35];
  a[102] =   .5 * e[22] * ep2[30] + .5 * e[22] * ep2[32] + 1.5 * e[22] * ep2[31]
           + .5 * e[22] * ep2[34] - .5 * e[22] * ep2[27] - .5 * e[22] * ep2[29]
           - .5 * e[22] * ep2[33] - .5 * e[22] * ep2[35] + e[28] * e[18] * e[30]
           + e[28] * e[29] * e[23] + e[28] * e[20] * e[32]
           + e[31] * e[30] * e[21] + e[31] * e[32] * e[23]
           + e[25] * e[30] * e[33] + e[25] * e[32] * e[35]
           + e[25] * e[31] * e[34] + e[34] * e[30] * e[24]
           + e[34] * e[21] * e[33] + e[34] * e[32] * e[26]
           + e[34] * e[23] * e[35] - e[31] * e[27] * e[18]
           - e[31] * e[33] * e[24] - e[31] * e[29] * e[20]
           - e[31] * e[35] * e[26] + e[19] * e[27] * e[30]
           + e[19] * e[29] * e[32] + e[19] * e[28] * e[31]
           + e[28] * e[27] * e[21] + .5 * ep2[28] * e[22];
  a[103] =   e[16] * e[30] * e[33] + e[16] * e[32] * e[35]
           + e[10] * e[27] * e[30] + e[10] * e[29] * e[32]
           + e[10] * e[28] * e[31] + e[34] * e[30] * e[15]
           + e[34] * e[12] * e[33] + e[34] * e[32] * e[17]
           + e[34] * e[14] * e[35] + e[34] * e[31] * e[16]
           + e[28] * e[27] * e[12] + e[28] * e[9] * e[30]
           + e[28] * e[29] * e[14] + e[28] * e[11] * e[32]
           - e[31] * e[27] * e[9] + e[31] * e[30] * e[12]
           + e[31] * e[32] * e[14] - e[31] * e[33] * e[15]
           - e[31] * e[35] * e[17] - e[31] * e[29] * e[11]
           - .5 * e[13] * ep2[27] + .5 * e[13] * ep2[32] + .5 * e[13] * ep2[28]
           - .5 * e[13] * ep2[29] + 1.5 * e[13] * ep2[31] - .5 * e[13] * ep2[33]
           + .5 * e[13] * ep2[30] + .5 * e[13] * ep2[34] - .5 * e[13] * ep2[35];
  a[96] =   e[21] * e[23] * e[14] + e[21] * e[22] * e[13]
          + e[24] * e[21] * e[15] + e[24] * e[23] * e[17]
          + e[24] * e[14] * e[26] + e[24] * e[22] * e[16]
          + e[24] * e[13] * e[25] + e[15] * e[22] * e[25]
          + e[15] * e[23] * e[26] + e[9] * e[19] * e[22] + e[9] * e[18] * e[21]
          + e[9] * e[20] * e[23] + e[18] * e[20] * e[14] + e[18] * e[11] * e[23]
          + e[18] * e[19] * e[13] + e[18] * e[10] * e[22]
          - e[21] * e[25] * e[16] - e[21] * e[26] * e[17]
          - e[21] * e[20] * e[11] - e[21] * e[19] * e[10]
          + 1.5 * ep2[21] * e[12] + .5 * e[12] * ep2[24] - .5 * e[12] * ep2[26]
          + .5 * e[12] * ep2[18] + .5 * e[12] * ep2[23] - .5 * e[12] * ep2[19]
          - .5 * e[12] * ep2[20] + .5 * e[12] * ep2[22] - .5 * e[12] * ep2[25];
  a[97] =  -e[12] * e[29] * e[20] - e[12] * e[35] * e[26]
          - e[12] * e[28] * e[19] - e[12] * e[34] * e[25]
          + e[18] * e[29] * e[14] + e[18] * e[11] * e[32]
          + e[18] * e[28] * e[13] + e[18] * e[10] * e[31]
          + e[27] * e[20] * e[14] + e[27] * e[11] * e[23]
          + e[27] * e[19] * e[13] + e[27] * e[10] * e[22]
          + e[15] * e[30] * e[24] + e[15] * e[21] * e[33]
          + e[15] * e[31] * e[25] + e[15] * e[22] * e[34]
          + e[15] * e[32] * e[26] + e[15] * e[23] * e[35]
          - e[21] * e[28] * e[10] - e[21] * e[34] * e[16]
          - e[21] * e[35] * e[17] - e[21] * e[29] * e[11]
          - e[30] * e[25] * e[16] - e[30] * e[26] * e[17]
          - e[30] * e[20] * e[11] - e[30] * e[19] * e[10]
          + e[24] * e[32] * e[17] + e[24] * e[14] * e[35]
          + e[24] * e[31] * e[16] + e[24] * e[13] * e[34]
          + e[33] * e[23] * e[17] + e[33] * e[14] * e[26]
          + e[33] * e[22] * e[16] + e[33] * e[13] * e[25]
          + 3. * e[12] * e[30] * e[21] + e[12] * e[31] * e[22]
          + e[12] * e[32] * e[23] + e[9] * e[27] * e[21] + e[9] * e[18] * e[30]
          + e[9] * e[28] * e[22] + e[9] * e[19] * e[31] + e[9] * e[29] * e[23]
          + e[9] * e[20] * e[32] + e[21] * e[32] * e[14] + e[21] * e[31] * e[13]
          + e[30] * e[23] * e[14] + e[30] * e[22] * e[13]
          + e[12] * e[27] * e[18] + e[12] * e[33] * e[24];
  a[98] =   e[0] * e[11] * e[5] + e[0] * e[2] * e[14] + e[9] * e[1] * e[4]
          + e[9] * e[0] * e[3] + e[9] * e[2] * e[5] + e[3] * e[13] * e[4]
          + e[3] * e[14] * e[5] + e[6] * e[3] * e[15] + e[6] * e[13] * e[7]
          + e[6] * e[4] * e[16] + e[6] * e[14] * e[8] + e[6] * e[5] * e[17]
          + e[15] * e[4] * e[7] + e[15] * e[5] * e[8] - e[3] * e[11] * e[2]
          - e[3] * e[10] * e[1] - e[3] * e[16] * e[7] - e[3] * e[17] * e[8]
          + e[0] * e[10] * e[4] + e[0] * e[1] * e[13] + 1.5 * e[12] * ep2[3]
          + .5 * e[12] * ep2[4] + .5 * e[12] * ep2[5] + .5 * e[12] * ep2[6]
          + .5 * ep2[0] * e[12] - .5 * e[12] * ep2[1] - .5 * e[12] * ep2[7]
          - .5 * e[12] * ep2[2] - .5 * e[12] * ep2[8];
  a[99] =   e[21] * e[24] * e[6] + e[0] * e[19] * e[22] + e[0] * e[20] * e[23]
          + e[24] * e[22] * e[7] + e[24] * e[4] * e[25] + e[24] * e[23] * e[8]
          + e[24] * e[5] * e[26] + e[6] * e[22] * e[25] + e[6] * e[23] * e[26]
          + e[18] * e[0] * e[21] + e[18] * e[19] * e[4] + e[18] * e[1] * e[22]
          + e[18] * e[20] * e[5] + e[18] * e[2] * e[23] + e[21] * e[22] * e[4]
          + e[21] * e[23] * e[5] - e[21] * e[26] * e[8] - e[21] * e[20] * e[2]
          - e[21] * e[19] * e[1] - e[21] * e[25] * e[7] + 1.5 * ep2[21] * e[3]
          + .5 * e[3] * ep2[22] + .5 * e[3] * ep2[23] + .5 * e[3] * ep2[24]
          - .5 * e[3] * ep2[26] - .5 * e[3] * ep2[19] - .5 * e[3] * ep2[20]
          - .5 * e[3] * ep2[25] + .5 * ep2[18] * e[3];
  a[127] =   e[11] * e[27] * e[12] + e[11] * e[9] * e[30]
           + e[11] * e[29] * e[14] + e[11] * e[28] * e[13]
           + e[11] * e[10] * e[31] + e[29] * e[9] * e[12]
           + e[29] * e[10] * e[13] + e[14] * e[30] * e[12]
           + e[14] * e[31] * e[13] + e[17] * e[30] * e[15]
           + e[17] * e[12] * e[33] + e[17] * e[14] * e[35]
           + e[17] * e[31] * e[16] + e[17] * e[13] * e[34]
           + e[35] * e[12] * e[15] + e[35] * e[13] * e[16]
           - e[14] * e[27] * e[9] - e[14] * e[28] * e[10]
           - e[14] * e[33] * e[15] - e[14] * e[34] * e[16]
           + .5 * ep2[11] * e[32] - .5 * e[32] * ep2[16] - .5 * e[32] * ep2[9]
           + .5 * e[32] * ep2[12] - .5 * e[32] * ep2[15] + .5 * e[32] * ep2[17]
           - .5 * e[32] * ep2[10] + 1.5 * e[32] * ep2[14] + .5 * e[32] * ep2[13]
           ;
  a[126] =   e[8] * e[3] * e[6] + .5 * ep2[2] * e[5] - .5 * e[5] * ep2[0]
           + .5 * e[5] * ep2[4] - .5 * e[5] * ep2[6] + .5 * e[5] * ep2[8]
           + e[8] * e[4] * e[7] + .5 * ep3[5] + e[2] * e[0] * e[3]
           + .5 * e[5] * ep2[3] - .5 * e[5] * ep2[7] + e[2] * e[1] * e[4]
           - .5 * e[5] * ep2[1];
  a[125] =   e[2] * e[27] * e[3] + e[2] * e[0] * e[30] + e[2] * e[28] * e[4]
           + e[2] * e[1] * e[31] + e[2] * e[29] * e[5] - e[5] * e[27] * e[0]
           - e[5] * e[34] * e[7] - e[5] * e[33] * e[6] + e[5] * e[30] * e[3]
           + e[5] * e[35] * e[8] - e[5] * e[28] * e[1] + e[5] * e[31] * e[4]
           + e[29] * e[1] * e[4] + e[29] * e[0] * e[3] + e[8] * e[30] * e[6]
           + e[8] * e[3] * e[33] + e[8] * e[31] * e[7] + e[8] * e[4] * e[34]
           + e[35] * e[4] * e[7] + e[35] * e[3] * e[6] + .5 * ep2[2] * e[32]
           + 1.5 * e[32] * ep2[5] + .5 * e[32] * ep2[4] - .5 * e[32] * ep2[0]
           - .5 * e[32] * ep2[6] - .5 * e[32] * ep2[1] - .5 * e[32] * ep2[7]
           + .5 * e[32] * ep2[3] + .5 * e[32] * ep2[8];
  a[124] =  -e[14] * e[19] * e[1] + e[14] * e[22] * e[4] - e[14] * e[18] * e[0]
            - e[14] * e[25] * e[7] - e[14] * e[24] * e[6] - e[23] * e[10] * e[1]
            + e[23] * e[13] * e[4] - e[23] * e[16] * e[7] - e[23] * e[15] * e[6]
            - e[23] * e[9] * e[0] + e[23] * e[12] * e[3] + e[17] * e[21] * e[6]
            + e[17] * e[3] * e[24] + e[17] * e[22] * e[7] + e[17] * e[4] * e[25]
            + e[17] * e[5] * e[26] - e[5] * e[24] * e[15] - e[5] * e[25] * e[16]
            - e[5] * e[18] * e[9] - e[5] * e[19] * e[10] + e[26] * e[12] * e[6]
            + e[26] * e[3] * e[15] + e[26] * e[13] * e[7] + e[26] * e[4] * e[16]
            + e[11] * e[18] * e[3] + e[11] * e[0] * e[21] + e[11] * e[19] * e[4]
            + e[11] * e[1] * e[22] + e[11] * e[20] * e[5] + e[11] * e[2] * e[23]
            + e[20] * e[9] * e[3] + e[20] * e[0] * e[12] + e[20] * e[10] * e[4]
            + e[20] * e[1] * e[13] + e[20] * e[2] * e[14] + e[5] * e[21] * e[12]
            + 3. * e[5] * e[23] * e[14] + e[5] * e[22] * e[13]
            + e[8] * e[21] * e[15] + e[8] * e[12] * e[24] + e[8] * e[23] * e[17]
            + e[8] * e[14] * e[26] + e[8] * e[22] * e[16] + e[8] * e[13] * e[25]
            + e[2] * e[18] * e[12] + e[2] * e[9] * e[21] + e[2] * e[19] * e[13]
            + e[2] * e[10] * e[22] + e[14] * e[21] * e[3];
  a[123] =  -.5 * e[14] * ep2[27] + 1.5 * e[14] * ep2[32] - .5 * e[14] * ep2[28]
           + .5 * e[14] * ep2[29] + .5 * e[14] * ep2[31] - .5 * e[14] * ep2[33]
           + .5 * e[14] * ep2[30] - .5 * e[14] * ep2[34] + .5 * e[14] * ep2[35]
           + e[11] * e[27] * e[30] + e[11] * e[29] * e[32]
           + e[11] * e[28] * e[31] + e[35] * e[30] * e[15]
           + e[35] * e[12] * e[33] + e[35] * e[32] * e[17]
           + e[35] * e[31] * e[16] + e[35] * e[13] * e[34]
           + e[29] * e[27] * e[12] + e[29] * e[9] * e[30]
           + e[29] * e[28] * e[13] + e[29] * e[10] * e[31]
           - e[32] * e[27] * e[9] + e[32] * e[30] * e[12]
           - e[32] * e[28] * e[10] + e[32] * e[31] * e[13]
           - e[32] * e[33] * e[15] - e[32] * e[34] * e[16]
           + e[17] * e[30] * e[33] + e[17] * e[31] * e[34];
  a[122] =  -.5 * e[23] * ep2[33] - .5 * e[23] * ep2[34] + .5 * ep2[29] * e[23]
           + .5 * e[23] * ep2[30] + 1.5 * e[23] * ep2[32] + .5 * e[23] * ep2[31]
           + .5 * e[23] * ep2[35] - .5 * e[23] * ep2[27] - .5 * e[23] * ep2[28]
           + e[32] * e[30] * e[21] + e[32] * e[31] * e[22]
           + e[26] * e[30] * e[33] + e[26] * e[32] * e[35]
           + e[26] * e[31] * e[34] + e[35] * e[30] * e[24]
           + e[35] * e[21] * e[33] + e[35] * e[31] * e[25]
           + e[35] * e[22] * e[34] - e[32] * e[27] * e[18]
           - e[32] * e[33] * e[24] - e[32] * e[28] * e[19] 
           - e[32] * e[34] * e[25] + e[20] * e[27] * e[30]
           + e[20] * e[29] * e[32] + e[20] * e[28] * e[31]
           + e[29] * e[27] * e[21] + e[29] * e[18] * e[30]
           + e[29] * e[28] * e[22] + e[29] * e[19] * e[31];
  a[121] =   e[2] * e[27] * e[30] + e[2] * e[29] * e[32] + e[2] * e[28] * e[31]
           + e[32] * e[30] * e[3] + e[32] * e[31] * e[4] + e[8] * e[30] * e[33]
           + e[8] * e[32] * e[35] + e[8] * e[31] * e[34] + e[29] * e[27] * e[3]
           + e[29] * e[0] * e[30] + e[29] * e[28] * e[4] + e[29] * e[1] * e[31]
           + e[35] * e[30] * e[6] + e[35] * e[3] * e[33] + e[35] * e[31] * e[7]
           + e[35] * e[4] * e[34] - e[32] * e[27] * e[0] - e[32] * e[34] * e[7]
           - e[32] * e[33] * e[6] - e[32] * e[28] * e[1] + .5 * e[5] * ep2[30]
           + 1.5 * e[5] * ep2[32] + .5 * e[5] * ep2[31] - .5 * e[5] * ep2[27]
           - .5 * e[5] * ep2[28] + .5 * e[5] * ep2[29] - .5 * e[5] * ep2[33]
           - .5 * e[5] * ep2[34] + .5 * e[5] * ep2[35];
  a[120] =   .5 * e[32] * ep2[31] + .5 * e[32] * ep2[35] - .5 * e[32] * ep2[27]
           + e[29] * e[27] * e[30] + e[29] * e[28] * e[31]
           + e[35] * e[30] * e[33] + e[35] * e[31] * e[34]
           + .5 * ep2[29] * e[32] + .5 * ep3[32] - .5 * e[32] * ep2[33]
           - .5 * e[32] * ep2[34] + .5 * e[32] * ep2[30] - .5 * e[32] * ep2[28];
  a[118] =   e[10] * e[1] * e[4] + e[10] * e[0] * e[3] + e[10] * e[2] * e[5]
           + e[4] * e[12] * e[3] + e[4] * e[14] * e[5] + e[7] * e[12] * e[6]
           + e[7] * e[3] * e[15] + e[7] * e[4] * e[16] + e[7] * e[14] * e[8]
           + e[7] * e[5] * e[17] + e[16] * e[3] * e[6] + e[16] * e[5] * e[8]
           - e[4] * e[11] * e[2] - e[4] * e[15] * e[6] - e[4] * e[9] * e[0]
           - e[4] * e[17] * e[8] + e[1] * e[9] * e[3] + e[1] * e[0] * e[12]
           + e[1] * e[11] * e[5] + e[1] * e[2] * e[14] + 1.5 * e[13] * ep2[4]
           + .5 * e[13] * ep2[3] + .5 * e[13] * ep2[5] + .5 * e[13] * ep2[7]
           + .5 * ep2[1] * e[13] - .5 * e[13] * ep2[0] - .5 * e[13] * ep2[6]
           - .5 * e[13] * ep2[2] - .5 * e[13] * ep2[8];
  a[119] =   e[25] * e[21] * e[6] + e[25] * e[3] * e[24] + e[25] * e[23] * e[8]
           + e[25] * e[5] * e[26] + e[7] * e[21] * e[24] + e[7] * e[23] * e[26]
           + e[19] * e[18] * e[3] + e[19] * e[0] * e[21] + e[19] * e[1] * e[22]
           + e[19] * e[20] * e[5] + e[19] * e[2] * e[23] + e[22] * e[21] * e[3]
           + e[22] * e[23] * e[5] - e[22] * e[26] * e[8] - e[22] * e[20] * e[2]
           - e[22] * e[18] * e[0] + e[22] * e[25] * e[7] - e[22] * e[24] * e[6]
           + e[1] * e[18] * e[21] + e[1] * e[20] * e[23] + .5 * e[4] * ep2[25]
           - .5 * e[4] * ep2[26] - .5 * e[4] * ep2[18] - .5 * e[4] * ep2[20]
           - .5 * e[4] * ep2[24] + .5 * ep2[19] * e[4] + 1.5 * ep2[22] * e[4]
           + .5 * e[4] * ep2[21] + .5 * e[4] * ep2[23];
  a[116] =   e[22] * e[21] * e[12] + e[22] * e[23] * e[14]
           + e[25] * e[21] * e[15] + e[25] * e[12] * e[24]
           + e[25] * e[23] * e[17] + e[25] * e[14] * e[26]
           + e[25] * e[22] * e[16] + e[16] * e[21] * e[24]
           + e[16] * e[23] * e[26] + e[10] * e[19] * e[22]
           + e[10] * e[18] * e[21] + e[10] * e[20] * e[23]
           + e[19] * e[18] * e[12] + e[19] * e[9] * e[21]
           + e[19] * e[20] * e[14] + e[19] * e[11] * e[23]
           - e[22] * e[24] * e[15] - e[22] * e[26] * e[17]
           - e[22] * e[20] * e[11] - e[22] * e[18] * e[9]
           - .5 * e[13] * ep2[26] - .5 * e[13] * ep2[18] + .5 * e[13] * ep2[23]
           + .5 * e[13] * ep2[19] - .5 * e[13] * ep2[20] - .5 * e[13] * ep2[24]
           + .5 * e[13] * ep2[21] + 1.5 * ep2[22] * e[13] + .5 * e[13] * ep2[25]
           ;
  a[117] =   e[13] * e[30] * e[21] + 3. * e[13] * e[31] * e[22]
           + e[13] * e[32] * e[23] + e[10] * e[27] * e[21]
           + e[10] * e[18] * e[30] + e[10] * e[28] * e[22]
           + e[10] * e[19] * e[31] + e[10] * e[29] * e[23]
           + e[10] * e[20] * e[32] + e[22] * e[30] * e[12]
           + e[22] * e[32] * e[14] + e[31] * e[21] * e[12]
           + e[31] * e[23] * e[14] - e[13] * e[27] * e[18]
           - e[13] * e[33] * e[24] - e[13] * e[29] * e[20]
           - e[13] * e[35] * e[26] + e[13] * e[28] * e[19]
           + e[13] * e[34] * e[25] + e[19] * e[27] * e[12]
           + e[19] * e[9] * e[30] + e[19] * e[29] * e[14]
           + e[19] * e[11] * e[32] + e[28] * e[18] * e[12]
           + e[28] * e[9] * e[21] + e[28] * e[20] * e[14]
           + e[28] * e[11] * e[23] + e[16] * e[30] * e[24]
           + e[16] * e[21] * e[33] + e[16] * e[31] * e[25]
           + e[16] * e[22] * e[34] + e[16] * e[32] * e[26]
           + e[16] * e[23] * e[35] - e[22] * e[27] * e[9]
           - e[22] * e[33] * e[15] - e[22] * e[35] * e[17]
           - e[22] * e[29] * e[11] - e[31] * e[24] * e[15]
           - e[31] * e[26] * e[17] - e[31] * e[20] * e[11]
           - e[31] * e[18] * e[9] + e[25] * e[30] * e[15]
           + e[25] * e[12] * e[33] + e[25] * e[32] * e[17]
           + e[25] * e[14] * e[35] + e[34] * e[21] * e[15]
           + e[34] * e[12] * e[24] + e[34] * e[23] * e[17]
           + e[34] * e[14] * e[26];
  a[114] =   e[19] * e[11] * e[14] + e[19] * e[9] * e[12]
           + e[19] * e[10] * e[13] + e[13] * e[21] * e[12]
           + e[13] * e[23] * e[14] + e[16] * e[21] * e[15]
           + e[16] * e[12] * e[24] + e[16] * e[23] * e[17]
           + e[16] * e[14] * e[26] + e[16] * e[13] * e[25]
           + e[25] * e[14] * e[17] + e[25] * e[12] * e[15]
           - e[13] * e[24] * e[15] - e[13] * e[26] * e[17]
           - e[13] * e[20] * e[11] - e[13] * e[18] * e[9]
           + e[10] * e[18] * e[12] + e[10] * e[9] * e[21]
           + e[10] * e[20] * e[14] + e[10] * e[11] * e[23]
           + 1.5 * e[22] * ep2[13] + .5 * e[22] * ep2[14] + .5 * e[22] * ep2[12]
           + .5 * e[22] * ep2[16] + .5 * ep2[10] * e[22] - .5 * e[22] * ep2[9]
           - .5 * e[22] * ep2[11] - .5 * e[22] * ep2[15] - .5 * e[22] * ep2[17];
  a[115] =   e[13] * e[12] * e[3] + e[13] * e[14] * e[5] + e[16] * e[12] * e[6]
           + e[16] * e[3] * e[15] + e[16] * e[13] * e[7] + e[16] * e[14] * e[8]
           + e[16] * e[5] * e[17] + e[7] * e[14] * e[17] + e[7] * e[12] * e[15]
           + e[1] * e[11] * e[14] + e[1] * e[9] * e[12] + e[1] * e[10] * e[13]
           + e[10] * e[9] * e[3] + e[10] * e[0] * e[12] + e[10] * e[11] * e[5]
           + e[10] * e[2] * e[14] - e[13] * e[11] * e[2] - e[13] * e[15] * e[6]
           - e[13] * e[9] * e[0] - e[13] * e[17] * e[8] + 1.5 * ep2[13] * e[4]
           + .5 * e[4] * ep2[16] - .5 * e[4] * ep2[9] - .5 * e[4] * ep2[11]
           + .5 * e[4] * ep2[12] - .5 * e[4] * ep2[15] - .5 * e[4] * ep2[17]
           + .5 * e[4] * ep2[10] + .5 * e[4] * ep2[14];
  a[112] =   e[19] * e[1] * e[4] + e[19] * e[0] * e[3] + e[19] * e[2] * e[5]
           + e[4] * e[21] * e[3] + e[4] * e[23] * e[5] + e[7] * e[21] * e[6]
           + e[7] * e[3] * e[24] + e[7] * e[4] * e[25] + e[7] * e[23] * e[8]
           + e[7] * e[5] * e[26] + e[25] * e[3] * e[6] + e[25] * e[5] * e[8]
           + e[1] * e[18] * e[3] + e[1] * e[0] * e[21] + e[1] * e[20] * e[5]
           + e[1] * e[2] * e[23] - e[4] * e[26] * e[8] - e[4] * e[20] * e[2]
           - e[4] * e[18] * e[0] - e[4] * e[24] * e[6] + 1.5 * e[22] * ep2[4]
           - .5 * e[22] * ep2[0] - .5 * e[22] * ep2[6] + .5 * e[22] * ep2[5]
           + .5 * e[22] * ep2[1] + .5 * e[22] * ep2[7] + .5 * e[22] * ep2[3]
           - .5 * e[22] * ep2[2] - .5 * e[22] * ep2[8];
  a[113] =  -e[31] * e[20] * e[2] - e[31] * e[18] * e[0] + e[31] * e[23] * e[5]
           - e[31] * e[24] * e[6] + e[7] * e[30] * e[24] + e[7] * e[21] * e[33]
           + e[7] * e[32] * e[26] + e[7] * e[23] * e[35] + e[25] * e[30] * e[6]
           + e[25] * e[3] * e[33] + e[25] * e[31] * e[7] + e[25] * e[4] * e[34]
           + e[25] * e[32] * e[8] + e[25] * e[5] * e[35] + e[34] * e[21] * e[6]
           + e[34] * e[3] * e[24] + e[34] * e[22] * e[7] + e[34] * e[23] * e[8]
           + e[34] * e[5] * e[26] + e[1] * e[27] * e[21] + e[1] * e[18] * e[30]
           + e[1] * e[28] * e[22] + e[1] * e[19] * e[31] + e[1] * e[29] * e[23]
           + e[1] * e[20] * e[32] + e[19] * e[27] * e[3] + e[19] * e[0] * e[30]
           + e[19] * e[28] * e[4] + e[19] * e[29] * e[5] + e[19] * e[2] * e[32]
           + e[28] * e[18] * e[3] + e[28] * e[0] * e[21] + e[28] * e[20] * e[5]
           + e[28] * e[2] * e[23] + e[4] * e[30] * e[21]
           + 3. * e[4] * e[31] * e[22] + e[4] * e[32] * e[23]
           - e[4] * e[27] * e[18] - e[4] * e[33] * e[24] - e[4] * e[29] * e[20]
           - e[4] * e[35] * e[26] - e[22] * e[27] * e[0] + e[22] * e[32] * e[5]
           - e[22] * e[33] * e[6] + e[22] * e[30] * e[3] - e[22] * e[35] * e[8]
           - e[22] * e[29] * e[2] + e[31] * e[21] * e[3] - e[31] * e[26] * e[8];

  int perm[20] = { 6, 8, 18, 15, 12, 5, 14, 7, 4, 11, 19, 13, 1, 16, 17, 3, 10, 
                   9, 2, 0 };
  double aa[200];
  for (int i = 0; i < 20; ++i)
    for (int j = 0; j < 10; ++j) 
      aa[i + j * 20] = a[perm[i] + j * 20];

  for (int i = 0; i < 200; ++i)
    a[i] = aa[i];
}

void FivePoint::RecoverPose(const Mat3& E, const Mat3X& pts0, const Mat3X& pts1, 
                            Mask* mask, int* nins, Mat34* Rt) {
  int i, n = pts0.cols();
  Mat3 R1, R2;
  Vec3 t1;
  DecomposeEssentialMat(E, &R1, &R2, &t1);

  Mat34 P0 = Mat::Identity(3, 4);
  std::vector<Mat34> Ps(4);
  std::vector<Mask> masks(4);
  Ps[0] << R1, t1;
  Ps[1] << R2, t1;
  Ps[2] << R1, -t1;
  Ps[3] << R2, -t1;

  // Do the cheirality check.
  // Notice here a threshold dist is used to filter
  // out far away points (i.e. infinite points) since
  // there depth may vary between postive and negtive.
  Eigen::ArrayXXd dist = Mat::Constant(1, n, 50.0);
  Eigen::ArrayXXd zeros = Mat::Zero(1, n);
  Eigen::ArrayXXd Q(4, n);
  
  for (i = 0; i < 4; ++i) {
    TriangulatePoints(P0, Ps[i], pts0, pts1, &Q);
    masks[i] = Mask(Q.row(2)> zeros);
    masks[i] = BitwiseAnd(Mask(Q.row(2) < dist), masks[i]);
    Q.block(0, 0, 3, n) = Ps[i] * Q.matrix();
    masks[i] = BitwiseAnd(Mask(Q.row(2) > zeros), masks[i]);
    masks[i] = BitwiseAnd(Mask(Q.row(2) < dist), masks[i]);
    masks[i] = BitwiseAnd(*mask, masks[i]);
  }

  int best_i = -1, best_good = -1, good;
  for (i = 0; i < 4; ++i) {
    good = masks[i].count();
    if (best_good < good) {
      best_i = i;
      best_good = good;
    }
  }

  *Rt = Ps[best_i];
  *nins = best_good;
  for (i = 0; i < n; ++i)
    (*mask)(i) = masks[best_i](i);
} 


void FivePoint::DecomposeEssentialMat(const Mat3& E, Mat3* R1, Mat3* R2,
                                      Vec3* t1) {
  Mat3 U, Vt;
  Eigen::JacobiSVD<Mat> svd(E, Eigen::ComputeFullU | Eigen::ComputeFullV);
  U = svd.matrixU();
  Vt = svd.matrixV().transpose();
  
  if (U.determinant() < 0) U *= -1.;
  if (Vt.determinant() < 0) Vt *= -1.;
  
  Mat3 W;
  W << 0, 1, 0, -1, 0, 0, 0, 0, 1;

  *R1 = U * W * Vt;
  *R2 = U * W.transpose() * Vt;
  *t1 = U.col(2);
}

void FivePoint::ComputeError(const Mat3X& pts0, const Mat3X& pts1,
                             const Mat& model, Mat1X* err) {
  int n = err->cols();
  double t = inlier_threshold_ * inlier_threshold_;
  Eigen::Map<const Mat3> em(model.data());
  for (int i = 0; i < n; i++) {
    Vec3 x1 = pts0.col(i);
    Vec3 x2 = pts1.col(i);
    Vec3 emx1 = em * x1;
    Vec3 emtx2 = em.transpose() * x2;
    double x2temx1 = x2.dot(emx1);

    double a = emx1[0] * emx1[0];
    double b = emx1[1] * emx1[1];
    double c = emtx2[0] * emtx2[0];
    double d = emtx2[1] * emtx2[1];
    double e = x2temx1 * x2temx1 / (a + b + c + d);

    (*err)(i) = (e > t)? t: e;
  }
}

}  // namespace rvslam
